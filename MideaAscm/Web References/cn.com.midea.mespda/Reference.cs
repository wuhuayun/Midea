//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace MideaAscm.cn.com.midea.mespda {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TransferServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class TransferService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoadProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScanCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback BtnDelHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPDownloadTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPQueryTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPScanCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPBtnDelHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPConfirmTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallWebMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTransferinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferScaninfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferLinkTruckIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferQueryDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProdTransferDeleteHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProdTransferCheckTruckNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProdTransferDeleteMutiHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxPrefixinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback do_post_boxLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNeedBusinessDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TransferService() {
            this.Url = global::MideaAscm.Properties.Settings.Default.MideaAscm_cn_com_midea_mespda_TransferService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoadProfileCompletedEventHandler LoadProfileCompleted;
        
        /// <remarks/>
        public event DownloadTransferCompletedEventHandler DownloadTransferCompleted;
        
        /// <remarks/>
        public event QueryTransferCompletedEventHandler QueryTransferCompleted;
        
        /// <remarks/>
        public event ScanCodeCompletedEventHandler ScanCodeCompleted;
        
        /// <remarks/>
        public event BtnDelHandleCompletedEventHandler BtnDelHandleCompleted;
        
        /// <remarks/>
        public event ConfirmTransferCompletedEventHandler ConfirmTransferCompleted;
        
        /// <remarks/>
        public event ERPDownloadTransferCompletedEventHandler ERPDownloadTransferCompleted;
        
        /// <remarks/>
        public event ERPQueryTransferCompletedEventHandler ERPQueryTransferCompleted;
        
        /// <remarks/>
        public event ERPScanCodeCompletedEventHandler ERPScanCodeCompleted;
        
        /// <remarks/>
        public event ERPBtnDelHandleCompletedEventHandler ERPBtnDelHandleCompleted;
        
        /// <remarks/>
        public event ERPConfirmTransferCompletedEventHandler ERPConfirmTransferCompleted;
        
        /// <remarks/>
        public event CallWebMethodCompletedEventHandler CallWebMethodCompleted;
        
        /// <remarks/>
        public event GetTransferPlanCompletedEventHandler GetTransferPlanCompleted;
        
        /// <remarks/>
        public event SaveTransferinfoCompletedEventHandler SaveTransferinfoCompleted;
        
        /// <remarks/>
        public event GetTransferScaninfoCompletedEventHandler GetTransferScaninfoCompleted;
        
        /// <remarks/>
        public event TransferLinkTruckIDCompletedEventHandler TransferLinkTruckIDCompleted;
        
        /// <remarks/>
        public event GetTransferQueryDetailInfoCompletedEventHandler GetTransferQueryDetailInfoCompleted;
        
        /// <remarks/>
        public event ProdTransferDeleteHandleCompletedEventHandler ProdTransferDeleteHandleCompleted;
        
        /// <remarks/>
        public event ProdTransferCheckTruckNoCompletedEventHandler ProdTransferCheckTruckNoCompleted;
        
        /// <remarks/>
        public event ProdTransferDeleteMutiHandleCompletedEventHandler ProdTransferDeleteMutiHandleCompleted;
        
        /// <remarks/>
        public event GetBoxPrefixCompletedEventHandler GetBoxPrefixCompleted;
        
        /// <remarks/>
        public event GetBoxPrefixinfoCompletedEventHandler GetBoxPrefixinfoCompleted;
        
        /// <remarks/>
        public event do_post_boxLoadCompletedEventHandler do_post_boxLoadCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event CheckNeedBusinessDateCompletedEventHandler CheckNeedBusinessDateCompleted;
        
        /// <remarks/>
        public event GetSysDateCompletedEventHandler GetSysDateCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage LoadProfile(string userCode, long orgID) {
            object[] results = this.Invoke("LoadProfile", new object[] {
                        userCode,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProfileAsync(string userCode, long orgID) {
            this.LoadProfileAsync(userCode, orgID, null);
        }
        
        /// <remarks/>
        public void LoadProfileAsync(string userCode, long orgID, object userState) {
            if ((this.LoadProfileOperationCompleted == null)) {
                this.LoadProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProfileOperationCompleted);
            }
            this.InvokeAsync("LoadProfile", new object[] {
                        userCode,
                        orgID}, this.LoadProfileOperationCompleted, userState);
        }
        
        private void OnLoadProfileOperationCompleted(object arg) {
            if ((this.LoadProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProfileCompleted(this, new LoadProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage DownloadTransfer(string transferNo, long orgID) {
            object[] results = this.Invoke("DownloadTransfer", new object[] {
                        transferNo,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadTransferAsync(string transferNo, long orgID) {
            this.DownloadTransferAsync(transferNo, orgID, null);
        }
        
        /// <remarks/>
        public void DownloadTransferAsync(string transferNo, long orgID, object userState) {
            if ((this.DownloadTransferOperationCompleted == null)) {
                this.DownloadTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadTransferOperationCompleted);
            }
            this.InvokeAsync("DownloadTransfer", new object[] {
                        transferNo,
                        orgID}, this.DownloadTransferOperationCompleted, userState);
        }
        
        private void OnDownloadTransferOperationCompleted(object arg) {
            if ((this.DownloadTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadTransferCompleted(this, new DownloadTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage QueryTransfer(string transferNo, long orgID) {
            object[] results = this.Invoke("QueryTransfer", new object[] {
                        transferNo,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTransferAsync(string transferNo, long orgID) {
            this.QueryTransferAsync(transferNo, orgID, null);
        }
        
        /// <remarks/>
        public void QueryTransferAsync(string transferNo, long orgID, object userState) {
            if ((this.QueryTransferOperationCompleted == null)) {
                this.QueryTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTransferOperationCompleted);
            }
            this.InvokeAsync("QueryTransfer", new object[] {
                        transferNo,
                        orgID}, this.QueryTransferOperationCompleted, userState);
        }
        
        private void OnQueryTransferOperationCompleted(object arg) {
            if ((this.QueryTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTransferCompleted(this, new QueryTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ScanCode(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode) {
            object[] results = this.Invoke("ScanCode", new object[] {
                        transferNo,
                        rCard,
                        plankNo,
                        itemCode,
                        liveQty,
                        orgID,
                        userCode});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ScanCodeAsync(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode) {
            this.ScanCodeAsync(transferNo, rCard, plankNo, itemCode, liveQty, orgID, userCode, null);
        }
        
        /// <remarks/>
        public void ScanCodeAsync(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode, object userState) {
            if ((this.ScanCodeOperationCompleted == null)) {
                this.ScanCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScanCodeOperationCompleted);
            }
            this.InvokeAsync("ScanCode", new object[] {
                        transferNo,
                        rCard,
                        plankNo,
                        itemCode,
                        liveQty,
                        orgID,
                        userCode}, this.ScanCodeOperationCompleted, userState);
        }
        
        private void OnScanCodeOperationCompleted(object arg) {
            if ((this.ScanCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScanCodeCompleted(this, new ScanCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BtnDelHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage BtnDelHandle(string transferNo, string[] itemCode, string[] rCard, int num, long orgID) {
            object[] results = this.Invoke("BtnDelHandle", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        num,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void BtnDelHandleAsync(string transferNo, string[] itemCode, string[] rCard, int num, long orgID) {
            this.BtnDelHandleAsync(transferNo, itemCode, rCard, num, orgID, null);
        }
        
        /// <remarks/>
        public void BtnDelHandleAsync(string transferNo, string[] itemCode, string[] rCard, int num, long orgID, object userState) {
            if ((this.BtnDelHandleOperationCompleted == null)) {
                this.BtnDelHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBtnDelHandleOperationCompleted);
            }
            this.InvokeAsync("BtnDelHandle", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        num,
                        orgID}, this.BtnDelHandleOperationCompleted, userState);
        }
        
        private void OnBtnDelHandleOperationCompleted(object arg) {
            if ((this.BtnDelHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BtnDelHandleCompleted(this, new BtnDelHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ConfirmTransfer(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode) {
            object[] results = this.Invoke("ConfirmTransfer", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        iflag,
                        orgID,
                        userCode});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmTransferAsync(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode) {
            this.ConfirmTransferAsync(transferNo, itemCode, rCard, iflag, orgID, userCode, null);
        }
        
        /// <remarks/>
        public void ConfirmTransferAsync(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode, object userState) {
            if ((this.ConfirmTransferOperationCompleted == null)) {
                this.ConfirmTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTransferOperationCompleted);
            }
            this.InvokeAsync("ConfirmTransfer", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        iflag,
                        orgID,
                        userCode}, this.ConfirmTransferOperationCompleted, userState);
        }
        
        private void OnConfirmTransferOperationCompleted(object arg) {
            if ((this.ConfirmTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTransferCompleted(this, new ConfirmTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ERPDownloadTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ERPDownloadTransfer(string transferNo, long orgID, long ordOrgID) {
            object[] results = this.Invoke("ERPDownloadTransfer", new object[] {
                        transferNo,
                        orgID,
                        ordOrgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ERPDownloadTransferAsync(string transferNo, long orgID, long ordOrgID) {
            this.ERPDownloadTransferAsync(transferNo, orgID, ordOrgID, null);
        }
        
        /// <remarks/>
        public void ERPDownloadTransferAsync(string transferNo, long orgID, long ordOrgID, object userState) {
            if ((this.ERPDownloadTransferOperationCompleted == null)) {
                this.ERPDownloadTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPDownloadTransferOperationCompleted);
            }
            this.InvokeAsync("ERPDownloadTransfer", new object[] {
                        transferNo,
                        orgID,
                        ordOrgID}, this.ERPDownloadTransferOperationCompleted, userState);
        }
        
        private void OnERPDownloadTransferOperationCompleted(object arg) {
            if ((this.ERPDownloadTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPDownloadTransferCompleted(this, new ERPDownloadTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ERPQueryTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ERPQueryTransfer(string transferNo, long orgID, long ordOrgID) {
            object[] results = this.Invoke("ERPQueryTransfer", new object[] {
                        transferNo,
                        orgID,
                        ordOrgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ERPQueryTransferAsync(string transferNo, long orgID, long ordOrgID) {
            this.ERPQueryTransferAsync(transferNo, orgID, ordOrgID, null);
        }
        
        /// <remarks/>
        public void ERPQueryTransferAsync(string transferNo, long orgID, long ordOrgID, object userState) {
            if ((this.ERPQueryTransferOperationCompleted == null)) {
                this.ERPQueryTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPQueryTransferOperationCompleted);
            }
            this.InvokeAsync("ERPQueryTransfer", new object[] {
                        transferNo,
                        orgID,
                        ordOrgID}, this.ERPQueryTransferOperationCompleted, userState);
        }
        
        private void OnERPQueryTransferOperationCompleted(object arg) {
            if ((this.ERPQueryTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPQueryTransferCompleted(this, new ERPQueryTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ERPScanCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ERPScanCode(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode, long ordOrgID) {
            object[] results = this.Invoke("ERPScanCode", new object[] {
                        transferNo,
                        rCard,
                        plankNo,
                        itemCode,
                        liveQty,
                        orgID,
                        userCode,
                        ordOrgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ERPScanCodeAsync(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode, long ordOrgID) {
            this.ERPScanCodeAsync(transferNo, rCard, plankNo, itemCode, liveQty, orgID, userCode, ordOrgID, null);
        }
        
        /// <remarks/>
        public void ERPScanCodeAsync(string transferNo, string rCard, string plankNo, string[] itemCode, string[] liveQty, long orgID, string userCode, long ordOrgID, object userState) {
            if ((this.ERPScanCodeOperationCompleted == null)) {
                this.ERPScanCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPScanCodeOperationCompleted);
            }
            this.InvokeAsync("ERPScanCode", new object[] {
                        transferNo,
                        rCard,
                        plankNo,
                        itemCode,
                        liveQty,
                        orgID,
                        userCode,
                        ordOrgID}, this.ERPScanCodeOperationCompleted, userState);
        }
        
        private void OnERPScanCodeOperationCompleted(object arg) {
            if ((this.ERPScanCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPScanCodeCompleted(this, new ERPScanCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ERPBtnDelHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ERPBtnDelHandle(string transferNo, string[] itemCode, string[] rCard, int num, long orgID, long ordOrgID) {
            object[] results = this.Invoke("ERPBtnDelHandle", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        num,
                        orgID,
                        ordOrgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ERPBtnDelHandleAsync(string transferNo, string[] itemCode, string[] rCard, int num, long orgID, long ordOrgID) {
            this.ERPBtnDelHandleAsync(transferNo, itemCode, rCard, num, orgID, ordOrgID, null);
        }
        
        /// <remarks/>
        public void ERPBtnDelHandleAsync(string transferNo, string[] itemCode, string[] rCard, int num, long orgID, long ordOrgID, object userState) {
            if ((this.ERPBtnDelHandleOperationCompleted == null)) {
                this.ERPBtnDelHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPBtnDelHandleOperationCompleted);
            }
            this.InvokeAsync("ERPBtnDelHandle", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        num,
                        orgID,
                        ordOrgID}, this.ERPBtnDelHandleOperationCompleted, userState);
        }
        
        private void OnERPBtnDelHandleOperationCompleted(object arg) {
            if ((this.ERPBtnDelHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPBtnDelHandleCompleted(this, new ERPBtnDelHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ERPConfirmTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ERPConfirmTransfer(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode, long ordOrgID) {
            object[] results = this.Invoke("ERPConfirmTransfer", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        iflag,
                        orgID,
                        userCode,
                        ordOrgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ERPConfirmTransferAsync(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode, long ordOrgID) {
            this.ERPConfirmTransferAsync(transferNo, itemCode, rCard, iflag, orgID, userCode, ordOrgID, null);
        }
        
        /// <remarks/>
        public void ERPConfirmTransferAsync(string transferNo, string[] itemCode, string[] rCard, int iflag, long orgID, string userCode, long ordOrgID, object userState) {
            if ((this.ERPConfirmTransferOperationCompleted == null)) {
                this.ERPConfirmTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPConfirmTransferOperationCompleted);
            }
            this.InvokeAsync("ERPConfirmTransfer", new object[] {
                        transferNo,
                        itemCode,
                        rCard,
                        iflag,
                        orgID,
                        userCode,
                        ordOrgID}, this.ERPConfirmTransferOperationCompleted, userState);
        }
        
        private void OnERPConfirmTransferOperationCompleted(object arg) {
            if ((this.ERPConfirmTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPConfirmTransferCompleted(this, new ERPConfirmTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallWebMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage CallWebMethod(object[] args) {
            object[] results = this.Invoke("CallWebMethod", new object[] {
                        args});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void CallWebMethodAsync(object[] args) {
            this.CallWebMethodAsync(args, null);
        }
        
        /// <remarks/>
        public void CallWebMethodAsync(object[] args, object userState) {
            if ((this.CallWebMethodOperationCompleted == null)) {
                this.CallWebMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallWebMethodOperationCompleted);
            }
            this.InvokeAsync("CallWebMethod", new object[] {
                        args}, this.CallWebMethodOperationCompleted, userState);
        }
        
        private void OnCallWebMethodOperationCompleted(object arg) {
            if ((this.CallWebMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallWebMethodCompleted(this, new CallWebMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage GetTransferPlan(string cRacd, long orgID) {
            object[] results = this.Invoke("GetTransferPlan", new object[] {
                        cRacd,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferPlanAsync(string cRacd, long orgID) {
            this.GetTransferPlanAsync(cRacd, orgID, null);
        }
        
        /// <remarks/>
        public void GetTransferPlanAsync(string cRacd, long orgID, object userState) {
            if ((this.GetTransferPlanOperationCompleted == null)) {
                this.GetTransferPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferPlanOperationCompleted);
            }
            this.InvokeAsync("GetTransferPlan", new object[] {
                        cRacd,
                        orgID}, this.GetTransferPlanOperationCompleted, userState);
        }
        
        private void OnGetTransferPlanOperationCompleted(object arg) {
            if ((this.GetTransferPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferPlanCompleted(this, new GetTransferPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTransferinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage SaveTransferinfo(string truckNo, string cRacd, long orgID, string userCode, string actionFlag, out string remainQty) {
            object[] results = this.Invoke("SaveTransferinfo", new object[] {
                        truckNo,
                        cRacd,
                        orgID,
                        userCode,
                        actionFlag});
            remainQty = ((string)(results[1]));
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTransferinfoAsync(string truckNo, string cRacd, long orgID, string userCode, string actionFlag) {
            this.SaveTransferinfoAsync(truckNo, cRacd, orgID, userCode, actionFlag, null);
        }
        
        /// <remarks/>
        public void SaveTransferinfoAsync(string truckNo, string cRacd, long orgID, string userCode, string actionFlag, object userState) {
            if ((this.SaveTransferinfoOperationCompleted == null)) {
                this.SaveTransferinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTransferinfoOperationCompleted);
            }
            this.InvokeAsync("SaveTransferinfo", new object[] {
                        truckNo,
                        cRacd,
                        orgID,
                        userCode,
                        actionFlag}, this.SaveTransferinfoOperationCompleted, userState);
        }
        
        private void OnSaveTransferinfoOperationCompleted(object arg) {
            if ((this.SaveTransferinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTransferinfoCompleted(this, new SaveTransferinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferScaninfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage GetTransferScaninfo(string truckNo, long orgID) {
            object[] results = this.Invoke("GetTransferScaninfo", new object[] {
                        truckNo,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferScaninfoAsync(string truckNo, long orgID) {
            this.GetTransferScaninfoAsync(truckNo, orgID, null);
        }
        
        /// <remarks/>
        public void GetTransferScaninfoAsync(string truckNo, long orgID, object userState) {
            if ((this.GetTransferScaninfoOperationCompleted == null)) {
                this.GetTransferScaninfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferScaninfoOperationCompleted);
            }
            this.InvokeAsync("GetTransferScaninfo", new object[] {
                        truckNo,
                        orgID}, this.GetTransferScaninfoOperationCompleted, userState);
        }
        
        private void OnGetTransferScaninfoOperationCompleted(object arg) {
            if ((this.GetTransferScaninfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferScaninfoCompleted(this, new GetTransferScaninfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferLinkTruckID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage TransferLinkTruckID(string truckNo, string actionFlag, long orgID, out string strTruckID) {
            object[] results = this.Invoke("TransferLinkTruckID", new object[] {
                        truckNo,
                        actionFlag,
                        orgID});
            strTruckID = ((string)(results[1]));
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void TransferLinkTruckIDAsync(string truckNo, string actionFlag, long orgID) {
            this.TransferLinkTruckIDAsync(truckNo, actionFlag, orgID, null);
        }
        
        /// <remarks/>
        public void TransferLinkTruckIDAsync(string truckNo, string actionFlag, long orgID, object userState) {
            if ((this.TransferLinkTruckIDOperationCompleted == null)) {
                this.TransferLinkTruckIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferLinkTruckIDOperationCompleted);
            }
            this.InvokeAsync("TransferLinkTruckID", new object[] {
                        truckNo,
                        actionFlag,
                        orgID}, this.TransferLinkTruckIDOperationCompleted, userState);
        }
        
        private void OnTransferLinkTruckIDOperationCompleted(object arg) {
            if ((this.TransferLinkTruckIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferLinkTruckIDCompleted(this, new TransferLinkTruckIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferQueryDetailInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage GetTransferQueryDetailInfo(string truckNo, string itemName, string orderNo, long orgID) {
            object[] results = this.Invoke("GetTransferQueryDetailInfo", new object[] {
                        truckNo,
                        itemName,
                        orderNo,
                        orgID});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferQueryDetailInfoAsync(string truckNo, string itemName, string orderNo, long orgID) {
            this.GetTransferQueryDetailInfoAsync(truckNo, itemName, orderNo, orgID, null);
        }
        
        /// <remarks/>
        public void GetTransferQueryDetailInfoAsync(string truckNo, string itemName, string orderNo, long orgID, object userState) {
            if ((this.GetTransferQueryDetailInfoOperationCompleted == null)) {
                this.GetTransferQueryDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferQueryDetailInfoOperationCompleted);
            }
            this.InvokeAsync("GetTransferQueryDetailInfo", new object[] {
                        truckNo,
                        itemName,
                        orderNo,
                        orgID}, this.GetTransferQueryDetailInfoOperationCompleted, userState);
        }
        
        private void OnGetTransferQueryDetailInfoOperationCompleted(object arg) {
            if ((this.GetTransferQueryDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferQueryDetailInfoCompleted(this, new GetTransferQueryDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProdTransferDeleteHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ProdTransferDeleteHandle(string cRardlst, long orgID, string actionFlag) {
            object[] results = this.Invoke("ProdTransferDeleteHandle", new object[] {
                        cRardlst,
                        orgID,
                        actionFlag});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ProdTransferDeleteHandleAsync(string cRardlst, long orgID, string actionFlag) {
            this.ProdTransferDeleteHandleAsync(cRardlst, orgID, actionFlag, null);
        }
        
        /// <remarks/>
        public void ProdTransferDeleteHandleAsync(string cRardlst, long orgID, string actionFlag, object userState) {
            if ((this.ProdTransferDeleteHandleOperationCompleted == null)) {
                this.ProdTransferDeleteHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProdTransferDeleteHandleOperationCompleted);
            }
            this.InvokeAsync("ProdTransferDeleteHandle", new object[] {
                        cRardlst,
                        orgID,
                        actionFlag}, this.ProdTransferDeleteHandleOperationCompleted, userState);
        }
        
        private void OnProdTransferDeleteHandleOperationCompleted(object arg) {
            if ((this.ProdTransferDeleteHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProdTransferDeleteHandleCompleted(this, new ProdTransferDeleteHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProdTransferCheckTruckNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ProdTransferCheckTruckNo(string truckNo, long orgID, string actionFlag) {
            object[] results = this.Invoke("ProdTransferCheckTruckNo", new object[] {
                        truckNo,
                        orgID,
                        actionFlag});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ProdTransferCheckTruckNoAsync(string truckNo, long orgID, string actionFlag) {
            this.ProdTransferCheckTruckNoAsync(truckNo, orgID, actionFlag, null);
        }
        
        /// <remarks/>
        public void ProdTransferCheckTruckNoAsync(string truckNo, long orgID, string actionFlag, object userState) {
            if ((this.ProdTransferCheckTruckNoOperationCompleted == null)) {
                this.ProdTransferCheckTruckNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProdTransferCheckTruckNoOperationCompleted);
            }
            this.InvokeAsync("ProdTransferCheckTruckNo", new object[] {
                        truckNo,
                        orgID,
                        actionFlag}, this.ProdTransferCheckTruckNoOperationCompleted, userState);
        }
        
        private void OnProdTransferCheckTruckNoOperationCompleted(object arg) {
            if ((this.ProdTransferCheckTruckNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProdTransferCheckTruckNoCompleted(this, new ProdTransferCheckTruckNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProdTransferDeleteMutiHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage ProdTransferDeleteMutiHandle(string truckNo, string itemName, long orgID, string actionFlag) {
            object[] results = this.Invoke("ProdTransferDeleteMutiHandle", new object[] {
                        truckNo,
                        itemName,
                        orgID,
                        actionFlag});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void ProdTransferDeleteMutiHandleAsync(string truckNo, string itemName, long orgID, string actionFlag) {
            this.ProdTransferDeleteMutiHandleAsync(truckNo, itemName, orgID, actionFlag, null);
        }
        
        /// <remarks/>
        public void ProdTransferDeleteMutiHandleAsync(string truckNo, string itemName, long orgID, string actionFlag, object userState) {
            if ((this.ProdTransferDeleteMutiHandleOperationCompleted == null)) {
                this.ProdTransferDeleteMutiHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProdTransferDeleteMutiHandleOperationCompleted);
            }
            this.InvokeAsync("ProdTransferDeleteMutiHandle", new object[] {
                        truckNo,
                        itemName,
                        orgID,
                        actionFlag}, this.ProdTransferDeleteMutiHandleOperationCompleted, userState);
        }
        
        private void OnProdTransferDeleteMutiHandleOperationCompleted(object arg) {
            if ((this.ProdTransferDeleteMutiHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProdTransferDeleteMutiHandleCompleted(this, new ProdTransferDeleteMutiHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBoxPrefix", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage GetBoxPrefix(long orgid) {
            object[] results = this.Invoke("GetBoxPrefix", new object[] {
                        orgid});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxPrefixAsync(long orgid) {
            this.GetBoxPrefixAsync(orgid, null);
        }
        
        /// <remarks/>
        public void GetBoxPrefixAsync(long orgid, object userState) {
            if ((this.GetBoxPrefixOperationCompleted == null)) {
                this.GetBoxPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxPrefixOperationCompleted);
            }
            this.InvokeAsync("GetBoxPrefix", new object[] {
                        orgid}, this.GetBoxPrefixOperationCompleted, userState);
        }
        
        private void OnGetBoxPrefixOperationCompleted(object arg) {
            if ((this.GetBoxPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxPrefixCompleted(this, new GetBoxPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBoxPrefixinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage GetBoxPrefixinfo(long orgid, string sonumber) {
            object[] results = this.Invoke("GetBoxPrefixinfo", new object[] {
                        orgid,
                        sonumber});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxPrefixinfoAsync(long orgid, string sonumber) {
            this.GetBoxPrefixinfoAsync(orgid, sonumber, null);
        }
        
        /// <remarks/>
        public void GetBoxPrefixinfoAsync(long orgid, string sonumber, object userState) {
            if ((this.GetBoxPrefixinfoOperationCompleted == null)) {
                this.GetBoxPrefixinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxPrefixinfoOperationCompleted);
            }
            this.InvokeAsync("GetBoxPrefixinfo", new object[] {
                        orgid,
                        sonumber}, this.GetBoxPrefixinfoOperationCompleted, userState);
        }
        
        private void OnGetBoxPrefixinfoOperationCompleted(object arg) {
            if ((this.GetBoxPrefixinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxPrefixinfoCompleted(this, new GetBoxPrefixinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/do_post_boxLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage do_post_boxLoad(long OrgId, string[] soNumber, string[] boxBarcode, string[] boxPrefix, string usercode) {
            object[] results = this.Invoke("do_post_boxLoad", new object[] {
                        OrgId,
                        soNumber,
                        boxBarcode,
                        boxPrefix,
                        usercode});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void do_post_boxLoadAsync(long OrgId, string[] soNumber, string[] boxBarcode, string[] boxPrefix, string usercode) {
            this.do_post_boxLoadAsync(OrgId, soNumber, boxBarcode, boxPrefix, usercode, null);
        }
        
        /// <remarks/>
        public void do_post_boxLoadAsync(long OrgId, string[] soNumber, string[] boxBarcode, string[] boxPrefix, string usercode, object userState) {
            if ((this.do_post_boxLoadOperationCompleted == null)) {
                this.do_post_boxLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondo_post_boxLoadOperationCompleted);
            }
            this.InvokeAsync("do_post_boxLoad", new object[] {
                        OrgId,
                        soNumber,
                        boxBarcode,
                        boxPrefix,
                        usercode}, this.do_post_boxLoadOperationCompleted, userState);
        }
        
        private void Ondo_post_boxLoadOperationCompleted(object arg) {
            if ((this.do_post_boxLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.do_post_boxLoadCompleted(this, new do_post_boxLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputWebMessage UserLogin(string userName, string userPwd) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        userName,
                        userPwd});
            return ((OutputWebMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string userName, string userPwd) {
            this.UserLoginAsync(userName, userPwd, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string userName, string userPwd, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        userName,
                        userPwd}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckNeedBusinessDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckNeedBusinessDate(long orgId, string userCode, string invCode, string funcCode, string itemList) {
            object[] results = this.Invoke("CheckNeedBusinessDate", new object[] {
                        orgId,
                        userCode,
                        invCode,
                        funcCode,
                        itemList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNeedBusinessDateAsync(long orgId, string userCode, string invCode, string funcCode, string itemList) {
            this.CheckNeedBusinessDateAsync(orgId, userCode, invCode, funcCode, itemList, null);
        }
        
        /// <remarks/>
        public void CheckNeedBusinessDateAsync(long orgId, string userCode, string invCode, string funcCode, string itemList, object userState) {
            if ((this.CheckNeedBusinessDateOperationCompleted == null)) {
                this.CheckNeedBusinessDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNeedBusinessDateOperationCompleted);
            }
            this.InvokeAsync("CheckNeedBusinessDate", new object[] {
                        orgId,
                        userCode,
                        invCode,
                        funcCode,
                        itemList}, this.CheckNeedBusinessDateOperationCompleted, userState);
        }
        
        private void OnCheckNeedBusinessDateOperationCompleted(object arg) {
            if ((this.CheckNeedBusinessDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNeedBusinessDateCompleted(this, new CheckNeedBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSysDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetSysDate(long orgId) {
            object[] results = this.Invoke("GetSysDate", new object[] {
                        orgId});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysDateAsync(long orgId) {
            this.GetSysDateAsync(orgId, null);
        }
        
        /// <remarks/>
        public void GetSysDateAsync(long orgId, object userState) {
            if ((this.GetSysDateOperationCompleted == null)) {
                this.GetSysDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysDateOperationCompleted);
            }
            this.InvokeAsync("GetSysDate", new object[] {
                        orgId}, this.GetSysDateOperationCompleted, userState);
        }
        
        private void OnGetSysDateOperationCompleted(object arg) {
            if ((this.GetSysDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysDateCompleted(this, new GetSysDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OutputWebMessage {
        
        private bool _isSuccessField;
        
        private string _errorCodeField;
        
        private string _errorMessageField;
        
        private int _effectRowCountField;
        
        private System.Data.DataSet dsField;
        
        private object[] _domainObjectField;
        
        private object _extendDataField;
        
        private bool isSuccessField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private int effectRowCountField;
        
        private System.Data.DataSet dataSetField;
        
        private object[] domainObjectField;
        
        private object extendDataField;
        
        /// <remarks/>
        public bool _isSuccess {
            get {
                return this._isSuccessField;
            }
            set {
                this._isSuccessField = value;
            }
        }
        
        /// <remarks/>
        public string _errorCode {
            get {
                return this._errorCodeField;
            }
            set {
                this._errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string _errorMessage {
            get {
                return this._errorMessageField;
            }
            set {
                this._errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int _effectRowCount {
            get {
                return this._effectRowCountField;
            }
            set {
                this._effectRowCountField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                return this.dsField;
            }
            set {
                this.dsField = value;
            }
        }
        
        /// <remarks/>
        public object[] _domainObject {
            get {
                return this._domainObjectField;
            }
            set {
                this._domainObjectField = value;
            }
        }
        
        /// <remarks/>
        public object _extendData {
            get {
                return this._extendDataField;
            }
            set {
                this._extendDataField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int EffectRowCount {
            get {
                return this.effectRowCountField;
            }
            set {
                this.effectRowCountField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
        
        /// <remarks/>
        public object[] DomainObject {
            get {
                return this.domainObjectField;
            }
            set {
                this.domainObjectField = value;
            }
        }
        
        /// <remarks/>
        public object ExtendData {
            get {
                return this.extendDataField;
            }
            set {
                this.extendDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadProfileCompletedEventHandler(object sender, LoadProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DownloadTransferCompletedEventHandler(object sender, DownloadTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryTransferCompletedEventHandler(object sender, QueryTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ScanCodeCompletedEventHandler(object sender, ScanCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScanCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BtnDelHandleCompletedEventHandler(object sender, BtnDelHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BtnDelHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BtnDelHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmTransferCompletedEventHandler(object sender, ConfirmTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ERPDownloadTransferCompletedEventHandler(object sender, ERPDownloadTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPDownloadTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPDownloadTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ERPQueryTransferCompletedEventHandler(object sender, ERPQueryTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPQueryTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPQueryTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ERPScanCodeCompletedEventHandler(object sender, ERPScanCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPScanCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPScanCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ERPBtnDelHandleCompletedEventHandler(object sender, ERPBtnDelHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPBtnDelHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPBtnDelHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ERPConfirmTransferCompletedEventHandler(object sender, ERPConfirmTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPConfirmTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPConfirmTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CallWebMethodCompletedEventHandler(object sender, CallWebMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallWebMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallWebMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTransferPlanCompletedEventHandler(object sender, GetTransferPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTransferinfoCompletedEventHandler(object sender, SaveTransferinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTransferinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTransferinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string remainQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTransferScaninfoCompletedEventHandler(object sender, GetTransferScaninfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferScaninfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferScaninfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferLinkTruckIDCompletedEventHandler(object sender, TransferLinkTruckIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferLinkTruckIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferLinkTruckIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strTruckID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTransferQueryDetailInfoCompletedEventHandler(object sender, GetTransferQueryDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferQueryDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferQueryDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProdTransferDeleteHandleCompletedEventHandler(object sender, ProdTransferDeleteHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProdTransferDeleteHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProdTransferDeleteHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProdTransferCheckTruckNoCompletedEventHandler(object sender, ProdTransferCheckTruckNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProdTransferCheckTruckNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProdTransferCheckTruckNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProdTransferDeleteMutiHandleCompletedEventHandler(object sender, ProdTransferDeleteMutiHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProdTransferDeleteMutiHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProdTransferDeleteMutiHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBoxPrefixCompletedEventHandler(object sender, GetBoxPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBoxPrefixinfoCompletedEventHandler(object sender, GetBoxPrefixinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxPrefixinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxPrefixinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void do_post_boxLoadCompletedEventHandler(object sender, do_post_boxLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class do_post_boxLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal do_post_boxLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputWebMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputWebMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckNeedBusinessDateCompletedEventHandler(object sender, CheckNeedBusinessDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNeedBusinessDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNeedBusinessDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSysDateCompletedEventHandler(object sender, GetSysDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591