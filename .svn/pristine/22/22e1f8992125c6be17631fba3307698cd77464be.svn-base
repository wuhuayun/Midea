//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace WinForm.AscmWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AscmWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AscmWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDoorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TryGetAscmUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeCarByRfidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeCarListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmployeeCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployeeCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeeCarListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpCarSwipeLogListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AscmEmpCarSwipeLogAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAscmEmpCarSwipeLogListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRfidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllReadingHeadListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AscmReadingHeadLogAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierCurrentDeliveryOrderBatchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrderBatchDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrderBatchMaterialDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupplierDriverToPlantOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierCurrentDeliveryBatchSumMainListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierDriverDeliveryBatchSumMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerDeliveryListByDeliverySumMainIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerDeliveryAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerDeliveryUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerDeliveryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerDeliveryClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalletDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalletDeliveryListByDeliverySumMainIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PalletDeliveryAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback PalletDeliveryUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PalletDeliveryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PalletDeliveryClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriverByDriverSnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriverDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriverDeliveryListByDeliverySumMainIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DriverDeliveryAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback DriverDeliveryUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DriverDeliveryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DriverDeliveryClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnloadingPointListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnloadingPointUpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnloadingPointControllerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeeperCurrentPreparationMainListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeeperCurrentPreparationSumDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWmsContainerDeliveryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWmsContainerDeliveryListByPreparationMainIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WmsContainerDeliveryAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback WmsContainerDeliveryUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback WmsContainerDeliveryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback WmsContainerDeliveryClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeeperCurrentWmsPreparationAllDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveKeeperCurrentWmsPreparationAllDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoorLedTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoorLedSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnterSupplierDeliBatSumMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarelocationByRfidOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWmsLocationTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWmsLocationTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaskSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTaskSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaterialListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MaterialOfDiscreteJobListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMtlListOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartExcuteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndExcuteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SumMaterialTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfrimedGetMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerSpaceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAscmTagLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerSupplierInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback AscmStoreInOutSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAscmKeyBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainerAllInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListNotInModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleLinkListByRoleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleLinkListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListNotInModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListInUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPositionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentPositionLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDepartmentPositionLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentPositionLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormMainMenuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormSubMenuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListNotInYnUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListNotInYnRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionRoleLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionRoleLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionRoleLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AscmWebService() {
            this.Url = global::WinForm.Properties.Settings.Default.WinForm_AscmWebService_AscmWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDoorListCompletedEventHandler GetDoorListCompleted;
        
        /// <remarks/>
        public event UserAuthenticationCompletedEventHandler UserAuthenticationCompleted;
        
        /// <remarks/>
        public event TryGetAscmUserCompletedEventHandler TryGetAscmUserCompleted;
        
        /// <remarks/>
        public event GetCountCompletedEventHandler GetCountCompleted;
        
        /// <remarks/>
        public event GetMaxIdCompletedEventHandler GetMaxIdCompleted;
        
        /// <remarks/>
        public event GetObjectCompletedEventHandler GetObjectCompleted;
        
        /// <remarks/>
        public event GetEmployeeListCompletedEventHandler GetEmployeeListCompleted;
        
        /// <remarks/>
        public event SaveEmployeeCompletedEventHandler SaveEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        public event DeleteEmployeeCompletedEventHandler DeleteEmployeeCompleted;
        
        /// <remarks/>
        public event GetEmployeeCarByRfidCompletedEventHandler GetEmployeeCarByRfidCompleted;
        
        /// <remarks/>
        public event GetEmployeeCarListCompletedEventHandler GetEmployeeCarListCompleted;
        
        /// <remarks/>
        public event SaveEmployeeCarCompletedEventHandler SaveEmployeeCarCompleted;
        
        /// <remarks/>
        public event DeleteEmployeeCarCompletedEventHandler DeleteEmployeeCarCompleted;
        
        /// <remarks/>
        public event GetAllEmployeeCarListCompletedEventHandler GetAllEmployeeCarListCompleted;
        
        /// <remarks/>
        public event GetEmpCarSwipeLogListCompletedEventHandler GetEmpCarSwipeLogListCompleted;
        
        /// <remarks/>
        public event AscmEmpCarSwipeLogAddCompletedEventHandler AscmEmpCarSwipeLogAddCompleted;
        
        /// <remarks/>
        public event SaveAscmEmpCarSwipeLogListCompletedEventHandler SaveAscmEmpCarSwipeLogListCompleted;
        
        /// <remarks/>
        public event GetRfidCompletedEventHandler GetRfidCompleted;
        
        /// <remarks/>
        public event GetAllReadingHeadListCompletedEventHandler GetAllReadingHeadListCompleted;
        
        /// <remarks/>
        public event AscmReadingHeadLogAddCompletedEventHandler AscmReadingHeadLogAddCompleted;
        
        /// <remarks/>
        public event GetSupplierByUserIdCompletedEventHandler GetSupplierByUserIdCompleted;
        
        /// <remarks/>
        public event GetSupplierCurrentDeliveryOrderBatchListCompletedEventHandler GetSupplierCurrentDeliveryOrderBatchListCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrderBatchDetailListCompletedEventHandler GetDeliveryOrderBatchDetailListCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrderBatchMaterialDetailListCompletedEventHandler GetDeliveryOrderBatchMaterialDetailListCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventHandler GetDeliveryOrderBatchSumMainMaterialDetailListCompleted;
        
        /// <remarks/>
        public event SupplierDriverToPlantCompletedEventHandler SupplierDriverToPlantCompleted;
        
        /// <remarks/>
        public event GetSupplierCurrentDeliveryBatchSumMainListCompletedEventHandler GetSupplierCurrentDeliveryBatchSumMainListCompleted;
        
        /// <remarks/>
        public event GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventHandler GetSupplierCurrentDeliveryBatchSumDetailListCompleted;
        
        /// <remarks/>
        public event GetSupplierDriverDeliveryBatchSumMainCompletedEventHandler GetSupplierDriverDeliveryBatchSumMainCompleted;
        
        /// <remarks/>
        public event GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventHandler GetSupplierCurrentDeliveryBatchSumAllDetailCompleted;
        
        /// <remarks/>
        public event SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventHandler SaveSupplierCurrentDeliveryBatchSumAllDetailCompleted;
        
        /// <remarks/>
        public event GetContainerCompletedEventHandler GetContainerCompleted;
        
        /// <remarks/>
        public event GetContainerDeliveryListCompletedEventHandler GetContainerDeliveryListCompleted;
        
        /// <remarks/>
        public event GetContainerDeliveryListByDeliverySumMainIdCompletedEventHandler GetContainerDeliveryListByDeliverySumMainIdCompleted;
        
        /// <remarks/>
        public event ContainerDeliveryAddCompletedEventHandler ContainerDeliveryAddCompleted;
        
        /// <remarks/>
        public event ContainerDeliveryUpdateCompletedEventHandler ContainerDeliveryUpdateCompleted;
        
        /// <remarks/>
        public event ContainerDeliveryDeleteCompletedEventHandler ContainerDeliveryDeleteCompleted;
        
        /// <remarks/>
        public event ContainerDeliveryClearCompletedEventHandler ContainerDeliveryClearCompleted;
        
        /// <remarks/>
        public event GetPalletCompletedEventHandler GetPalletCompleted;
        
        /// <remarks/>
        public event GetPalletDeliveryListCompletedEventHandler GetPalletDeliveryListCompleted;
        
        /// <remarks/>
        public event GetPalletDeliveryListByDeliverySumMainIdCompletedEventHandler GetPalletDeliveryListByDeliverySumMainIdCompleted;
        
        /// <remarks/>
        public event PalletDeliveryAddCompletedEventHandler PalletDeliveryAddCompleted;
        
        /// <remarks/>
        public event PalletDeliveryUpdateCompletedEventHandler PalletDeliveryUpdateCompleted;
        
        /// <remarks/>
        public event PalletDeliveryDeleteCompletedEventHandler PalletDeliveryDeleteCompleted;
        
        /// <remarks/>
        public event PalletDeliveryClearCompletedEventHandler PalletDeliveryClearCompleted;
        
        /// <remarks/>
        public event GetDriverByDriverSnCompletedEventHandler GetDriverByDriverSnCompleted;
        
        /// <remarks/>
        public event GetDriverDeliveryListCompletedEventHandler GetDriverDeliveryListCompleted;
        
        /// <remarks/>
        public event GetDriverDeliveryListByDeliverySumMainIdCompletedEventHandler GetDriverDeliveryListByDeliverySumMainIdCompleted;
        
        /// <remarks/>
        public event DriverDeliveryAddCompletedEventHandler DriverDeliveryAddCompleted;
        
        /// <remarks/>
        public event DriverDeliveryUpdateCompletedEventHandler DriverDeliveryUpdateCompleted;
        
        /// <remarks/>
        public event DriverDeliveryDeleteCompletedEventHandler DriverDeliveryDeleteCompleted;
        
        /// <remarks/>
        public event DriverDeliveryClearCompletedEventHandler DriverDeliveryClearCompleted;
        
        /// <remarks/>
        public event GetUnloadingPointListCompletedEventHandler GetUnloadingPointListCompleted;
        
        /// <remarks/>
        public event UnloadingPointUpdateStatusCompletedEventHandler UnloadingPointUpdateStatusCompleted;
        
        /// <remarks/>
        public event GetUnloadingPointControllerListCompletedEventHandler GetUnloadingPointControllerListCompleted;
        
        /// <remarks/>
        public event GetKeeperCurrentPreparationMainListCompletedEventHandler GetKeeperCurrentPreparationMainListCompleted;
        
        /// <remarks/>
        public event GetKeeperCurrentPreparationSumDetailListCompletedEventHandler GetKeeperCurrentPreparationSumDetailListCompleted;
        
        /// <remarks/>
        public event GetWmsContainerDeliveryListCompletedEventHandler GetWmsContainerDeliveryListCompleted;
        
        /// <remarks/>
        public event GetWmsContainerDeliveryListByPreparationMainIdCompletedEventHandler GetWmsContainerDeliveryListByPreparationMainIdCompleted;
        
        /// <remarks/>
        public event WmsContainerDeliveryAddCompletedEventHandler WmsContainerDeliveryAddCompleted;
        
        /// <remarks/>
        public event WmsContainerDeliveryUpdateCompletedEventHandler WmsContainerDeliveryUpdateCompleted;
        
        /// <remarks/>
        public event WmsContainerDeliveryDeleteCompletedEventHandler WmsContainerDeliveryDeleteCompleted;
        
        /// <remarks/>
        public event WmsContainerDeliveryClearCompletedEventHandler WmsContainerDeliveryClearCompleted;
        
        /// <remarks/>
        public event GetKeeperCurrentWmsPreparationAllDetailCompletedEventHandler GetKeeperCurrentWmsPreparationAllDetailCompleted;
        
        /// <remarks/>
        public event SaveKeeperCurrentWmsPreparationAllDetailCompletedEventHandler SaveKeeperCurrentWmsPreparationAllDetailCompleted;
        
        /// <remarks/>
        public event GetDoorLedTitleCompletedEventHandler GetDoorLedTitleCompleted;
        
        /// <remarks/>
        public event GetDoorLedSupplierCompletedEventHandler GetDoorLedSupplierCompleted;
        
        /// <remarks/>
        public event GetEnterSupplierDeliBatSumMainCompletedEventHandler GetEnterSupplierDeliBatSumMainCompleted;
        
        /// <remarks/>
        public event GetWarelocationByRfidCompletedEventHandler GetWarelocationByRfidCompleted;
        
        /// <remarks/>
        public event AddWmsLocationTransferCompletedEventHandler AddWmsLocationTransferCompleted;
        
        /// <remarks/>
        public event UpdateWmsLocationTransferCompletedEventHandler UpdateWmsLocationTransferCompleted;
        
        /// <remarks/>
        public event GetTasksListCompletedEventHandler GetTasksListCompleted;
        
        /// <remarks/>
        public event AddTaskSaveCompletedEventHandler AddTaskSaveCompleted;
        
        /// <remarks/>
        public event TaskDeleteCompletedEventHandler TaskDeleteCompleted;
        
        /// <remarks/>
        public event EditTaskSaveCompletedEventHandler EditTaskSaveCompleted;
        
        /// <remarks/>
        public event GetMaterialListCompletedEventHandler GetMaterialListCompleted;
        
        /// <remarks/>
        public event MaterialOfDiscreteJobListCompletedEventHandler MaterialOfDiscreteJobListCompleted;
        
        /// <remarks/>
        public event GetTaskListCompletedEventHandler GetTaskListCompleted;
        
        /// <remarks/>
        public event GetJobListCompletedEventHandler GetJobListCompleted;
        
        /// <remarks/>
        public event GetMtlListCompletedEventHandler GetMtlListCompleted;
        
        /// <remarks/>
        public event StartExcuteTaskCompletedEventHandler StartExcuteTaskCompleted;
        
        /// <remarks/>
        public event EndExcuteTaskCompletedEventHandler EndExcuteTaskCompleted;
        
        /// <remarks/>
        public event SumMaterialTotalCompletedEventHandler SumMaterialTotalCompleted;
        
        /// <remarks/>
        public event CheckTaskInfoCompletedEventHandler CheckTaskInfoCompleted;
        
        /// <remarks/>
        public event ConfrimedGetMaterialCompletedEventHandler ConfrimedGetMaterialCompleted;
        
        /// <remarks/>
        public event GetContainerSpaceInfoCompletedEventHandler GetContainerSpaceInfoCompleted;
        
        /// <remarks/>
        public event GetAscmTagLogCompletedEventHandler GetAscmTagLogCompleted;
        
        /// <remarks/>
        public event GetContainerSupplierInfoCompletedEventHandler GetContainerSupplierInfoCompleted;
        
        /// <remarks/>
        public event ContainerCheckCompletedEventHandler ContainerCheckCompleted;
        
        /// <remarks/>
        public event AscmStoreInOutSaveCompletedEventHandler AscmStoreInOutSaveCompleted;
        
        /// <remarks/>
        public event GetAscmKeyBillCompletedEventHandler GetAscmKeyBillCompleted;
        
        /// <remarks/>
        public event GetContainerAllInfoCompletedEventHandler GetContainerAllInfoCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetUserBaseInfoCompletedEventHandler GetUserBaseInfoCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event SaveUserCompletedEventHandler SaveUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event IsAdministratorCompletedEventHandler IsAdministratorCompleted;
        
        /// <remarks/>
        public event GetUserListNotInModuleFunctionCompletedEventHandler GetUserListNotInModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetUserRoleLinkListByRoleIdCompletedEventHandler GetUserRoleLinkListByRoleIdCompleted;
        
        /// <remarks/>
        public event GetUserRoleLinkListByUserIdCompletedEventHandler GetUserRoleLinkListByUserIdCompleted;
        
        /// <remarks/>
        public event GetRoleListNotInModuleFunctionCompletedEventHandler GetRoleListNotInModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetRoleListCompletedEventHandler GetRoleListCompleted;
        
        /// <remarks/>
        public event SaveRoleCompletedEventHandler SaveRoleCompleted;
        
        /// <remarks/>
        public event UpdateRoleCompletedEventHandler UpdateRoleCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event GetRoleListInUserCompletedEventHandler GetRoleListInUserCompleted;
        
        /// <remarks/>
        public event GetPositionListCompletedEventHandler GetPositionListCompleted;
        
        /// <remarks/>
        public event SavePositionCompletedEventHandler SavePositionCompleted;
        
        /// <remarks/>
        public event UpdatePositionCompletedEventHandler UpdatePositionCompleted;
        
        /// <remarks/>
        public event DeletePositionCompletedEventHandler DeletePositionCompleted;
        
        /// <remarks/>
        public event GetDepartmentListCompletedEventHandler GetDepartmentListCompleted;
        
        /// <remarks/>
        public event SaveDepartmentCompletedEventHandler SaveDepartmentCompleted;
        
        /// <remarks/>
        public event UpdateDepartmentCompletedEventHandler UpdateDepartmentCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentCompletedEventHandler DeleteDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentPositionLinkCompletedEventHandler GetDepartmentPositionLinkCompleted;
        
        /// <remarks/>
        public event SaveDepartmentPositionLinkListCompletedEventHandler SaveDepartmentPositionLinkListCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentPositionLinkListCompletedEventHandler DeleteDepartmentPositionLinkListCompleted;
        
        /// <remarks/>
        public event GetFormMainMenuListCompletedEventHandler GetFormMainMenuListCompleted;
        
        /// <remarks/>
        public event GetFormSubMenuCompletedEventHandler GetFormSubMenuCompleted;
        
        /// <remarks/>
        public event GetFormSubMenuListCompletedEventHandler GetFormSubMenuListCompleted;
        
        /// <remarks/>
        public event SaveFormMainMenuCompletedEventHandler SaveFormMainMenuCompleted;
        
        /// <remarks/>
        public event UpdateFormMainMenuCompletedEventHandler UpdateFormMainMenuCompleted;
        
        /// <remarks/>
        public event DeleteFormMainMenuCompletedEventHandler DeleteFormMainMenuCompleted;
        
        /// <remarks/>
        public event SaveFormSubMenuCompletedEventHandler SaveFormSubMenuCompleted;
        
        /// <remarks/>
        public event UpdateFormSubMenuCompletedEventHandler UpdateFormSubMenuCompleted;
        
        /// <remarks/>
        public event DeleteFormSubMenuCompletedEventHandler DeleteFormSubMenuCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionCompletedEventHandler GetFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListCompletedEventHandler GetFormModuleFunctionListCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListNotInYnUserCompletedEventHandler GetFormModuleFunctionListNotInYnUserCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListNotInYnRoleCompletedEventHandler GetFormModuleFunctionListNotInYnRoleCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkListByUserIdCompletedEventHandler GetFormModuleFunctionUserLinkListByUserIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventHandler GetFormModuleFunctionRoleLinkListByRoleIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkCompletedEventHandler GetFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventHandler GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventHandler GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionCompletedEventHandler DeleteFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionCompletedEventHandler SaveFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionCompletedEventHandler UpdateFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionUserLinkCompletedEventHandler SaveFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionUserLinkCompletedEventHandler DeleteFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionUserLinkCompletedEventHandler UpdateFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionRoleLinkCompletedEventHandler SaveFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionRoleLinkCompletedEventHandler DeleteFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionRoleLinkCompletedEventHandler UpdateFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDoorList(string ticket, ref string message) {
            object[] results = this.Invoke("GetDoorList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoorListAsync(string ticket, string message) {
            this.GetDoorListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetDoorListAsync(string ticket, string message, object userState) {
            if ((this.GetDoorListOperationCompleted == null)) {
                this.GetDoorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoorListOperationCompleted);
            }
            this.InvokeAsync("GetDoorList", new object[] {
                        ticket,
                        message}, this.GetDoorListOperationCompleted, userState);
        }
        
        private void OnGetDoorListOperationCompleted(object arg) {
            if ((this.GetDoorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoorListCompleted(this, new GetDoorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserAuthentication(string userId, string userPwd, string hostIP, ref string message, ref string encryptTicket) {
            object[] results = this.Invoke("UserAuthentication", new object[] {
                        userId,
                        userPwd,
                        hostIP,
                        message,
                        encryptTicket});
            message = ((string)(results[1]));
            encryptTicket = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserAuthenticationAsync(string userId, string userPwd, string hostIP, string message, string encryptTicket) {
            this.UserAuthenticationAsync(userId, userPwd, hostIP, message, encryptTicket, null);
        }
        
        /// <remarks/>
        public void UserAuthenticationAsync(string userId, string userPwd, string hostIP, string message, string encryptTicket, object userState) {
            if ((this.UserAuthenticationOperationCompleted == null)) {
                this.UserAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAuthenticationOperationCompleted);
            }
            this.InvokeAsync("UserAuthentication", new object[] {
                        userId,
                        userPwd,
                        hostIP,
                        message,
                        encryptTicket}, this.UserAuthenticationOperationCompleted, userState);
        }
        
        private void OnUserAuthenticationOperationCompleted(object arg) {
            if ((this.UserAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAuthenticationCompleted(this, new UserAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TryGetAscmUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TryGetAscmUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("TryGetAscmUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TryGetAscmUserAsync(string ticket, string userId, string message) {
            this.TryGetAscmUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void TryGetAscmUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.TryGetAscmUserOperationCompleted == null)) {
                this.TryGetAscmUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTryGetAscmUserOperationCompleted);
            }
            this.InvokeAsync("TryGetAscmUser", new object[] {
                        ticket,
                        userId,
                        message}, this.TryGetAscmUserOperationCompleted, userState);
        }
        
        private void OnTryGetAscmUserOperationCompleted(object arg) {
            if ((this.TryGetAscmUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TryGetAscmUserCompleted(this, new TryGetAscmUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCount(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetCount", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAsync(string ticket, string sql, string message) {
            this.GetCountAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetCountAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetCountOperationCompleted == null)) {
                this.GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountOperationCompleted);
            }
            this.InvokeAsync("GetCount", new object[] {
                        ticket,
                        sql,
                        message}, this.GetCountOperationCompleted, userState);
        }
        
        private void OnGetCountOperationCompleted(object arg) {
            if ((this.GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCompleted(this, new GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMaxId(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetMaxId", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIdAsync(string ticket, string sql, string message) {
            this.GetMaxIdAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetMaxIdAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetMaxIdOperationCompleted == null)) {
                this.GetMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIdOperationCompleted);
            }
            this.InvokeAsync("GetMaxId", new object[] {
                        ticket,
                        sql,
                        message}, this.GetMaxIdOperationCompleted, userState);
        }
        
        private void OnGetMaxIdOperationCompleted(object arg) {
            if ((this.GetMaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIdCompleted(this, new GetMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetObject(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetObject", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectAsync(string ticket, string sql, string message) {
            this.GetObjectAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetObjectAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetObjectOperationCompleted == null)) {
                this.GetObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectOperationCompleted);
            }
            this.InvokeAsync("GetObject", new object[] {
                        ticket,
                        sql,
                        message}, this.GetObjectOperationCompleted, userState);
        }
        
        private void OnGetObjectOperationCompleted(object arg) {
            if ((this.GetObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectCompleted(this, new GetObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeList(string ticket, ref string _ynPage, string queryWord, string whereOther, ref string message) {
            object[] results = this.Invoke("GetEmployeeList", new object[] {
                        ticket,
                        _ynPage,
                        queryWord,
                        whereOther,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeListAsync(string ticket, string _ynPage, string queryWord, string whereOther, string message) {
            this.GetEmployeeListAsync(ticket, _ynPage, queryWord, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetEmployeeListAsync(string ticket, string _ynPage, string queryWord, string whereOther, string message, object userState) {
            if ((this.GetEmployeeListOperationCompleted == null)) {
                this.GetEmployeeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeListOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeList", new object[] {
                        ticket,
                        _ynPage,
                        queryWord,
                        whereOther,
                        message}, this.GetEmployeeListOperationCompleted, userState);
        }
        
        private void OnGetEmployeeListOperationCompleted(object arg) {
            if ((this.GetEmployeeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeListCompleted(this, new GetEmployeeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveEmployee(string ticket, string _ascmEmployee, ref string message) {
            object[] results = this.Invoke("SaveEmployee", new object[] {
                        ticket,
                        _ascmEmployee,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmployeeAsync(string ticket, string _ascmEmployee, string message) {
            this.SaveEmployeeAsync(ticket, _ascmEmployee, message, null);
        }
        
        /// <remarks/>
        public void SaveEmployeeAsync(string ticket, string _ascmEmployee, string message, object userState) {
            if ((this.SaveEmployeeOperationCompleted == null)) {
                this.SaveEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmployeeOperationCompleted);
            }
            this.InvokeAsync("SaveEmployee", new object[] {
                        ticket,
                        _ascmEmployee,
                        message}, this.SaveEmployeeOperationCompleted, userState);
        }
        
        private void OnSaveEmployeeOperationCompleted(object arg) {
            if ((this.SaveEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmployeeCompleted(this, new SaveEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmployee(string ticket, string _ascmEmployee, ref string message) {
            object[] results = this.Invoke("UpdateEmployee", new object[] {
                        ticket,
                        _ascmEmployee,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(string ticket, string _ascmEmployee, string message) {
            this.UpdateEmployeeAsync(ticket, _ascmEmployee, message, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(string ticket, string _ascmEmployee, string message, object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        ticket,
                        _ascmEmployee,
                        message}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmployee(string ticket, int rmployeeId, ref string message) {
            object[] results = this.Invoke("DeleteEmployee", new object[] {
                        ticket,
                        rmployeeId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(string ticket, int rmployeeId, string message) {
            this.DeleteEmployeeAsync(ticket, rmployeeId, message, null);
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(string ticket, int rmployeeId, string message, object userState) {
            if ((this.DeleteEmployeeOperationCompleted == null)) {
                this.DeleteEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployee", new object[] {
                        ticket,
                        rmployeeId,
                        message}, this.DeleteEmployeeOperationCompleted, userState);
        }
        
        private void OnDeleteEmployeeOperationCompleted(object arg) {
            if ((this.DeleteEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployeeCompleted(this, new DeleteEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeCarByRfid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeCarByRfid(string ticket, string rfid, ref string message) {
            object[] results = this.Invoke("GetEmployeeCarByRfid", new object[] {
                        ticket,
                        rfid,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeCarByRfidAsync(string ticket, string rfid, string message) {
            this.GetEmployeeCarByRfidAsync(ticket, rfid, message, null);
        }
        
        /// <remarks/>
        public void GetEmployeeCarByRfidAsync(string ticket, string rfid, string message, object userState) {
            if ((this.GetEmployeeCarByRfidOperationCompleted == null)) {
                this.GetEmployeeCarByRfidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCarByRfidOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeCarByRfid", new object[] {
                        ticket,
                        rfid,
                        message}, this.GetEmployeeCarByRfidOperationCompleted, userState);
        }
        
        private void OnGetEmployeeCarByRfidOperationCompleted(object arg) {
            if ((this.GetEmployeeCarByRfidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeCarByRfidCompleted(this, new GetEmployeeCarByRfidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeCarList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeeCarList(string ticket, ref string _ynPage, string queryWord, string whereOther, ref string message) {
            object[] results = this.Invoke("GetEmployeeCarList", new object[] {
                        ticket,
                        _ynPage,
                        queryWord,
                        whereOther,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeCarListAsync(string ticket, string _ynPage, string queryWord, string whereOther, string message) {
            this.GetEmployeeCarListAsync(ticket, _ynPage, queryWord, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetEmployeeCarListAsync(string ticket, string _ynPage, string queryWord, string whereOther, string message, object userState) {
            if ((this.GetEmployeeCarListOperationCompleted == null)) {
                this.GetEmployeeCarListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCarListOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeCarList", new object[] {
                        ticket,
                        _ynPage,
                        queryWord,
                        whereOther,
                        message}, this.GetEmployeeCarListOperationCompleted, userState);
        }
        
        private void OnGetEmployeeCarListOperationCompleted(object arg) {
            if ((this.GetEmployeeCarListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeCarListCompleted(this, new GetEmployeeCarListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmployeeCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveEmployeeCar(string ticket, bool _new, string _ascmEmployeeCar, string _ascmRfid_Old, string _ascmRfid_New_Update, string _ascmRfid_New_Save, ref string message) {
            object[] results = this.Invoke("SaveEmployeeCar", new object[] {
                        ticket,
                        _new,
                        _ascmEmployeeCar,
                        _ascmRfid_Old,
                        _ascmRfid_New_Update,
                        _ascmRfid_New_Save,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmployeeCarAsync(string ticket, bool _new, string _ascmEmployeeCar, string _ascmRfid_Old, string _ascmRfid_New_Update, string _ascmRfid_New_Save, string message) {
            this.SaveEmployeeCarAsync(ticket, _new, _ascmEmployeeCar, _ascmRfid_Old, _ascmRfid_New_Update, _ascmRfid_New_Save, message, null);
        }
        
        /// <remarks/>
        public void SaveEmployeeCarAsync(string ticket, bool _new, string _ascmEmployeeCar, string _ascmRfid_Old, string _ascmRfid_New_Update, string _ascmRfid_New_Save, string message, object userState) {
            if ((this.SaveEmployeeCarOperationCompleted == null)) {
                this.SaveEmployeeCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmployeeCarOperationCompleted);
            }
            this.InvokeAsync("SaveEmployeeCar", new object[] {
                        ticket,
                        _new,
                        _ascmEmployeeCar,
                        _ascmRfid_Old,
                        _ascmRfid_New_Update,
                        _ascmRfid_New_Save,
                        message}, this.SaveEmployeeCarOperationCompleted, userState);
        }
        
        private void OnSaveEmployeeCarOperationCompleted(object arg) {
            if ((this.SaveEmployeeCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmployeeCarCompleted(this, new SaveEmployeeCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmployeeCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmployeeCar(string ticket, int rmployeeCarId, ref string message) {
            object[] results = this.Invoke("DeleteEmployeeCar", new object[] {
                        ticket,
                        rmployeeCarId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmployeeCarAsync(string ticket, int rmployeeCarId, string message) {
            this.DeleteEmployeeCarAsync(ticket, rmployeeCarId, message, null);
        }
        
        /// <remarks/>
        public void DeleteEmployeeCarAsync(string ticket, int rmployeeCarId, string message, object userState) {
            if ((this.DeleteEmployeeCarOperationCompleted == null)) {
                this.DeleteEmployeeCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeCarOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployeeCar", new object[] {
                        ticket,
                        rmployeeCarId,
                        message}, this.DeleteEmployeeCarOperationCompleted, userState);
        }
        
        private void OnDeleteEmployeeCarOperationCompleted(object arg) {
            if ((this.DeleteEmployeeCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployeeCarCompleted(this, new DeleteEmployeeCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployeeCarList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllEmployeeCarList(string ticket, ref string message) {
            object[] results = this.Invoke("GetAllEmployeeCarList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeeCarListAsync(string ticket, string message) {
            this.GetAllEmployeeCarListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetAllEmployeeCarListAsync(string ticket, string message, object userState) {
            if ((this.GetAllEmployeeCarListOperationCompleted == null)) {
                this.GetAllEmployeeCarListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeeCarListOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployeeCarList", new object[] {
                        ticket,
                        message}, this.GetAllEmployeeCarListOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeeCarListOperationCompleted(object arg) {
            if ((this.GetAllEmployeeCarListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeeCarListCompleted(this, new GetAllEmployeeCarListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpCarSwipeLogList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmpCarSwipeLogList(string ticket, ref string _ynPage, string sql, ref string message) {
            object[] results = this.Invoke("GetEmpCarSwipeLogList", new object[] {
                        ticket,
                        _ynPage,
                        sql,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpCarSwipeLogListAsync(string ticket, string _ynPage, string sql, string message) {
            this.GetEmpCarSwipeLogListAsync(ticket, _ynPage, sql, message, null);
        }
        
        /// <remarks/>
        public void GetEmpCarSwipeLogListAsync(string ticket, string _ynPage, string sql, string message, object userState) {
            if ((this.GetEmpCarSwipeLogListOperationCompleted == null)) {
                this.GetEmpCarSwipeLogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpCarSwipeLogListOperationCompleted);
            }
            this.InvokeAsync("GetEmpCarSwipeLogList", new object[] {
                        ticket,
                        _ynPage,
                        sql,
                        message}, this.GetEmpCarSwipeLogListOperationCompleted, userState);
        }
        
        private void OnGetEmpCarSwipeLogListOperationCompleted(object arg) {
            if ((this.GetEmpCarSwipeLogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpCarSwipeLogListCompleted(this, new GetEmpCarSwipeLogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AscmEmpCarSwipeLogAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AscmEmpCarSwipeLogAdd(string ticket, int doorId, string readerName, string rfid_Id, string employeeName, string plateNumber, bool pass, string description, System.DateTime startTime, string direction, ref string message) {
            object[] results = this.Invoke("AscmEmpCarSwipeLogAdd", new object[] {
                        ticket,
                        doorId,
                        readerName,
                        rfid_Id,
                        employeeName,
                        plateNumber,
                        pass,
                        description,
                        startTime,
                        direction,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AscmEmpCarSwipeLogAddAsync(string ticket, int doorId, string readerName, string rfid_Id, string employeeName, string plateNumber, bool pass, string description, System.DateTime startTime, string direction, string message) {
            this.AscmEmpCarSwipeLogAddAsync(ticket, doorId, readerName, rfid_Id, employeeName, plateNumber, pass, description, startTime, direction, message, null);
        }
        
        /// <remarks/>
        public void AscmEmpCarSwipeLogAddAsync(string ticket, int doorId, string readerName, string rfid_Id, string employeeName, string plateNumber, bool pass, string description, System.DateTime startTime, string direction, string message, object userState) {
            if ((this.AscmEmpCarSwipeLogAddOperationCompleted == null)) {
                this.AscmEmpCarSwipeLogAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAscmEmpCarSwipeLogAddOperationCompleted);
            }
            this.InvokeAsync("AscmEmpCarSwipeLogAdd", new object[] {
                        ticket,
                        doorId,
                        readerName,
                        rfid_Id,
                        employeeName,
                        plateNumber,
                        pass,
                        description,
                        startTime,
                        direction,
                        message}, this.AscmEmpCarSwipeLogAddOperationCompleted, userState);
        }
        
        private void OnAscmEmpCarSwipeLogAddOperationCompleted(object arg) {
            if ((this.AscmEmpCarSwipeLogAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AscmEmpCarSwipeLogAddCompleted(this, new AscmEmpCarSwipeLogAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAscmEmpCarSwipeLogList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAscmEmpCarSwipeLogList(string ticket, string empCarSwipeLogList, ref string message) {
            object[] results = this.Invoke("SaveAscmEmpCarSwipeLogList", new object[] {
                        ticket,
                        empCarSwipeLogList,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAscmEmpCarSwipeLogListAsync(string ticket, string empCarSwipeLogList, string message) {
            this.SaveAscmEmpCarSwipeLogListAsync(ticket, empCarSwipeLogList, message, null);
        }
        
        /// <remarks/>
        public void SaveAscmEmpCarSwipeLogListAsync(string ticket, string empCarSwipeLogList, string message, object userState) {
            if ((this.SaveAscmEmpCarSwipeLogListOperationCompleted == null)) {
                this.SaveAscmEmpCarSwipeLogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAscmEmpCarSwipeLogListOperationCompleted);
            }
            this.InvokeAsync("SaveAscmEmpCarSwipeLogList", new object[] {
                        ticket,
                        empCarSwipeLogList,
                        message}, this.SaveAscmEmpCarSwipeLogListOperationCompleted, userState);
        }
        
        private void OnSaveAscmEmpCarSwipeLogListOperationCompleted(object arg) {
            if ((this.SaveAscmEmpCarSwipeLogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAscmEmpCarSwipeLogListCompleted(this, new SaveAscmEmpCarSwipeLogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRfid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRfid(string ticket, string rfid, ref string message) {
            object[] results = this.Invoke("GetRfid", new object[] {
                        ticket,
                        rfid,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRfidAsync(string ticket, string rfid, string message) {
            this.GetRfidAsync(ticket, rfid, message, null);
        }
        
        /// <remarks/>
        public void GetRfidAsync(string ticket, string rfid, string message, object userState) {
            if ((this.GetRfidOperationCompleted == null)) {
                this.GetRfidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRfidOperationCompleted);
            }
            this.InvokeAsync("GetRfid", new object[] {
                        ticket,
                        rfid,
                        message}, this.GetRfidOperationCompleted, userState);
        }
        
        private void OnGetRfidOperationCompleted(object arg) {
            if ((this.GetRfidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRfidCompleted(this, new GetRfidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllReadingHeadList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllReadingHeadList(string ticket, ref string message) {
            object[] results = this.Invoke("GetAllReadingHeadList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllReadingHeadListAsync(string ticket, string message) {
            this.GetAllReadingHeadListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetAllReadingHeadListAsync(string ticket, string message, object userState) {
            if ((this.GetAllReadingHeadListOperationCompleted == null)) {
                this.GetAllReadingHeadListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllReadingHeadListOperationCompleted);
            }
            this.InvokeAsync("GetAllReadingHeadList", new object[] {
                        ticket,
                        message}, this.GetAllReadingHeadListOperationCompleted, userState);
        }
        
        private void OnGetAllReadingHeadListOperationCompleted(object arg) {
            if ((this.GetAllReadingHeadListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllReadingHeadListCompleted(this, new GetAllReadingHeadListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AscmReadingHeadLogAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AscmReadingHeadLogAdd(string ticket, int readingHeadId, string rfid_Id, string sn, System.DateTime startTime, bool processed, ref string message) {
            object[] results = this.Invoke("AscmReadingHeadLogAdd", new object[] {
                        ticket,
                        readingHeadId,
                        rfid_Id,
                        sn,
                        startTime,
                        processed,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AscmReadingHeadLogAddAsync(string ticket, int readingHeadId, string rfid_Id, string sn, System.DateTime startTime, bool processed, string message) {
            this.AscmReadingHeadLogAddAsync(ticket, readingHeadId, rfid_Id, sn, startTime, processed, message, null);
        }
        
        /// <remarks/>
        public void AscmReadingHeadLogAddAsync(string ticket, int readingHeadId, string rfid_Id, string sn, System.DateTime startTime, bool processed, string message, object userState) {
            if ((this.AscmReadingHeadLogAddOperationCompleted == null)) {
                this.AscmReadingHeadLogAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAscmReadingHeadLogAddOperationCompleted);
            }
            this.InvokeAsync("AscmReadingHeadLogAdd", new object[] {
                        ticket,
                        readingHeadId,
                        rfid_Id,
                        sn,
                        startTime,
                        processed,
                        message}, this.AscmReadingHeadLogAddOperationCompleted, userState);
        }
        
        private void OnAscmReadingHeadLogAddOperationCompleted(object arg) {
            if ((this.AscmReadingHeadLogAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AscmReadingHeadLogAddCompleted(this, new AscmReadingHeadLogAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierByUserId(string ticket, int erpUserId, ref string message) {
            object[] results = this.Invoke("GetSupplierByUserId", new object[] {
                        ticket,
                        erpUserId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierByUserIdAsync(string ticket, int erpUserId, string message) {
            this.GetSupplierByUserIdAsync(ticket, erpUserId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierByUserIdAsync(string ticket, int erpUserId, string message, object userState) {
            if ((this.GetSupplierByUserIdOperationCompleted == null)) {
                this.GetSupplierByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetSupplierByUserId", new object[] {
                        ticket,
                        erpUserId,
                        message}, this.GetSupplierByUserIdOperationCompleted, userState);
        }
        
        private void OnGetSupplierByUserIdOperationCompleted(object arg) {
            if ((this.GetSupplierByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierByUserIdCompleted(this, new GetSupplierByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierCurrentDeliveryOrderBatchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierCurrentDeliveryOrderBatchList(string ticket, int supplierId, int deliveryBatchSumMainId, ref string message) {
            object[] results = this.Invoke("GetSupplierCurrentDeliveryOrderBatchList", new object[] {
                        ticket,
                        supplierId,
                        deliveryBatchSumMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryOrderBatchListAsync(string ticket, int supplierId, int deliveryBatchSumMainId, string message) {
            this.GetSupplierCurrentDeliveryOrderBatchListAsync(ticket, supplierId, deliveryBatchSumMainId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryOrderBatchListAsync(string ticket, int supplierId, int deliveryBatchSumMainId, string message, object userState) {
            if ((this.GetSupplierCurrentDeliveryOrderBatchListOperationCompleted == null)) {
                this.GetSupplierCurrentDeliveryOrderBatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierCurrentDeliveryOrderBatchListOperationCompleted);
            }
            this.InvokeAsync("GetSupplierCurrentDeliveryOrderBatchList", new object[] {
                        ticket,
                        supplierId,
                        deliveryBatchSumMainId,
                        message}, this.GetSupplierCurrentDeliveryOrderBatchListOperationCompleted, userState);
        }
        
        private void OnGetSupplierCurrentDeliveryOrderBatchListOperationCompleted(object arg) {
            if ((this.GetSupplierCurrentDeliveryOrderBatchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierCurrentDeliveryOrderBatchListCompleted(this, new GetSupplierCurrentDeliveryOrderBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryOrderBatchDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliveryOrderBatchDetailList(string ticket, int batchId, ref string message) {
            object[] results = this.Invoke("GetDeliveryOrderBatchDetailList", new object[] {
                        ticket,
                        batchId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchDetailListAsync(string ticket, int batchId, string message) {
            this.GetDeliveryOrderBatchDetailListAsync(ticket, batchId, message, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchDetailListAsync(string ticket, int batchId, string message, object userState) {
            if ((this.GetDeliveryOrderBatchDetailListOperationCompleted == null)) {
                this.GetDeliveryOrderBatchDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrderBatchDetailListOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrderBatchDetailList", new object[] {
                        ticket,
                        batchId,
                        message}, this.GetDeliveryOrderBatchDetailListOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrderBatchDetailListOperationCompleted(object arg) {
            if ((this.GetDeliveryOrderBatchDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrderBatchDetailListCompleted(this, new GetDeliveryOrderBatchDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryOrderBatchMaterialDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliveryOrderBatchMaterialDetailList(string ticket, int batchId, ref string message) {
            object[] results = this.Invoke("GetDeliveryOrderBatchMaterialDetailList", new object[] {
                        ticket,
                        batchId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchMaterialDetailListAsync(string ticket, int batchId, string message) {
            this.GetDeliveryOrderBatchMaterialDetailListAsync(ticket, batchId, message, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchMaterialDetailListAsync(string ticket, int batchId, string message, object userState) {
            if ((this.GetDeliveryOrderBatchMaterialDetailListOperationCompleted == null)) {
                this.GetDeliveryOrderBatchMaterialDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrderBatchMaterialDetailListOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrderBatchMaterialDetailList", new object[] {
                        ticket,
                        batchId,
                        message}, this.GetDeliveryOrderBatchMaterialDetailListOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrderBatchMaterialDetailListOperationCompleted(object arg) {
            if ((this.GetDeliveryOrderBatchMaterialDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrderBatchMaterialDetailListCompleted(this, new GetDeliveryOrderBatchMaterialDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryOrderBatchSumMainMaterialDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliveryOrderBatchSumMainMaterialDetailList(string ticket, int sumMainId, ref string message) {
            object[] results = this.Invoke("GetDeliveryOrderBatchSumMainMaterialDetailList", new object[] {
                        ticket,
                        sumMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchSumMainMaterialDetailListAsync(string ticket, int sumMainId, string message) {
            this.GetDeliveryOrderBatchSumMainMaterialDetailListAsync(ticket, sumMainId, message, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrderBatchSumMainMaterialDetailListAsync(string ticket, int sumMainId, string message, object userState) {
            if ((this.GetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted == null)) {
                this.GetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrderBatchSumMainMaterialDetailList", new object[] {
                        ticket,
                        sumMainId,
                        message}, this.GetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrderBatchSumMainMaterialDetailListOperationCompleted(object arg) {
            if ((this.GetDeliveryOrderBatchSumMainMaterialDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrderBatchSumMainMaterialDetailListCompleted(this, new GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SupplierDriverToPlant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SupplierDriverToPlant(string ticket, int doorId, string readingHead, int driverId, bool inPlant, string direction, ref string message) {
            object[] results = this.Invoke("SupplierDriverToPlant", new object[] {
                        ticket,
                        doorId,
                        readingHead,
                        driverId,
                        inPlant,
                        direction,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SupplierDriverToPlantAsync(string ticket, int doorId, string readingHead, int driverId, bool inPlant, string direction, string message) {
            this.SupplierDriverToPlantAsync(ticket, doorId, readingHead, driverId, inPlant, direction, message, null);
        }
        
        /// <remarks/>
        public void SupplierDriverToPlantAsync(string ticket, int doorId, string readingHead, int driverId, bool inPlant, string direction, string message, object userState) {
            if ((this.SupplierDriverToPlantOperationCompleted == null)) {
                this.SupplierDriverToPlantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupplierDriverToPlantOperationCompleted);
            }
            this.InvokeAsync("SupplierDriverToPlant", new object[] {
                        ticket,
                        doorId,
                        readingHead,
                        driverId,
                        inPlant,
                        direction,
                        message}, this.SupplierDriverToPlantOperationCompleted, userState);
        }
        
        private void OnSupplierDriverToPlantOperationCompleted(object arg) {
            if ((this.SupplierDriverToPlantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupplierDriverToPlantCompleted(this, new SupplierDriverToPlantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierCurrentDeliveryBatchSumMainList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierCurrentDeliveryBatchSumMainList(string ticket, int supplierId, ref string message) {
            object[] results = this.Invoke("GetSupplierCurrentDeliveryBatchSumMainList", new object[] {
                        ticket,
                        supplierId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumMainListAsync(string ticket, int supplierId, string message) {
            this.GetSupplierCurrentDeliveryBatchSumMainListAsync(ticket, supplierId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumMainListAsync(string ticket, int supplierId, string message, object userState) {
            if ((this.GetSupplierCurrentDeliveryBatchSumMainListOperationCompleted == null)) {
                this.GetSupplierCurrentDeliveryBatchSumMainListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierCurrentDeliveryBatchSumMainListOperationCompleted);
            }
            this.InvokeAsync("GetSupplierCurrentDeliveryBatchSumMainList", new object[] {
                        ticket,
                        supplierId,
                        message}, this.GetSupplierCurrentDeliveryBatchSumMainListOperationCompleted, userState);
        }
        
        private void OnGetSupplierCurrentDeliveryBatchSumMainListOperationCompleted(object arg) {
            if ((this.GetSupplierCurrentDeliveryBatchSumMainListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierCurrentDeliveryBatchSumMainListCompleted(this, new GetSupplierCurrentDeliveryBatchSumMainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierCurrentDeliveryBatchSumDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierCurrentDeliveryBatchSumDetailList(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetSupplierCurrentDeliveryBatchSumDetailList", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumDetailListAsync(string ticket, int mainId, string message) {
            this.GetSupplierCurrentDeliveryBatchSumDetailListAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumDetailListAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted == null)) {
                this.GetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted);
            }
            this.InvokeAsync("GetSupplierCurrentDeliveryBatchSumDetailList", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted, userState);
        }
        
        private void OnGetSupplierCurrentDeliveryBatchSumDetailListOperationCompleted(object arg) {
            if ((this.GetSupplierCurrentDeliveryBatchSumDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierCurrentDeliveryBatchSumDetailListCompleted(this, new GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierDriverDeliveryBatchSumMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierDriverDeliveryBatchSumMain(string ticket, int driverId, ref string message) {
            object[] results = this.Invoke("GetSupplierDriverDeliveryBatchSumMain", new object[] {
                        ticket,
                        driverId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierDriverDeliveryBatchSumMainAsync(string ticket, int driverId, string message) {
            this.GetSupplierDriverDeliveryBatchSumMainAsync(ticket, driverId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierDriverDeliveryBatchSumMainAsync(string ticket, int driverId, string message, object userState) {
            if ((this.GetSupplierDriverDeliveryBatchSumMainOperationCompleted == null)) {
                this.GetSupplierDriverDeliveryBatchSumMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierDriverDeliveryBatchSumMainOperationCompleted);
            }
            this.InvokeAsync("GetSupplierDriverDeliveryBatchSumMain", new object[] {
                        ticket,
                        driverId,
                        message}, this.GetSupplierDriverDeliveryBatchSumMainOperationCompleted, userState);
        }
        
        private void OnGetSupplierDriverDeliveryBatchSumMainOperationCompleted(object arg) {
            if ((this.GetSupplierDriverDeliveryBatchSumMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierDriverDeliveryBatchSumMainCompleted(this, new GetSupplierDriverDeliveryBatchSumMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierCurrentDeliveryBatchSumAllDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupplierCurrentDeliveryBatchSumAllDetail(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetSupplierCurrentDeliveryBatchSumAllDetail", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumAllDetailAsync(string ticket, int mainId, string message) {
            this.GetSupplierCurrentDeliveryBatchSumAllDetailAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetSupplierCurrentDeliveryBatchSumAllDetailAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted == null)) {
                this.GetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted);
            }
            this.InvokeAsync("GetSupplierCurrentDeliveryBatchSumAllDetail", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted, userState);
        }
        
        private void OnGetSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted(object arg) {
            if ((this.GetSupplierCurrentDeliveryBatchSumAllDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupplierCurrentDeliveryBatchSumAllDetailCompleted(this, new GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSupplierCurrentDeliveryBatchSumAllDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSupplierCurrentDeliveryBatchSumAllDetail(string ticket, string ascmDeliBatSumAllDetail, ref string message) {
            object[] results = this.Invoke("SaveSupplierCurrentDeliveryBatchSumAllDetail", new object[] {
                        ticket,
                        ascmDeliBatSumAllDetail,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSupplierCurrentDeliveryBatchSumAllDetailAsync(string ticket, string ascmDeliBatSumAllDetail, string message) {
            this.SaveSupplierCurrentDeliveryBatchSumAllDetailAsync(ticket, ascmDeliBatSumAllDetail, message, null);
        }
        
        /// <remarks/>
        public void SaveSupplierCurrentDeliveryBatchSumAllDetailAsync(string ticket, string ascmDeliBatSumAllDetail, string message, object userState) {
            if ((this.SaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted == null)) {
                this.SaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted);
            }
            this.InvokeAsync("SaveSupplierCurrentDeliveryBatchSumAllDetail", new object[] {
                        ticket,
                        ascmDeliBatSumAllDetail,
                        message}, this.SaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted, userState);
        }
        
        private void OnSaveSupplierCurrentDeliveryBatchSumAllDetailOperationCompleted(object arg) {
            if ((this.SaveSupplierCurrentDeliveryBatchSumAllDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSupplierCurrentDeliveryBatchSumAllDetailCompleted(this, new SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainer(string ticket, string containerSn, ref string message) {
            object[] results = this.Invoke("GetContainer", new object[] {
                        ticket,
                        containerSn,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerAsync(string ticket, string containerSn, string message) {
            this.GetContainerAsync(ticket, containerSn, message, null);
        }
        
        /// <remarks/>
        public void GetContainerAsync(string ticket, string containerSn, string message, object userState) {
            if ((this.GetContainerOperationCompleted == null)) {
                this.GetContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerOperationCompleted);
            }
            this.InvokeAsync("GetContainer", new object[] {
                        ticket,
                        containerSn,
                        message}, this.GetContainerOperationCompleted, userState);
        }
        
        private void OnGetContainerOperationCompleted(object arg) {
            if ((this.GetContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerCompleted(this, new GetContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainerDeliveryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainerDeliveryList(string ticket, string containerSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("GetContainerDeliveryList", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerDeliveryListAsync(string ticket, string containerSn, int batSumMainId, string message) {
            this.GetContainerDeliveryListAsync(ticket, containerSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void GetContainerDeliveryListAsync(string ticket, string containerSn, int batSumMainId, string message, object userState) {
            if ((this.GetContainerDeliveryListOperationCompleted == null)) {
                this.GetContainerDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerDeliveryListOperationCompleted);
            }
            this.InvokeAsync("GetContainerDeliveryList", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        message}, this.GetContainerDeliveryListOperationCompleted, userState);
        }
        
        private void OnGetContainerDeliveryListOperationCompleted(object arg) {
            if ((this.GetContainerDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerDeliveryListCompleted(this, new GetContainerDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainerDeliveryListByDeliverySumMainId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainerDeliveryListByDeliverySumMainId(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetContainerDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message) {
            this.GetContainerDeliveryListByDeliverySumMainIdAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetContainerDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetContainerDeliveryListByDeliverySumMainIdOperationCompleted == null)) {
                this.GetContainerDeliveryListByDeliverySumMainIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerDeliveryListByDeliverySumMainIdOperationCompleted);
            }
            this.InvokeAsync("GetContainerDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetContainerDeliveryListByDeliverySumMainIdOperationCompleted, userState);
        }
        
        private void OnGetContainerDeliveryListByDeliverySumMainIdOperationCompleted(object arg) {
            if ((this.GetContainerDeliveryListByDeliverySumMainIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerDeliveryListByDeliverySumMainIdCompleted(this, new GetContainerDeliveryListByDeliverySumMainIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerDeliveryAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContainerDeliveryAdd(string ticket, string containerSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, ref string message) {
            object[] results = this.Invoke("ContainerDeliveryAdd", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerDeliveryAddAsync(string ticket, string containerSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message) {
            this.ContainerDeliveryAddAsync(ticket, containerSn, batSumMainId, deliveryOrderBatchId, materialId, quantity, message, null);
        }
        
        /// <remarks/>
        public void ContainerDeliveryAddAsync(string ticket, string containerSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message, object userState) {
            if ((this.ContainerDeliveryAddOperationCompleted == null)) {
                this.ContainerDeliveryAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerDeliveryAddOperationCompleted);
            }
            this.InvokeAsync("ContainerDeliveryAdd", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message}, this.ContainerDeliveryAddOperationCompleted, userState);
        }
        
        private void OnContainerDeliveryAddOperationCompleted(object arg) {
            if ((this.ContainerDeliveryAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerDeliveryAddCompleted(this, new ContainerDeliveryAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerDeliveryUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContainerDeliveryUpdate(string ticket, int id, decimal quantity, ref string message) {
            object[] results = this.Invoke("ContainerDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message) {
            this.ContainerDeliveryUpdateAsync(ticket, id, quantity, message, null);
        }
        
        /// <remarks/>
        public void ContainerDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message, object userState) {
            if ((this.ContainerDeliveryUpdateOperationCompleted == null)) {
                this.ContainerDeliveryUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerDeliveryUpdateOperationCompleted);
            }
            this.InvokeAsync("ContainerDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message}, this.ContainerDeliveryUpdateOperationCompleted, userState);
        }
        
        private void OnContainerDeliveryUpdateOperationCompleted(object arg) {
            if ((this.ContainerDeliveryUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerDeliveryUpdateCompleted(this, new ContainerDeliveryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerDeliveryDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContainerDeliveryDelete(string ticket, int id, ref string message) {
            object[] results = this.Invoke("ContainerDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerDeliveryDeleteAsync(string ticket, int id, string message) {
            this.ContainerDeliveryDeleteAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void ContainerDeliveryDeleteAsync(string ticket, int id, string message, object userState) {
            if ((this.ContainerDeliveryDeleteOperationCompleted == null)) {
                this.ContainerDeliveryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerDeliveryDeleteOperationCompleted);
            }
            this.InvokeAsync("ContainerDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message}, this.ContainerDeliveryDeleteOperationCompleted, userState);
        }
        
        private void OnContainerDeliveryDeleteOperationCompleted(object arg) {
            if ((this.ContainerDeliveryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerDeliveryDeleteCompleted(this, new ContainerDeliveryDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerDeliveryClear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContainerDeliveryClear(string ticket, string containerSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("ContainerDeliveryClear", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerDeliveryClearAsync(string ticket, string containerSn, int batSumMainId, string message) {
            this.ContainerDeliveryClearAsync(ticket, containerSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void ContainerDeliveryClearAsync(string ticket, string containerSn, int batSumMainId, string message, object userState) {
            if ((this.ContainerDeliveryClearOperationCompleted == null)) {
                this.ContainerDeliveryClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerDeliveryClearOperationCompleted);
            }
            this.InvokeAsync("ContainerDeliveryClear", new object[] {
                        ticket,
                        containerSn,
                        batSumMainId,
                        message}, this.ContainerDeliveryClearOperationCompleted, userState);
        }
        
        private void OnContainerDeliveryClearOperationCompleted(object arg) {
            if ((this.ContainerDeliveryClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerDeliveryClearCompleted(this, new ContainerDeliveryClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPallet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPallet(string ticket, string palletSn, ref string message) {
            object[] results = this.Invoke("GetPallet", new object[] {
                        ticket,
                        palletSn,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalletAsync(string ticket, string palletSn, string message) {
            this.GetPalletAsync(ticket, palletSn, message, null);
        }
        
        /// <remarks/>
        public void GetPalletAsync(string ticket, string palletSn, string message, object userState) {
            if ((this.GetPalletOperationCompleted == null)) {
                this.GetPalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalletOperationCompleted);
            }
            this.InvokeAsync("GetPallet", new object[] {
                        ticket,
                        palletSn,
                        message}, this.GetPalletOperationCompleted, userState);
        }
        
        private void OnGetPalletOperationCompleted(object arg) {
            if ((this.GetPalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalletCompleted(this, new GetPalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPalletDeliveryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPalletDeliveryList(string ticket, string palletSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("GetPalletDeliveryList", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalletDeliveryListAsync(string ticket, string palletSn, int batSumMainId, string message) {
            this.GetPalletDeliveryListAsync(ticket, palletSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void GetPalletDeliveryListAsync(string ticket, string palletSn, int batSumMainId, string message, object userState) {
            if ((this.GetPalletDeliveryListOperationCompleted == null)) {
                this.GetPalletDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalletDeliveryListOperationCompleted);
            }
            this.InvokeAsync("GetPalletDeliveryList", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        message}, this.GetPalletDeliveryListOperationCompleted, userState);
        }
        
        private void OnGetPalletDeliveryListOperationCompleted(object arg) {
            if ((this.GetPalletDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalletDeliveryListCompleted(this, new GetPalletDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPalletDeliveryListByDeliverySumMainId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPalletDeliveryListByDeliverySumMainId(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetPalletDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalletDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message) {
            this.GetPalletDeliveryListByDeliverySumMainIdAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetPalletDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetPalletDeliveryListByDeliverySumMainIdOperationCompleted == null)) {
                this.GetPalletDeliveryListByDeliverySumMainIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalletDeliveryListByDeliverySumMainIdOperationCompleted);
            }
            this.InvokeAsync("GetPalletDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetPalletDeliveryListByDeliverySumMainIdOperationCompleted, userState);
        }
        
        private void OnGetPalletDeliveryListByDeliverySumMainIdOperationCompleted(object arg) {
            if ((this.GetPalletDeliveryListByDeliverySumMainIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalletDeliveryListByDeliverySumMainIdCompleted(this, new GetPalletDeliveryListByDeliverySumMainIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PalletDeliveryAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PalletDeliveryAdd(string ticket, string palletSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, ref string message) {
            object[] results = this.Invoke("PalletDeliveryAdd", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PalletDeliveryAddAsync(string ticket, string palletSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message) {
            this.PalletDeliveryAddAsync(ticket, palletSn, batSumMainId, deliveryOrderBatchId, materialId, quantity, message, null);
        }
        
        /// <remarks/>
        public void PalletDeliveryAddAsync(string ticket, string palletSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message, object userState) {
            if ((this.PalletDeliveryAddOperationCompleted == null)) {
                this.PalletDeliveryAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPalletDeliveryAddOperationCompleted);
            }
            this.InvokeAsync("PalletDeliveryAdd", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message}, this.PalletDeliveryAddOperationCompleted, userState);
        }
        
        private void OnPalletDeliveryAddOperationCompleted(object arg) {
            if ((this.PalletDeliveryAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PalletDeliveryAddCompleted(this, new PalletDeliveryAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PalletDeliveryUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PalletDeliveryUpdate(string ticket, int id, decimal quantity, ref string message) {
            object[] results = this.Invoke("PalletDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PalletDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message) {
            this.PalletDeliveryUpdateAsync(ticket, id, quantity, message, null);
        }
        
        /// <remarks/>
        public void PalletDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message, object userState) {
            if ((this.PalletDeliveryUpdateOperationCompleted == null)) {
                this.PalletDeliveryUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPalletDeliveryUpdateOperationCompleted);
            }
            this.InvokeAsync("PalletDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message}, this.PalletDeliveryUpdateOperationCompleted, userState);
        }
        
        private void OnPalletDeliveryUpdateOperationCompleted(object arg) {
            if ((this.PalletDeliveryUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PalletDeliveryUpdateCompleted(this, new PalletDeliveryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PalletDeliveryDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PalletDeliveryDelete(string ticket, int id, ref string message) {
            object[] results = this.Invoke("PalletDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PalletDeliveryDeleteAsync(string ticket, int id, string message) {
            this.PalletDeliveryDeleteAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void PalletDeliveryDeleteAsync(string ticket, int id, string message, object userState) {
            if ((this.PalletDeliveryDeleteOperationCompleted == null)) {
                this.PalletDeliveryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPalletDeliveryDeleteOperationCompleted);
            }
            this.InvokeAsync("PalletDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message}, this.PalletDeliveryDeleteOperationCompleted, userState);
        }
        
        private void OnPalletDeliveryDeleteOperationCompleted(object arg) {
            if ((this.PalletDeliveryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PalletDeliveryDeleteCompleted(this, new PalletDeliveryDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PalletDeliveryClear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PalletDeliveryClear(string ticket, string palletSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("PalletDeliveryClear", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PalletDeliveryClearAsync(string ticket, string palletSn, int batSumMainId, string message) {
            this.PalletDeliveryClearAsync(ticket, palletSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void PalletDeliveryClearAsync(string ticket, string palletSn, int batSumMainId, string message, object userState) {
            if ((this.PalletDeliveryClearOperationCompleted == null)) {
                this.PalletDeliveryClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPalletDeliveryClearOperationCompleted);
            }
            this.InvokeAsync("PalletDeliveryClear", new object[] {
                        ticket,
                        palletSn,
                        batSumMainId,
                        message}, this.PalletDeliveryClearOperationCompleted, userState);
        }
        
        private void OnPalletDeliveryClearOperationCompleted(object arg) {
            if ((this.PalletDeliveryClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PalletDeliveryClearCompleted(this, new PalletDeliveryClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriverByDriverSn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDriverByDriverSn(string ticket, string driverSn, ref string message) {
            object[] results = this.Invoke("GetDriverByDriverSn", new object[] {
                        ticket,
                        driverSn,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriverByDriverSnAsync(string ticket, string driverSn, string message) {
            this.GetDriverByDriverSnAsync(ticket, driverSn, message, null);
        }
        
        /// <remarks/>
        public void GetDriverByDriverSnAsync(string ticket, string driverSn, string message, object userState) {
            if ((this.GetDriverByDriverSnOperationCompleted == null)) {
                this.GetDriverByDriverSnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverByDriverSnOperationCompleted);
            }
            this.InvokeAsync("GetDriverByDriverSn", new object[] {
                        ticket,
                        driverSn,
                        message}, this.GetDriverByDriverSnOperationCompleted, userState);
        }
        
        private void OnGetDriverByDriverSnOperationCompleted(object arg) {
            if ((this.GetDriverByDriverSnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriverByDriverSnCompleted(this, new GetDriverByDriverSnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriverDeliveryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDriverDeliveryList(string ticket, string driverSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("GetDriverDeliveryList", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriverDeliveryListAsync(string ticket, string driverSn, int batSumMainId, string message) {
            this.GetDriverDeliveryListAsync(ticket, driverSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void GetDriverDeliveryListAsync(string ticket, string driverSn, int batSumMainId, string message, object userState) {
            if ((this.GetDriverDeliveryListOperationCompleted == null)) {
                this.GetDriverDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverDeliveryListOperationCompleted);
            }
            this.InvokeAsync("GetDriverDeliveryList", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        message}, this.GetDriverDeliveryListOperationCompleted, userState);
        }
        
        private void OnGetDriverDeliveryListOperationCompleted(object arg) {
            if ((this.GetDriverDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriverDeliveryListCompleted(this, new GetDriverDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriverDeliveryListByDeliverySumMainId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDriverDeliveryListByDeliverySumMainId(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetDriverDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriverDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message) {
            this.GetDriverDeliveryListByDeliverySumMainIdAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetDriverDeliveryListByDeliverySumMainIdAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetDriverDeliveryListByDeliverySumMainIdOperationCompleted == null)) {
                this.GetDriverDeliveryListByDeliverySumMainIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriverDeliveryListByDeliverySumMainIdOperationCompleted);
            }
            this.InvokeAsync("GetDriverDeliveryListByDeliverySumMainId", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetDriverDeliveryListByDeliverySumMainIdOperationCompleted, userState);
        }
        
        private void OnGetDriverDeliveryListByDeliverySumMainIdOperationCompleted(object arg) {
            if ((this.GetDriverDeliveryListByDeliverySumMainIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriverDeliveryListByDeliverySumMainIdCompleted(this, new GetDriverDeliveryListByDeliverySumMainIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DriverDeliveryAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DriverDeliveryAdd(string ticket, string driverSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, ref string message) {
            object[] results = this.Invoke("DriverDeliveryAdd", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DriverDeliveryAddAsync(string ticket, string driverSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message) {
            this.DriverDeliveryAddAsync(ticket, driverSn, batSumMainId, deliveryOrderBatchId, materialId, quantity, message, null);
        }
        
        /// <remarks/>
        public void DriverDeliveryAddAsync(string ticket, string driverSn, int batSumMainId, int deliveryOrderBatchId, int materialId, decimal quantity, string message, object userState) {
            if ((this.DriverDeliveryAddOperationCompleted == null)) {
                this.DriverDeliveryAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDriverDeliveryAddOperationCompleted);
            }
            this.InvokeAsync("DriverDeliveryAdd", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        deliveryOrderBatchId,
                        materialId,
                        quantity,
                        message}, this.DriverDeliveryAddOperationCompleted, userState);
        }
        
        private void OnDriverDeliveryAddOperationCompleted(object arg) {
            if ((this.DriverDeliveryAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DriverDeliveryAddCompleted(this, new DriverDeliveryAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DriverDeliveryUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DriverDeliveryUpdate(string ticket, int id, decimal quantity, ref string message) {
            object[] results = this.Invoke("DriverDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DriverDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message) {
            this.DriverDeliveryUpdateAsync(ticket, id, quantity, message, null);
        }
        
        /// <remarks/>
        public void DriverDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message, object userState) {
            if ((this.DriverDeliveryUpdateOperationCompleted == null)) {
                this.DriverDeliveryUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDriverDeliveryUpdateOperationCompleted);
            }
            this.InvokeAsync("DriverDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message}, this.DriverDeliveryUpdateOperationCompleted, userState);
        }
        
        private void OnDriverDeliveryUpdateOperationCompleted(object arg) {
            if ((this.DriverDeliveryUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DriverDeliveryUpdateCompleted(this, new DriverDeliveryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DriverDeliveryDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DriverDeliveryDelete(string ticket, int id, ref string message) {
            object[] results = this.Invoke("DriverDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DriverDeliveryDeleteAsync(string ticket, int id, string message) {
            this.DriverDeliveryDeleteAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void DriverDeliveryDeleteAsync(string ticket, int id, string message, object userState) {
            if ((this.DriverDeliveryDeleteOperationCompleted == null)) {
                this.DriverDeliveryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDriverDeliveryDeleteOperationCompleted);
            }
            this.InvokeAsync("DriverDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message}, this.DriverDeliveryDeleteOperationCompleted, userState);
        }
        
        private void OnDriverDeliveryDeleteOperationCompleted(object arg) {
            if ((this.DriverDeliveryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DriverDeliveryDeleteCompleted(this, new DriverDeliveryDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DriverDeliveryClear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DriverDeliveryClear(string ticket, string driverSn, int batSumMainId, ref string message) {
            object[] results = this.Invoke("DriverDeliveryClear", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DriverDeliveryClearAsync(string ticket, string driverSn, int batSumMainId, string message) {
            this.DriverDeliveryClearAsync(ticket, driverSn, batSumMainId, message, null);
        }
        
        /// <remarks/>
        public void DriverDeliveryClearAsync(string ticket, string driverSn, int batSumMainId, string message, object userState) {
            if ((this.DriverDeliveryClearOperationCompleted == null)) {
                this.DriverDeliveryClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDriverDeliveryClearOperationCompleted);
            }
            this.InvokeAsync("DriverDeliveryClear", new object[] {
                        ticket,
                        driverSn,
                        batSumMainId,
                        message}, this.DriverDeliveryClearOperationCompleted, userState);
        }
        
        private void OnDriverDeliveryClearOperationCompleted(object arg) {
            if ((this.DriverDeliveryClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DriverDeliveryClearCompleted(this, new DriverDeliveryClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnloadingPointList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnloadingPointList(string ticket, ref string message) {
            object[] results = this.Invoke("GetUnloadingPointList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnloadingPointListAsync(string ticket, string message) {
            this.GetUnloadingPointListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetUnloadingPointListAsync(string ticket, string message, object userState) {
            if ((this.GetUnloadingPointListOperationCompleted == null)) {
                this.GetUnloadingPointListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnloadingPointListOperationCompleted);
            }
            this.InvokeAsync("GetUnloadingPointList", new object[] {
                        ticket,
                        message}, this.GetUnloadingPointListOperationCompleted, userState);
        }
        
        private void OnGetUnloadingPointListOperationCompleted(object arg) {
            if ((this.GetUnloadingPointListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnloadingPointListCompleted(this, new GetUnloadingPointListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnloadingPointUpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnloadingPointUpdateStatus(string ticket, int id, string status, ref string message) {
            object[] results = this.Invoke("UnloadingPointUpdateStatus", new object[] {
                        ticket,
                        id,
                        status,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnloadingPointUpdateStatusAsync(string ticket, int id, string status, string message) {
            this.UnloadingPointUpdateStatusAsync(ticket, id, status, message, null);
        }
        
        /// <remarks/>
        public void UnloadingPointUpdateStatusAsync(string ticket, int id, string status, string message, object userState) {
            if ((this.UnloadingPointUpdateStatusOperationCompleted == null)) {
                this.UnloadingPointUpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnloadingPointUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UnloadingPointUpdateStatus", new object[] {
                        ticket,
                        id,
                        status,
                        message}, this.UnloadingPointUpdateStatusOperationCompleted, userState);
        }
        
        private void OnUnloadingPointUpdateStatusOperationCompleted(object arg) {
            if ((this.UnloadingPointUpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnloadingPointUpdateStatusCompleted(this, new UnloadingPointUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnloadingPointControllerList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnloadingPointControllerList(string ticket, ref string message) {
            object[] results = this.Invoke("GetUnloadingPointControllerList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnloadingPointControllerListAsync(string ticket, string message) {
            this.GetUnloadingPointControllerListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetUnloadingPointControllerListAsync(string ticket, string message, object userState) {
            if ((this.GetUnloadingPointControllerListOperationCompleted == null)) {
                this.GetUnloadingPointControllerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnloadingPointControllerListOperationCompleted);
            }
            this.InvokeAsync("GetUnloadingPointControllerList", new object[] {
                        ticket,
                        message}, this.GetUnloadingPointControllerListOperationCompleted, userState);
        }
        
        private void OnGetUnloadingPointControllerListOperationCompleted(object arg) {
            if ((this.GetUnloadingPointControllerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnloadingPointControllerListCompleted(this, new GetUnloadingPointControllerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeeperCurrentPreparationMainList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeeperCurrentPreparationMainList(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetKeeperCurrentPreparationMainList", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeeperCurrentPreparationMainListAsync(string ticket, string userId, string message) {
            this.GetKeeperCurrentPreparationMainListAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetKeeperCurrentPreparationMainListAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetKeeperCurrentPreparationMainListOperationCompleted == null)) {
                this.GetKeeperCurrentPreparationMainListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeeperCurrentPreparationMainListOperationCompleted);
            }
            this.InvokeAsync("GetKeeperCurrentPreparationMainList", new object[] {
                        ticket,
                        userId,
                        message}, this.GetKeeperCurrentPreparationMainListOperationCompleted, userState);
        }
        
        private void OnGetKeeperCurrentPreparationMainListOperationCompleted(object arg) {
            if ((this.GetKeeperCurrentPreparationMainListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeeperCurrentPreparationMainListCompleted(this, new GetKeeperCurrentPreparationMainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeeperCurrentPreparationSumDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeeperCurrentPreparationSumDetailList(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetKeeperCurrentPreparationSumDetailList", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeeperCurrentPreparationSumDetailListAsync(string ticket, int mainId, string message) {
            this.GetKeeperCurrentPreparationSumDetailListAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetKeeperCurrentPreparationSumDetailListAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetKeeperCurrentPreparationSumDetailListOperationCompleted == null)) {
                this.GetKeeperCurrentPreparationSumDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeeperCurrentPreparationSumDetailListOperationCompleted);
            }
            this.InvokeAsync("GetKeeperCurrentPreparationSumDetailList", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetKeeperCurrentPreparationSumDetailListOperationCompleted, userState);
        }
        
        private void OnGetKeeperCurrentPreparationSumDetailListOperationCompleted(object arg) {
            if ((this.GetKeeperCurrentPreparationSumDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeeperCurrentPreparationSumDetailListCompleted(this, new GetKeeperCurrentPreparationSumDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWmsContainerDeliveryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWmsContainerDeliveryList(string ticket, string containerSn, int preparationMainId, ref string message) {
            object[] results = this.Invoke("GetWmsContainerDeliveryList", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWmsContainerDeliveryListAsync(string ticket, string containerSn, int preparationMainId, string message) {
            this.GetWmsContainerDeliveryListAsync(ticket, containerSn, preparationMainId, message, null);
        }
        
        /// <remarks/>
        public void GetWmsContainerDeliveryListAsync(string ticket, string containerSn, int preparationMainId, string message, object userState) {
            if ((this.GetWmsContainerDeliveryListOperationCompleted == null)) {
                this.GetWmsContainerDeliveryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWmsContainerDeliveryListOperationCompleted);
            }
            this.InvokeAsync("GetWmsContainerDeliveryList", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        message}, this.GetWmsContainerDeliveryListOperationCompleted, userState);
        }
        
        private void OnGetWmsContainerDeliveryListOperationCompleted(object arg) {
            if ((this.GetWmsContainerDeliveryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWmsContainerDeliveryListCompleted(this, new GetWmsContainerDeliveryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWmsContainerDeliveryListByPreparationMainId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWmsContainerDeliveryListByPreparationMainId(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetWmsContainerDeliveryListByPreparationMainId", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWmsContainerDeliveryListByPreparationMainIdAsync(string ticket, int mainId, string message) {
            this.GetWmsContainerDeliveryListByPreparationMainIdAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetWmsContainerDeliveryListByPreparationMainIdAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetWmsContainerDeliveryListByPreparationMainIdOperationCompleted == null)) {
                this.GetWmsContainerDeliveryListByPreparationMainIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWmsContainerDeliveryListByPreparationMainIdOperationCompleted);
            }
            this.InvokeAsync("GetWmsContainerDeliveryListByPreparationMainId", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetWmsContainerDeliveryListByPreparationMainIdOperationCompleted, userState);
        }
        
        private void OnGetWmsContainerDeliveryListByPreparationMainIdOperationCompleted(object arg) {
            if ((this.GetWmsContainerDeliveryListByPreparationMainIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWmsContainerDeliveryListByPreparationMainIdCompleted(this, new GetWmsContainerDeliveryListByPreparationMainIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WmsContainerDeliveryAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WmsContainerDeliveryAdd(string ticket, string containerSn, int preparationMainId, int materialId, int warelocationId, decimal quantity, ref string message) {
            object[] results = this.Invoke("WmsContainerDeliveryAdd", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        materialId,
                        warelocationId,
                        quantity,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryAddAsync(string ticket, string containerSn, int preparationMainId, int materialId, int warelocationId, decimal quantity, string message) {
            this.WmsContainerDeliveryAddAsync(ticket, containerSn, preparationMainId, materialId, warelocationId, quantity, message, null);
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryAddAsync(string ticket, string containerSn, int preparationMainId, int materialId, int warelocationId, decimal quantity, string message, object userState) {
            if ((this.WmsContainerDeliveryAddOperationCompleted == null)) {
                this.WmsContainerDeliveryAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWmsContainerDeliveryAddOperationCompleted);
            }
            this.InvokeAsync("WmsContainerDeliveryAdd", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        materialId,
                        warelocationId,
                        quantity,
                        message}, this.WmsContainerDeliveryAddOperationCompleted, userState);
        }
        
        private void OnWmsContainerDeliveryAddOperationCompleted(object arg) {
            if ((this.WmsContainerDeliveryAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WmsContainerDeliveryAddCompleted(this, new WmsContainerDeliveryAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WmsContainerDeliveryUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WmsContainerDeliveryUpdate(string ticket, int id, decimal quantity, ref string message) {
            object[] results = this.Invoke("WmsContainerDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message) {
            this.WmsContainerDeliveryUpdateAsync(ticket, id, quantity, message, null);
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryUpdateAsync(string ticket, int id, decimal quantity, string message, object userState) {
            if ((this.WmsContainerDeliveryUpdateOperationCompleted == null)) {
                this.WmsContainerDeliveryUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWmsContainerDeliveryUpdateOperationCompleted);
            }
            this.InvokeAsync("WmsContainerDeliveryUpdate", new object[] {
                        ticket,
                        id,
                        quantity,
                        message}, this.WmsContainerDeliveryUpdateOperationCompleted, userState);
        }
        
        private void OnWmsContainerDeliveryUpdateOperationCompleted(object arg) {
            if ((this.WmsContainerDeliveryUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WmsContainerDeliveryUpdateCompleted(this, new WmsContainerDeliveryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WmsContainerDeliveryDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WmsContainerDeliveryDelete(string ticket, int id, ref string message) {
            object[] results = this.Invoke("WmsContainerDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryDeleteAsync(string ticket, int id, string message) {
            this.WmsContainerDeliveryDeleteAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryDeleteAsync(string ticket, int id, string message, object userState) {
            if ((this.WmsContainerDeliveryDeleteOperationCompleted == null)) {
                this.WmsContainerDeliveryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWmsContainerDeliveryDeleteOperationCompleted);
            }
            this.InvokeAsync("WmsContainerDeliveryDelete", new object[] {
                        ticket,
                        id,
                        message}, this.WmsContainerDeliveryDeleteOperationCompleted, userState);
        }
        
        private void OnWmsContainerDeliveryDeleteOperationCompleted(object arg) {
            if ((this.WmsContainerDeliveryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WmsContainerDeliveryDeleteCompleted(this, new WmsContainerDeliveryDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WmsContainerDeliveryClear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WmsContainerDeliveryClear(string ticket, string containerSn, int preparationMainId, ref string message) {
            object[] results = this.Invoke("WmsContainerDeliveryClear", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryClearAsync(string ticket, string containerSn, int preparationMainId, string message) {
            this.WmsContainerDeliveryClearAsync(ticket, containerSn, preparationMainId, message, null);
        }
        
        /// <remarks/>
        public void WmsContainerDeliveryClearAsync(string ticket, string containerSn, int preparationMainId, string message, object userState) {
            if ((this.WmsContainerDeliveryClearOperationCompleted == null)) {
                this.WmsContainerDeliveryClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWmsContainerDeliveryClearOperationCompleted);
            }
            this.InvokeAsync("WmsContainerDeliveryClear", new object[] {
                        ticket,
                        containerSn,
                        preparationMainId,
                        message}, this.WmsContainerDeliveryClearOperationCompleted, userState);
        }
        
        private void OnWmsContainerDeliveryClearOperationCompleted(object arg) {
            if ((this.WmsContainerDeliveryClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WmsContainerDeliveryClearCompleted(this, new WmsContainerDeliveryClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeeperCurrentWmsPreparationAllDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeeperCurrentWmsPreparationAllDetail(string ticket, int mainId, ref string message) {
            object[] results = this.Invoke("GetKeeperCurrentWmsPreparationAllDetail", new object[] {
                        ticket,
                        mainId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeeperCurrentWmsPreparationAllDetailAsync(string ticket, int mainId, string message) {
            this.GetKeeperCurrentWmsPreparationAllDetailAsync(ticket, mainId, message, null);
        }
        
        /// <remarks/>
        public void GetKeeperCurrentWmsPreparationAllDetailAsync(string ticket, int mainId, string message, object userState) {
            if ((this.GetKeeperCurrentWmsPreparationAllDetailOperationCompleted == null)) {
                this.GetKeeperCurrentWmsPreparationAllDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeeperCurrentWmsPreparationAllDetailOperationCompleted);
            }
            this.InvokeAsync("GetKeeperCurrentWmsPreparationAllDetail", new object[] {
                        ticket,
                        mainId,
                        message}, this.GetKeeperCurrentWmsPreparationAllDetailOperationCompleted, userState);
        }
        
        private void OnGetKeeperCurrentWmsPreparationAllDetailOperationCompleted(object arg) {
            if ((this.GetKeeperCurrentWmsPreparationAllDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeeperCurrentWmsPreparationAllDetailCompleted(this, new GetKeeperCurrentWmsPreparationAllDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveKeeperCurrentWmsPreparationAllDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveKeeperCurrentWmsPreparationAllDetail(string ticket, string ascmWmsPreparationAllDetail, ref string message) {
            object[] results = this.Invoke("SaveKeeperCurrentWmsPreparationAllDetail", new object[] {
                        ticket,
                        ascmWmsPreparationAllDetail,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveKeeperCurrentWmsPreparationAllDetailAsync(string ticket, string ascmWmsPreparationAllDetail, string message) {
            this.SaveKeeperCurrentWmsPreparationAllDetailAsync(ticket, ascmWmsPreparationAllDetail, message, null);
        }
        
        /// <remarks/>
        public void SaveKeeperCurrentWmsPreparationAllDetailAsync(string ticket, string ascmWmsPreparationAllDetail, string message, object userState) {
            if ((this.SaveKeeperCurrentWmsPreparationAllDetailOperationCompleted == null)) {
                this.SaveKeeperCurrentWmsPreparationAllDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveKeeperCurrentWmsPreparationAllDetailOperationCompleted);
            }
            this.InvokeAsync("SaveKeeperCurrentWmsPreparationAllDetail", new object[] {
                        ticket,
                        ascmWmsPreparationAllDetail,
                        message}, this.SaveKeeperCurrentWmsPreparationAllDetailOperationCompleted, userState);
        }
        
        private void OnSaveKeeperCurrentWmsPreparationAllDetailOperationCompleted(object arg) {
            if ((this.SaveKeeperCurrentWmsPreparationAllDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveKeeperCurrentWmsPreparationAllDetailCompleted(this, new SaveKeeperCurrentWmsPreparationAllDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoorLedTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDoorLedTitle(string ticket, ref string message) {
            object[] results = this.Invoke("GetDoorLedTitle", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoorLedTitleAsync(string ticket, string message) {
            this.GetDoorLedTitleAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetDoorLedTitleAsync(string ticket, string message, object userState) {
            if ((this.GetDoorLedTitleOperationCompleted == null)) {
                this.GetDoorLedTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoorLedTitleOperationCompleted);
            }
            this.InvokeAsync("GetDoorLedTitle", new object[] {
                        ticket,
                        message}, this.GetDoorLedTitleOperationCompleted, userState);
        }
        
        private void OnGetDoorLedTitleOperationCompleted(object arg) {
            if ((this.GetDoorLedTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoorLedTitleCompleted(this, new GetDoorLedTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoorLedSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDoorLedSupplier(string ticket, ref string message) {
            object[] results = this.Invoke("GetDoorLedSupplier", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoorLedSupplierAsync(string ticket, string message) {
            this.GetDoorLedSupplierAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetDoorLedSupplierAsync(string ticket, string message, object userState) {
            if ((this.GetDoorLedSupplierOperationCompleted == null)) {
                this.GetDoorLedSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoorLedSupplierOperationCompleted);
            }
            this.InvokeAsync("GetDoorLedSupplier", new object[] {
                        ticket,
                        message}, this.GetDoorLedSupplierOperationCompleted, userState);
        }
        
        private void OnGetDoorLedSupplierOperationCompleted(object arg) {
            if ((this.GetDoorLedSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoorLedSupplierCompleted(this, new GetDoorLedSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEnterSupplierDeliBatSumMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEnterSupplierDeliBatSumMain(string ticket, int driverId, ref string message) {
            object[] results = this.Invoke("GetEnterSupplierDeliBatSumMain", new object[] {
                        ticket,
                        driverId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnterSupplierDeliBatSumMainAsync(string ticket, int driverId, string message) {
            this.GetEnterSupplierDeliBatSumMainAsync(ticket, driverId, message, null);
        }
        
        /// <remarks/>
        public void GetEnterSupplierDeliBatSumMainAsync(string ticket, int driverId, string message, object userState) {
            if ((this.GetEnterSupplierDeliBatSumMainOperationCompleted == null)) {
                this.GetEnterSupplierDeliBatSumMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnterSupplierDeliBatSumMainOperationCompleted);
            }
            this.InvokeAsync("GetEnterSupplierDeliBatSumMain", new object[] {
                        ticket,
                        driverId,
                        message}, this.GetEnterSupplierDeliBatSumMainOperationCompleted, userState);
        }
        
        private void OnGetEnterSupplierDeliBatSumMainOperationCompleted(object arg) {
            if ((this.GetEnterSupplierDeliBatSumMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnterSupplierDeliBatSumMainCompleted(this, new GetEnterSupplierDeliBatSumMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarelocationByRfid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarelocationByRfid(string ticket, string rfid, ref string message) {
            object[] results = this.Invoke("GetWarelocationByRfid", new object[] {
                        ticket,
                        rfid,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarelocationByRfidAsync(string ticket, string rfid, string message) {
            this.GetWarelocationByRfidAsync(ticket, rfid, message, null);
        }
        
        /// <remarks/>
        public void GetWarelocationByRfidAsync(string ticket, string rfid, string message, object userState) {
            if ((this.GetWarelocationByRfidOperationCompleted == null)) {
                this.GetWarelocationByRfidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarelocationByRfidOperationCompleted);
            }
            this.InvokeAsync("GetWarelocationByRfid", new object[] {
                        ticket,
                        rfid,
                        message}, this.GetWarelocationByRfidOperationCompleted, userState);
        }
        
        private void OnGetWarelocationByRfidOperationCompleted(object arg) {
            if ((this.GetWarelocationByRfidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarelocationByRfidCompleted(this, new GetWarelocationByRfidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddWmsLocationTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddWmsLocationTransfer(string ticket, string ascmWmsLocationTransfer, ref string message) {
            object[] results = this.Invoke("AddWmsLocationTransfer", new object[] {
                        ticket,
                        ascmWmsLocationTransfer,
                        message});
            message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddWmsLocationTransferAsync(string ticket, string ascmWmsLocationTransfer, string message) {
            this.AddWmsLocationTransferAsync(ticket, ascmWmsLocationTransfer, message, null);
        }
        
        /// <remarks/>
        public void AddWmsLocationTransferAsync(string ticket, string ascmWmsLocationTransfer, string message, object userState) {
            if ((this.AddWmsLocationTransferOperationCompleted == null)) {
                this.AddWmsLocationTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWmsLocationTransferOperationCompleted);
            }
            this.InvokeAsync("AddWmsLocationTransfer", new object[] {
                        ticket,
                        ascmWmsLocationTransfer,
                        message}, this.AddWmsLocationTransferOperationCompleted, userState);
        }
        
        private void OnAddWmsLocationTransferOperationCompleted(object arg) {
            if ((this.AddWmsLocationTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWmsLocationTransferCompleted(this, new AddWmsLocationTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWmsLocationTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWmsLocationTransfer(string ticket, string ascmWmsLocationTransfer, ref string message) {
            object[] results = this.Invoke("UpdateWmsLocationTransfer", new object[] {
                        ticket,
                        ascmWmsLocationTransfer,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWmsLocationTransferAsync(string ticket, string ascmWmsLocationTransfer, string message) {
            this.UpdateWmsLocationTransferAsync(ticket, ascmWmsLocationTransfer, message, null);
        }
        
        /// <remarks/>
        public void UpdateWmsLocationTransferAsync(string ticket, string ascmWmsLocationTransfer, string message, object userState) {
            if ((this.UpdateWmsLocationTransferOperationCompleted == null)) {
                this.UpdateWmsLocationTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWmsLocationTransferOperationCompleted);
            }
            this.InvokeAsync("UpdateWmsLocationTransfer", new object[] {
                        ticket,
                        ascmWmsLocationTransfer,
                        message}, this.UpdateWmsLocationTransferOperationCompleted, userState);
        }
        
        private void OnUpdateWmsLocationTransferOperationCompleted(object arg) {
            if ((this.UpdateWmsLocationTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWmsLocationTransferCompleted(this, new UpdateWmsLocationTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTasksList(string ticket, string queryStatus, string queryDate, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("GetTasksList", new object[] {
                        ticket,
                        queryStatus,
                        queryDate,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksListAsync(string ticket, string queryStatus, string queryDate, string _ynPage, string message) {
            this.GetTasksListAsync(ticket, queryStatus, queryDate, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void GetTasksListAsync(string ticket, string queryStatus, string queryDate, string _ynPage, string message, object userState) {
            if ((this.GetTasksListOperationCompleted == null)) {
                this.GetTasksListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksListOperationCompleted);
            }
            this.InvokeAsync("GetTasksList", new object[] {
                        ticket,
                        queryStatus,
                        queryDate,
                        _ynPage,
                        message}, this.GetTasksListOperationCompleted, userState);
        }
        
        private void OnGetTasksListOperationCompleted(object arg) {
            if ((this.GetTasksListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksListCompleted(this, new GetTasksListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTaskSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddTaskSave(string ticket, string _getMaterialTask, string warehouserPlace, ref string message) {
            object[] results = this.Invoke("AddTaskSave", new object[] {
                        ticket,
                        _getMaterialTask,
                        warehouserPlace,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddTaskSaveAsync(string ticket, string _getMaterialTask, string warehouserPlace, string message) {
            this.AddTaskSaveAsync(ticket, _getMaterialTask, warehouserPlace, message, null);
        }
        
        /// <remarks/>
        public void AddTaskSaveAsync(string ticket, string _getMaterialTask, string warehouserPlace, string message, object userState) {
            if ((this.AddTaskSaveOperationCompleted == null)) {
                this.AddTaskSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaskSaveOperationCompleted);
            }
            this.InvokeAsync("AddTaskSave", new object[] {
                        ticket,
                        _getMaterialTask,
                        warehouserPlace,
                        message}, this.AddTaskSaveOperationCompleted, userState);
        }
        
        private void OnAddTaskSaveOperationCompleted(object arg) {
            if ((this.AddTaskSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaskSaveCompleted(this, new AddTaskSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TaskDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TaskDelete(string ticket, int id, ref string message) {
            object[] results = this.Invoke("TaskDelete", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TaskDeleteAsync(string ticket, int id, string message) {
            this.TaskDeleteAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void TaskDeleteAsync(string ticket, int id, string message, object userState) {
            if ((this.TaskDeleteOperationCompleted == null)) {
                this.TaskDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskDeleteOperationCompleted);
            }
            this.InvokeAsync("TaskDelete", new object[] {
                        ticket,
                        id,
                        message}, this.TaskDeleteOperationCompleted, userState);
        }
        
        private void OnTaskDeleteOperationCompleted(object arg) {
            if ((this.TaskDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskDeleteCompleted(this, new TaskDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditTaskSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditTaskSave(string ticket, string _getMaterialTask, ref string message) {
            object[] results = this.Invoke("EditTaskSave", new object[] {
                        ticket,
                        _getMaterialTask,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditTaskSaveAsync(string ticket, string _getMaterialTask, string message) {
            this.EditTaskSaveAsync(ticket, _getMaterialTask, message, null);
        }
        
        /// <remarks/>
        public void EditTaskSaveAsync(string ticket, string _getMaterialTask, string message, object userState) {
            if ((this.EditTaskSaveOperationCompleted == null)) {
                this.EditTaskSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTaskSaveOperationCompleted);
            }
            this.InvokeAsync("EditTaskSave", new object[] {
                        ticket,
                        _getMaterialTask,
                        message}, this.EditTaskSaveOperationCompleted, userState);
        }
        
        private void OnEditTaskSaveOperationCompleted(object arg) {
            if ((this.EditTaskSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTaskSaveCompleted(this, new EditTaskSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaterialList(string ticket, string docNumber, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("GetMaterialList", new object[] {
                        ticket,
                        docNumber,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaterialListAsync(string ticket, string docNumber, string _ynPage, string message) {
            this.GetMaterialListAsync(ticket, docNumber, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void GetMaterialListAsync(string ticket, string docNumber, string _ynPage, string message, object userState) {
            if ((this.GetMaterialListOperationCompleted == null)) {
                this.GetMaterialListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialListOperationCompleted);
            }
            this.InvokeAsync("GetMaterialList", new object[] {
                        ticket,
                        docNumber,
                        _ynPage,
                        message}, this.GetMaterialListOperationCompleted, userState);
        }
        
        private void OnGetMaterialListOperationCompleted(object arg) {
            if ((this.GetMaterialListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaterialListCompleted(this, new GetMaterialListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MaterialOfDiscreteJobList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MaterialOfDiscreteJobList(string ticket, int materialId, string startTime, string endTime, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("MaterialOfDiscreteJobList", new object[] {
                        ticket,
                        materialId,
                        startTime,
                        endTime,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MaterialOfDiscreteJobListAsync(string ticket, int materialId, string startTime, string endTime, string _ynPage, string message) {
            this.MaterialOfDiscreteJobListAsync(ticket, materialId, startTime, endTime, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void MaterialOfDiscreteJobListAsync(string ticket, int materialId, string startTime, string endTime, string _ynPage, string message, object userState) {
            if ((this.MaterialOfDiscreteJobListOperationCompleted == null)) {
                this.MaterialOfDiscreteJobListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMaterialOfDiscreteJobListOperationCompleted);
            }
            this.InvokeAsync("MaterialOfDiscreteJobList", new object[] {
                        ticket,
                        materialId,
                        startTime,
                        endTime,
                        _ynPage,
                        message}, this.MaterialOfDiscreteJobListOperationCompleted, userState);
        }
        
        private void OnMaterialOfDiscreteJobListOperationCompleted(object arg) {
            if ((this.MaterialOfDiscreteJobListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MaterialOfDiscreteJobListCompleted(this, new MaterialOfDiscreteJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskList(string ticket, string name, string status, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("GetTaskList", new object[] {
                        ticket,
                        name,
                        status,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskListAsync(string ticket, string name, string status, string _ynPage, string message) {
            this.GetTaskListAsync(ticket, name, status, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void GetTaskListAsync(string ticket, string name, string status, string _ynPage, string message, object userState) {
            if ((this.GetTaskListOperationCompleted == null)) {
                this.GetTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskListOperationCompleted);
            }
            this.InvokeAsync("GetTaskList", new object[] {
                        ticket,
                        name,
                        status,
                        _ynPage,
                        message}, this.GetTaskListOperationCompleted, userState);
        }
        
        private void OnGetTaskListOperationCompleted(object arg) {
            if ((this.GetTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskListCompleted(this, new GetTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJobList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetJobList(string ticket, int id, ref string message) {
            object[] results = this.Invoke("GetJobList", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobListAsync(string ticket, int id, string message) {
            this.GetJobListAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void GetJobListAsync(string ticket, int id, string message, object userState) {
            if ((this.GetJobListOperationCompleted == null)) {
                this.GetJobListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobListOperationCompleted);
            }
            this.InvokeAsync("GetJobList", new object[] {
                        ticket,
                        id,
                        message}, this.GetJobListOperationCompleted, userState);
        }
        
        private void OnGetJobListOperationCompleted(object arg) {
            if ((this.GetJobListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobListCompleted(this, new GetJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMtlList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMtlList(string ticket, string taskId, string jobName, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("GetMtlList", new object[] {
                        ticket,
                        taskId,
                        jobName,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMtlListAsync(string ticket, string taskId, string jobName, string _ynPage, string message) {
            this.GetMtlListAsync(ticket, taskId, jobName, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void GetMtlListAsync(string ticket, string taskId, string jobName, string _ynPage, string message, object userState) {
            if ((this.GetMtlListOperationCompleted == null)) {
                this.GetMtlListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMtlListOperationCompleted);
            }
            this.InvokeAsync("GetMtlList", new object[] {
                        ticket,
                        taskId,
                        jobName,
                        _ynPage,
                        message}, this.GetMtlListOperationCompleted, userState);
        }
        
        private void OnGetMtlListOperationCompleted(object arg) {
            if ((this.GetMtlListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMtlListCompleted(this, new GetMtlListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartExcuteTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartExcuteTask(string ticket, string name, string releaseHeaderIds, ref string message) {
            object[] results = this.Invoke("StartExcuteTask", new object[] {
                        ticket,
                        name,
                        releaseHeaderIds,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartExcuteTaskAsync(string ticket, string name, string releaseHeaderIds, string message) {
            this.StartExcuteTaskAsync(ticket, name, releaseHeaderIds, message, null);
        }
        
        /// <remarks/>
        public void StartExcuteTaskAsync(string ticket, string name, string releaseHeaderIds, string message, object userState) {
            if ((this.StartExcuteTaskOperationCompleted == null)) {
                this.StartExcuteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartExcuteTaskOperationCompleted);
            }
            this.InvokeAsync("StartExcuteTask", new object[] {
                        ticket,
                        name,
                        releaseHeaderIds,
                        message}, this.StartExcuteTaskOperationCompleted, userState);
        }
        
        private void OnStartExcuteTaskOperationCompleted(object arg) {
            if ((this.StartExcuteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartExcuteTaskCompleted(this, new StartExcuteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EndExcuteTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EndExcuteTask(string ticket, string name, ref string message) {
            object[] results = this.Invoke("EndExcuteTask", new object[] {
                        ticket,
                        name,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EndExcuteTaskAsync(string ticket, string name, string message) {
            this.EndExcuteTaskAsync(ticket, name, message, null);
        }
        
        /// <remarks/>
        public void EndExcuteTaskAsync(string ticket, string name, string message, object userState) {
            if ((this.EndExcuteTaskOperationCompleted == null)) {
                this.EndExcuteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndExcuteTaskOperationCompleted);
            }
            this.InvokeAsync("EndExcuteTask", new object[] {
                        ticket,
                        name,
                        message}, this.EndExcuteTaskOperationCompleted, userState);
        }
        
        private void OnEndExcuteTaskOperationCompleted(object arg) {
            if ((this.EndExcuteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndExcuteTaskCompleted(this, new EndExcuteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SumMaterialTotal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SumMaterialTotal(string ticket, ref string _ynPage, ref string message) {
            object[] results = this.Invoke("SumMaterialTotal", new object[] {
                        ticket,
                        _ynPage,
                        message});
            _ynPage = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SumMaterialTotalAsync(string ticket, string _ynPage, string message) {
            this.SumMaterialTotalAsync(ticket, _ynPage, message, null);
        }
        
        /// <remarks/>
        public void SumMaterialTotalAsync(string ticket, string _ynPage, string message, object userState) {
            if ((this.SumMaterialTotalOperationCompleted == null)) {
                this.SumMaterialTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSumMaterialTotalOperationCompleted);
            }
            this.InvokeAsync("SumMaterialTotal", new object[] {
                        ticket,
                        _ynPage,
                        message}, this.SumMaterialTotalOperationCompleted, userState);
        }
        
        private void OnSumMaterialTotalOperationCompleted(object arg) {
            if ((this.SumMaterialTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SumMaterialTotalCompleted(this, new SumMaterialTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTaskInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckTaskInfo(string ticket, string taskId, ref string message) {
            object[] results = this.Invoke("CheckTaskInfo", new object[] {
                        ticket,
                        taskId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTaskInfoAsync(string ticket, string taskId, string message) {
            this.CheckTaskInfoAsync(ticket, taskId, message, null);
        }
        
        /// <remarks/>
        public void CheckTaskInfoAsync(string ticket, string taskId, string message, object userState) {
            if ((this.CheckTaskInfoOperationCompleted == null)) {
                this.CheckTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTaskInfoOperationCompleted);
            }
            this.InvokeAsync("CheckTaskInfo", new object[] {
                        ticket,
                        taskId,
                        message}, this.CheckTaskInfoOperationCompleted, userState);
        }
        
        private void OnCheckTaskInfoOperationCompleted(object arg) {
            if ((this.CheckTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTaskInfoCompleted(this, new CheckTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfrimedGetMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfrimedGetMaterial(string ticket, string name, string releaseHeaderIds, ref string message) {
            object[] results = this.Invoke("ConfrimedGetMaterial", new object[] {
                        ticket,
                        name,
                        releaseHeaderIds,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfrimedGetMaterialAsync(string ticket, string name, string releaseHeaderIds, string message) {
            this.ConfrimedGetMaterialAsync(ticket, name, releaseHeaderIds, message, null);
        }
        
        /// <remarks/>
        public void ConfrimedGetMaterialAsync(string ticket, string name, string releaseHeaderIds, string message, object userState) {
            if ((this.ConfrimedGetMaterialOperationCompleted == null)) {
                this.ConfrimedGetMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfrimedGetMaterialOperationCompleted);
            }
            this.InvokeAsync("ConfrimedGetMaterial", new object[] {
                        ticket,
                        name,
                        releaseHeaderIds,
                        message}, this.ConfrimedGetMaterialOperationCompleted, userState);
        }
        
        private void OnConfrimedGetMaterialOperationCompleted(object arg) {
            if ((this.ConfrimedGetMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfrimedGetMaterialCompleted(this, new ConfrimedGetMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainerSpaceInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainerSpaceInfo(string ticket, string id, ref string message) {
            object[] results = this.Invoke("GetContainerSpaceInfo", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerSpaceInfoAsync(string ticket, string id, string message) {
            this.GetContainerSpaceInfoAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void GetContainerSpaceInfoAsync(string ticket, string id, string message, object userState) {
            if ((this.GetContainerSpaceInfoOperationCompleted == null)) {
                this.GetContainerSpaceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerSpaceInfoOperationCompleted);
            }
            this.InvokeAsync("GetContainerSpaceInfo", new object[] {
                        ticket,
                        id,
                        message}, this.GetContainerSpaceInfoOperationCompleted, userState);
        }
        
        private void OnGetContainerSpaceInfoOperationCompleted(object arg) {
            if ((this.GetContainerSpaceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerSpaceInfoCompleted(this, new GetContainerSpaceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAscmTagLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAscmTagLog(string ticket, string id, ref string message) {
            object[] results = this.Invoke("GetAscmTagLog", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAscmTagLogAsync(string ticket, string id, string message) {
            this.GetAscmTagLogAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void GetAscmTagLogAsync(string ticket, string id, string message, object userState) {
            if ((this.GetAscmTagLogOperationCompleted == null)) {
                this.GetAscmTagLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAscmTagLogOperationCompleted);
            }
            this.InvokeAsync("GetAscmTagLog", new object[] {
                        ticket,
                        id,
                        message}, this.GetAscmTagLogOperationCompleted, userState);
        }
        
        private void OnGetAscmTagLogOperationCompleted(object arg) {
            if ((this.GetAscmTagLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAscmTagLogCompleted(this, new GetAscmTagLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainerSupplierInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainerSupplierInfo(string ticket, string id, ref string message) {
            object[] results = this.Invoke("GetContainerSupplierInfo", new object[] {
                        ticket,
                        id,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerSupplierInfoAsync(string ticket, string id, string message) {
            this.GetContainerSupplierInfoAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void GetContainerSupplierInfoAsync(string ticket, string id, string message, object userState) {
            if ((this.GetContainerSupplierInfoOperationCompleted == null)) {
                this.GetContainerSupplierInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerSupplierInfoOperationCompleted);
            }
            this.InvokeAsync("GetContainerSupplierInfo", new object[] {
                        ticket,
                        id,
                        message}, this.GetContainerSupplierInfoOperationCompleted, userState);
        }
        
        private void OnGetContainerSupplierInfoOperationCompleted(object arg) {
            if ((this.GetContainerSupplierInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerSupplierInfoCompleted(this, new GetContainerSupplierInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContainerCheck(string ticket, ref string message, string strSn, string status, string userName) {
            object[] results = this.Invoke("ContainerCheck", new object[] {
                        ticket,
                        message,
                        strSn,
                        status,
                        userName});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerCheckAsync(string ticket, string message, string strSn, string status, string userName) {
            this.ContainerCheckAsync(ticket, message, strSn, status, userName, null);
        }
        
        /// <remarks/>
        public void ContainerCheckAsync(string ticket, string message, string strSn, string status, string userName, object userState) {
            if ((this.ContainerCheckOperationCompleted == null)) {
                this.ContainerCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerCheckOperationCompleted);
            }
            this.InvokeAsync("ContainerCheck", new object[] {
                        ticket,
                        message,
                        strSn,
                        status,
                        userName}, this.ContainerCheckOperationCompleted, userState);
        }
        
        private void OnContainerCheckOperationCompleted(object arg) {
            if ((this.ContainerCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerCheckCompleted(this, new ContainerCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AscmStoreInOutSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AscmStoreInOutSave(string ticket, ref string message, string userName, string containerId, string direction, string docNumber) {
            object[] results = this.Invoke("AscmStoreInOutSave", new object[] {
                        ticket,
                        message,
                        userName,
                        containerId,
                        direction,
                        docNumber});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AscmStoreInOutSaveAsync(string ticket, string message, string userName, string containerId, string direction, string docNumber) {
            this.AscmStoreInOutSaveAsync(ticket, message, userName, containerId, direction, docNumber, null);
        }
        
        /// <remarks/>
        public void AscmStoreInOutSaveAsync(string ticket, string message, string userName, string containerId, string direction, string docNumber, object userState) {
            if ((this.AscmStoreInOutSaveOperationCompleted == null)) {
                this.AscmStoreInOutSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAscmStoreInOutSaveOperationCompleted);
            }
            this.InvokeAsync("AscmStoreInOutSave", new object[] {
                        ticket,
                        message,
                        userName,
                        containerId,
                        direction,
                        docNumber}, this.AscmStoreInOutSaveOperationCompleted, userState);
        }
        
        private void OnAscmStoreInOutSaveOperationCompleted(object arg) {
            if ((this.AscmStoreInOutSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AscmStoreInOutSaveCompleted(this, new AscmStoreInOutSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAscmKeyBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAscmKeyBill() {
            object[] results = this.Invoke("GetAscmKeyBill", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAscmKeyBillAsync() {
            this.GetAscmKeyBillAsync(null);
        }
        
        /// <remarks/>
        public void GetAscmKeyBillAsync(object userState) {
            if ((this.GetAscmKeyBillOperationCompleted == null)) {
                this.GetAscmKeyBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAscmKeyBillOperationCompleted);
            }
            this.InvokeAsync("GetAscmKeyBill", new object[0], this.GetAscmKeyBillOperationCompleted, userState);
        }
        
        private void OnGetAscmKeyBillOperationCompleted(object arg) {
            if ((this.GetAscmKeyBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAscmKeyBillCompleted(this, new GetAscmKeyBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainerAllInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContainerAllInfo(string ticket, string containerSn, ref string message) {
            object[] results = this.Invoke("GetContainerAllInfo", new object[] {
                        ticket,
                        containerSn,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContainerAllInfoAsync(string ticket, string containerSn, string message) {
            this.GetContainerAllInfoAsync(ticket, containerSn, message, null);
        }
        
        /// <remarks/>
        public void GetContainerAllInfoAsync(string ticket, string containerSn, string message, object userState) {
            if ((this.GetContainerAllInfoOperationCompleted == null)) {
                this.GetContainerAllInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainerAllInfoOperationCompleted);
            }
            this.InvokeAsync("GetContainerAllInfo", new object[] {
                        ticket,
                        containerSn,
                        message}, this.GetContainerAllInfoOperationCompleted, userState);
        }
        
        private void OnGetContainerAllInfoOperationCompleted(object arg) {
            if ((this.GetContainerAllInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainerAllInfoCompleted(this, new GetContainerAllInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserBaseInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserBaseInfo(string userId, ref string message) {
            object[] results = this.Invoke("GetUserBaseInfo", new object[] {
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userId, string message) {
            this.GetUserBaseInfoAsync(userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userId, string message, object userState) {
            if ((this.GetUserBaseInfoOperationCompleted == null)) {
                this.GetUserBaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserBaseInfo", new object[] {
                        userId,
                        message}, this.GetUserBaseInfoOperationCompleted, userState);
        }
        
        private void OnGetUserBaseInfoOperationCompleted(object arg) {
            if ((this.GetUserBaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBaseInfoCompleted(this, new GetUserBaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string ticket, string userId, string message) {
            this.GetUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserList(string ticket, string _ynPage, string whereOther, ref string message) {
            object[] results = this.Invoke("GetUserList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync(string ticket, string _ynPage, string whereOther, string message) {
            this.GetUserListAsync(ticket, _ynPage, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(string ticket, string _ynPage, string whereOther, string message, object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message}, this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveUser(string ticket, string _ynUser, ref string message) {
            object[] results = this.Invoke("SaveUser", new object[] {
                        ticket,
                        _ynUser,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserAsync(string ticket, string _ynUser, string message) {
            this.SaveUserAsync(ticket, _ynUser, message, null);
        }
        
        /// <remarks/>
        public void SaveUserAsync(string ticket, string _ynUser, string message, object userState) {
            if ((this.SaveUserOperationCompleted == null)) {
                this.SaveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserOperationCompleted);
            }
            this.InvokeAsync("SaveUser", new object[] {
                        ticket,
                        _ynUser,
                        message}, this.SaveUserOperationCompleted, userState);
        }
        
        private void OnSaveUserOperationCompleted(object arg) {
            if ((this.SaveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserCompleted(this, new SaveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUser(string ticket, string _ynUser, ref string message) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        ticket,
                        _ynUser,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string ticket, string _ynUser, string message) {
            this.UpdateUserAsync(ticket, _ynUser, message, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string ticket, string _ynUser, string message, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        ticket,
                        _ynUser,
                        message}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string ticket, string userId, string message) {
            this.DeleteUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        ticket,
                        userId,
                        message}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAdministrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAdministrator(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("IsAdministrator", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAdministratorAsync(string ticket, string userId, string message) {
            this.IsAdministratorAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void IsAdministratorAsync(string ticket, string userId, string message, object userState) {
            if ((this.IsAdministratorOperationCompleted == null)) {
                this.IsAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAdministratorOperationCompleted);
            }
            this.InvokeAsync("IsAdministrator", new object[] {
                        ticket,
                        userId,
                        message}, this.IsAdministratorOperationCompleted, userState);
        }
        
        private void OnIsAdministratorOperationCompleted(object arg) {
            if ((this.IsAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAdministratorCompleted(this, new IsAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserListNotInModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserListNotInModuleFunction(string ticket, int functionId, string whereOther, ref string message) {
            object[] results = this.Invoke("GetUserListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListNotInModuleFunctionAsync(string ticket, int functionId, string whereOther, string message) {
            this.GetUserListNotInModuleFunctionAsync(ticket, functionId, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetUserListNotInModuleFunctionAsync(string ticket, int functionId, string whereOther, string message, object userState) {
            if ((this.GetUserListNotInModuleFunctionOperationCompleted == null)) {
                this.GetUserListNotInModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListNotInModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetUserListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        whereOther,
                        message}, this.GetUserListNotInModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetUserListNotInModuleFunctionOperationCompleted(object arg) {
            if ((this.GetUserListNotInModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListNotInModuleFunctionCompleted(this, new GetUserListNotInModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleLinkListByRoleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRoleLinkListByRoleId(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("GetUserRoleLinkListByRoleId", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByRoleIdAsync(string ticket, int roleId, string message) {
            this.GetUserRoleLinkListByRoleIdAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByRoleIdAsync(string ticket, int roleId, string message, object userState) {
            if ((this.GetUserRoleLinkListByRoleIdOperationCompleted == null)) {
                this.GetUserRoleLinkListByRoleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleLinkListByRoleIdOperationCompleted);
            }
            this.InvokeAsync("GetUserRoleLinkListByRoleId", new object[] {
                        ticket,
                        roleId,
                        message}, this.GetUserRoleLinkListByRoleIdOperationCompleted, userState);
        }
        
        private void OnGetUserRoleLinkListByRoleIdOperationCompleted(object arg) {
            if ((this.GetUserRoleLinkListByRoleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleLinkListByRoleIdCompleted(this, new GetUserRoleLinkListByRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleLinkListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRoleLinkListByUserId(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetUserRoleLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByUserIdAsync(string ticket, string userId, string message) {
            this.GetUserRoleLinkListByUserIdAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByUserIdAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetUserRoleLinkListByUserIdOperationCompleted == null)) {
                this.GetUserRoleLinkListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleLinkListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserRoleLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message}, this.GetUserRoleLinkListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserRoleLinkListByUserIdOperationCompleted(object arg) {
            if ((this.GetUserRoleLinkListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleLinkListByUserIdCompleted(this, new GetUserRoleLinkListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleListNotInModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleListNotInModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetRoleListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListNotInModuleFunctionAsync(string ticket, int functionId, string message) {
            this.GetRoleListNotInModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListNotInModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetRoleListNotInModuleFunctionOperationCompleted == null)) {
                this.GetRoleListNotInModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListNotInModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetRoleListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetRoleListNotInModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetRoleListNotInModuleFunctionOperationCompleted(object arg) {
            if ((this.GetRoleListNotInModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListNotInModuleFunctionCompleted(this, new GetRoleListNotInModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleList(string ticket, ref string message) {
            object[] results = this.Invoke("GetRoleList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListAsync(string ticket, string message) {
            this.GetRoleListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListAsync(string ticket, string message, object userState) {
            if ((this.GetRoleListOperationCompleted == null)) {
                this.GetRoleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListOperationCompleted);
            }
            this.InvokeAsync("GetRoleList", new object[] {
                        ticket,
                        message}, this.GetRoleListOperationCompleted, userState);
        }
        
        private void OnGetRoleListOperationCompleted(object arg) {
            if ((this.GetRoleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListCompleted(this, new GetRoleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveRole(string ticket, string _ynRole, ref string message) {
            object[] results = this.Invoke("SaveRole", new object[] {
                        ticket,
                        _ynRole,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRoleAsync(string ticket, string _ynRole, string message) {
            this.SaveRoleAsync(ticket, _ynRole, message, null);
        }
        
        /// <remarks/>
        public void SaveRoleAsync(string ticket, string _ynRole, string message, object userState) {
            if ((this.SaveRoleOperationCompleted == null)) {
                this.SaveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRoleOperationCompleted);
            }
            this.InvokeAsync("SaveRole", new object[] {
                        ticket,
                        _ynRole,
                        message}, this.SaveRoleOperationCompleted, userState);
        }
        
        private void OnSaveRoleOperationCompleted(object arg) {
            if ((this.SaveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRoleCompleted(this, new SaveRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRole(string ticket, string _ynRole, ref string message) {
            object[] results = this.Invoke("UpdateRole", new object[] {
                        ticket,
                        _ynRole,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(string ticket, string _ynRole, string message) {
            this.UpdateRoleAsync(ticket, _ynRole, message, null);
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(string ticket, string _ynRole, string message, object userState) {
            if ((this.UpdateRoleOperationCompleted == null)) {
                this.UpdateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateRole", new object[] {
                        ticket,
                        _ynRole,
                        message}, this.UpdateRoleOperationCompleted, userState);
        }
        
        private void OnUpdateRoleOperationCompleted(object arg) {
            if ((this.UpdateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoleCompleted(this, new UpdateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("DeleteRole", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string ticket, int roleId, string message) {
            this.DeleteRoleAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string ticket, int roleId, string message, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        ticket,
                        roleId,
                        message}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new DeleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleListInUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleListInUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetRoleListInUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListInUserAsync(string ticket, string userId, string message) {
            this.GetRoleListInUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListInUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetRoleListInUserOperationCompleted == null)) {
                this.GetRoleListInUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListInUserOperationCompleted);
            }
            this.InvokeAsync("GetRoleListInUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetRoleListInUserOperationCompleted, userState);
        }
        
        private void OnGetRoleListInUserOperationCompleted(object arg) {
            if ((this.GetRoleListInUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListInUserCompleted(this, new GetRoleListInUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPositionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPositionList(string ticket, string _ynPage, string whereOther, ref string message) {
            object[] results = this.Invoke("GetPositionList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPositionListAsync(string ticket, string _ynPage, string whereOther, string message) {
            this.GetPositionListAsync(ticket, _ynPage, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetPositionListAsync(string ticket, string _ynPage, string whereOther, string message, object userState) {
            if ((this.GetPositionListOperationCompleted == null)) {
                this.GetPositionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPositionListOperationCompleted);
            }
            this.InvokeAsync("GetPositionList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message}, this.GetPositionListOperationCompleted, userState);
        }
        
        private void OnGetPositionListOperationCompleted(object arg) {
            if ((this.GetPositionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPositionListCompleted(this, new GetPositionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SavePosition(string ticket, string _ynPosition, ref string message) {
            object[] results = this.Invoke("SavePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SavePositionAsync(string ticket, string _ynPosition, string message) {
            this.SavePositionAsync(ticket, _ynPosition, message, null);
        }
        
        /// <remarks/>
        public void SavePositionAsync(string ticket, string _ynPosition, string message, object userState) {
            if ((this.SavePositionOperationCompleted == null)) {
                this.SavePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePositionOperationCompleted);
            }
            this.InvokeAsync("SavePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message}, this.SavePositionOperationCompleted, userState);
        }
        
        private void OnSavePositionOperationCompleted(object arg) {
            if ((this.SavePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePositionCompleted(this, new SavePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePosition(string ticket, string _ynPosition, ref string message) {
            object[] results = this.Invoke("UpdatePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(string ticket, string _ynPosition, string message) {
            this.UpdatePositionAsync(ticket, _ynPosition, message, null);
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(string ticket, string _ynPosition, string message, object userState) {
            if ((this.UpdatePositionOperationCompleted == null)) {
                this.UpdatePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePositionOperationCompleted);
            }
            this.InvokeAsync("UpdatePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message}, this.UpdatePositionOperationCompleted, userState);
        }
        
        private void OnUpdatePositionOperationCompleted(object arg) {
            if ((this.UpdatePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePositionCompleted(this, new UpdatePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePosition(string ticket, int positionId, ref string message) {
            object[] results = this.Invoke("DeletePosition", new object[] {
                        ticket,
                        positionId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePositionAsync(string ticket, int positionId, string message) {
            this.DeletePositionAsync(ticket, positionId, message, null);
        }
        
        /// <remarks/>
        public void DeletePositionAsync(string ticket, int positionId, string message, object userState) {
            if ((this.DeletePositionOperationCompleted == null)) {
                this.DeletePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePositionOperationCompleted);
            }
            this.InvokeAsync("DeletePosition", new object[] {
                        ticket,
                        positionId,
                        message}, this.DeletePositionOperationCompleted, userState);
        }
        
        private void OnDeletePositionOperationCompleted(object arg) {
            if ((this.DeletePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePositionCompleted(this, new DeletePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentList(string ticket, int parentId, ref string message) {
            object[] results = this.Invoke("GetDepartmentList", new object[] {
                        ticket,
                        parentId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ticket, int parentId, string message) {
            this.GetDepartmentListAsync(ticket, parentId, message, null);
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ticket, int parentId, string message, object userState) {
            if ((this.GetDepartmentListOperationCompleted == null)) {
                this.GetDepartmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentList", new object[] {
                        ticket,
                        parentId,
                        message}, this.GetDepartmentListOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListOperationCompleted(object arg) {
            if ((this.GetDepartmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListCompleted(this, new GetDepartmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveDepartment(string ticket, string _ynDepartment, ref string message) {
            object[] results = this.Invoke("SaveDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDepartmentAsync(string ticket, string _ynDepartment, string message) {
            this.SaveDepartmentAsync(ticket, _ynDepartment, message, null);
        }
        
        /// <remarks/>
        public void SaveDepartmentAsync(string ticket, string _ynDepartment, string message, object userState) {
            if ((this.SaveDepartmentOperationCompleted == null)) {
                this.SaveDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDepartmentOperationCompleted);
            }
            this.InvokeAsync("SaveDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message}, this.SaveDepartmentOperationCompleted, userState);
        }
        
        private void OnSaveDepartmentOperationCompleted(object arg) {
            if ((this.SaveDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDepartmentCompleted(this, new SaveDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDepartment(string ticket, string _ynDepartment, ref string message) {
            object[] results = this.Invoke("UpdateDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string ticket, string _ynDepartment, string message) {
            this.UpdateDepartmentAsync(ticket, _ynDepartment, message, null);
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string ticket, string _ynDepartment, string message, object userState) {
            if ((this.UpdateDepartmentOperationCompleted == null)) {
                this.UpdateDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentOperationCompleted);
            }
            this.InvokeAsync("UpdateDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message}, this.UpdateDepartmentOperationCompleted, userState);
        }
        
        private void OnUpdateDepartmentOperationCompleted(object arg) {
            if ((this.UpdateDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepartmentCompleted(this, new UpdateDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartment(string ticket, int departmentId, ref string message) {
            object[] results = this.Invoke("DeleteDepartment", new object[] {
                        ticket,
                        departmentId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string ticket, int departmentId, string message) {
            this.DeleteDepartmentAsync(ticket, departmentId, message, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string ticket, int departmentId, string message, object userState) {
            if ((this.DeleteDepartmentOperationCompleted == null)) {
                this.DeleteDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartment", new object[] {
                        ticket,
                        departmentId,
                        message}, this.DeleteDepartmentOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentOperationCompleted(object arg) {
            if ((this.DeleteDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentCompleted(this, new DeleteDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentPositionLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentPositionLink(string ticket, int departmentId, int positionId, ref string message) {
            object[] results = this.Invoke("GetDepartmentPositionLink", new object[] {
                        ticket,
                        departmentId,
                        positionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentPositionLinkAsync(string ticket, int departmentId, int positionId, string message) {
            this.GetDepartmentPositionLinkAsync(ticket, departmentId, positionId, message, null);
        }
        
        /// <remarks/>
        public void GetDepartmentPositionLinkAsync(string ticket, int departmentId, int positionId, string message, object userState) {
            if ((this.GetDepartmentPositionLinkOperationCompleted == null)) {
                this.GetDepartmentPositionLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentPositionLinkOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentPositionLink", new object[] {
                        ticket,
                        departmentId,
                        positionId,
                        message}, this.GetDepartmentPositionLinkOperationCompleted, userState);
        }
        
        private void OnGetDepartmentPositionLinkOperationCompleted(object arg) {
            if ((this.GetDepartmentPositionLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentPositionLinkCompleted(this, new GetDepartmentPositionLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDepartmentPositionLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDepartmentPositionLinkList(string ticket, string _listYnDepartmentPositionLink, ref string message) {
            object[] results = this.Invoke("SaveDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message) {
            this.SaveDepartmentPositionLinkListAsync(ticket, _listYnDepartmentPositionLink, message, null);
        }
        
        /// <remarks/>
        public void SaveDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message, object userState) {
            if ((this.SaveDepartmentPositionLinkListOperationCompleted == null)) {
                this.SaveDepartmentPositionLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDepartmentPositionLinkListOperationCompleted);
            }
            this.InvokeAsync("SaveDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message}, this.SaveDepartmentPositionLinkListOperationCompleted, userState);
        }
        
        private void OnSaveDepartmentPositionLinkListOperationCompleted(object arg) {
            if ((this.SaveDepartmentPositionLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDepartmentPositionLinkListCompleted(this, new SaveDepartmentPositionLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDepartmentPositionLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartmentPositionLinkList(string ticket, string _listYnDepartmentPositionLink, ref string message) {
            object[] results = this.Invoke("DeleteDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message) {
            this.DeleteDepartmentPositionLinkListAsync(ticket, _listYnDepartmentPositionLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message, object userState) {
            if ((this.DeleteDepartmentPositionLinkListOperationCompleted == null)) {
                this.DeleteDepartmentPositionLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentPositionLinkListOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message}, this.DeleteDepartmentPositionLinkListOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentPositionLinkListOperationCompleted(object arg) {
            if ((this.DeleteDepartmentPositionLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentPositionLinkListCompleted(this, new DeleteDepartmentPositionLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormMainMenuList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormMainMenuList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormMainMenuList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormMainMenuListAsync(string ticket, string message) {
            this.GetFormMainMenuListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormMainMenuListAsync(string ticket, string message, object userState) {
            if ((this.GetFormMainMenuListOperationCompleted == null)) {
                this.GetFormMainMenuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormMainMenuListOperationCompleted);
            }
            this.InvokeAsync("GetFormMainMenuList", new object[] {
                        ticket,
                        message}, this.GetFormMainMenuListOperationCompleted, userState);
        }
        
        private void OnGetFormMainMenuListOperationCompleted(object arg) {
            if ((this.GetFormMainMenuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormMainMenuListCompleted(this, new GetFormMainMenuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormSubMenu(string ticket, int subMenuId, ref string message) {
            object[] results = this.Invoke("GetFormSubMenu", new object[] {
                        ticket,
                        subMenuId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormSubMenuAsync(string ticket, int subMenuId, string message) {
            this.GetFormSubMenuAsync(ticket, subMenuId, message, null);
        }
        
        /// <remarks/>
        public void GetFormSubMenuAsync(string ticket, int subMenuId, string message, object userState) {
            if ((this.GetFormSubMenuOperationCompleted == null)) {
                this.GetFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("GetFormSubMenu", new object[] {
                        ticket,
                        subMenuId,
                        message}, this.GetFormSubMenuOperationCompleted, userState);
        }
        
        private void OnGetFormSubMenuOperationCompleted(object arg) {
            if ((this.GetFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormSubMenuCompleted(this, new GetFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormSubMenuList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormSubMenuList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormSubMenuList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormSubMenuListAsync(string ticket, string message) {
            this.GetFormSubMenuListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormSubMenuListAsync(string ticket, string message, object userState) {
            if ((this.GetFormSubMenuListOperationCompleted == null)) {
                this.GetFormSubMenuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormSubMenuListOperationCompleted);
            }
            this.InvokeAsync("GetFormSubMenuList", new object[] {
                        ticket,
                        message}, this.GetFormSubMenuListOperationCompleted, userState);
        }
        
        private void OnGetFormSubMenuListOperationCompleted(object arg) {
            if ((this.GetFormSubMenuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormSubMenuListCompleted(this, new GetFormSubMenuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormMainMenu(string ticket, string _ynFormMainMenu, ref string message) {
            object[] results = this.Invoke("SaveFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message) {
            this.SaveFormMainMenuAsync(ticket, _ynFormMainMenu, message, null);
        }
        
        /// <remarks/>
        public void SaveFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message, object userState) {
            if ((this.SaveFormMainMenuOperationCompleted == null)) {
                this.SaveFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("SaveFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message}, this.SaveFormMainMenuOperationCompleted, userState);
        }
        
        private void OnSaveFormMainMenuOperationCompleted(object arg) {
            if ((this.SaveFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormMainMenuCompleted(this, new SaveFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormMainMenu(string ticket, string _ynFormMainMenu, ref string message) {
            object[] results = this.Invoke("UpdateFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message) {
            this.UpdateFormMainMenuAsync(ticket, _ynFormMainMenu, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message, object userState) {
            if ((this.UpdateFormMainMenuOperationCompleted == null)) {
                this.UpdateFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("UpdateFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message}, this.UpdateFormMainMenuOperationCompleted, userState);
        }
        
        private void OnUpdateFormMainMenuOperationCompleted(object arg) {
            if ((this.UpdateFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormMainMenuCompleted(this, new UpdateFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormMainMenu(string ticket, int menuId, ref string message) {
            object[] results = this.Invoke("DeleteFormMainMenu", new object[] {
                        ticket,
                        menuId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormMainMenuAsync(string ticket, int menuId, string message) {
            this.DeleteFormMainMenuAsync(ticket, menuId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormMainMenuAsync(string ticket, int menuId, string message, object userState) {
            if ((this.DeleteFormMainMenuOperationCompleted == null)) {
                this.DeleteFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("DeleteFormMainMenu", new object[] {
                        ticket,
                        menuId,
                        message}, this.DeleteFormMainMenuOperationCompleted, userState);
        }
        
        private void OnDeleteFormMainMenuOperationCompleted(object arg) {
            if ((this.DeleteFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormMainMenuCompleted(this, new DeleteFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormSubMenu(string ticket, string _ynFormSubMenu, ref string message) {
            object[] results = this.Invoke("SaveFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message) {
            this.SaveFormSubMenuAsync(ticket, _ynFormSubMenu, message, null);
        }
        
        /// <remarks/>
        public void SaveFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message, object userState) {
            if ((this.SaveFormSubMenuOperationCompleted == null)) {
                this.SaveFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("SaveFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message}, this.SaveFormSubMenuOperationCompleted, userState);
        }
        
        private void OnSaveFormSubMenuOperationCompleted(object arg) {
            if ((this.SaveFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormSubMenuCompleted(this, new SaveFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormSubMenu(string ticket, string _ynFormSubMenu, ref string message) {
            object[] results = this.Invoke("UpdateFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message) {
            this.UpdateFormSubMenuAsync(ticket, _ynFormSubMenu, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message, object userState) {
            if ((this.UpdateFormSubMenuOperationCompleted == null)) {
                this.UpdateFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("UpdateFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message}, this.UpdateFormSubMenuOperationCompleted, userState);
        }
        
        private void OnUpdateFormSubMenuOperationCompleted(object arg) {
            if ((this.UpdateFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormSubMenuCompleted(this, new UpdateFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormSubMenu(string ticket, int menuId, ref string message) {
            object[] results = this.Invoke("DeleteFormSubMenu", new object[] {
                        ticket,
                        menuId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormSubMenuAsync(string ticket, int menuId, string message) {
            this.DeleteFormSubMenuAsync(ticket, menuId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormSubMenuAsync(string ticket, int menuId, string message, object userState) {
            if ((this.DeleteFormSubMenuOperationCompleted == null)) {
                this.DeleteFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("DeleteFormSubMenu", new object[] {
                        ticket,
                        menuId,
                        message}, this.DeleteFormSubMenuOperationCompleted, userState);
        }
        
        private void OnDeleteFormSubMenuOperationCompleted(object arg) {
            if ((this.DeleteFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormSubMenuCompleted(this, new DeleteFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionOperationCompleted == null)) {
                this.GetFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionCompleted(this, new GetFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListAsync(string ticket, string message) {
            this.GetFormModuleFunctionListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListAsync(string ticket, string message, object userState) {
            if ((this.GetFormModuleFunctionListOperationCompleted == null)) {
                this.GetFormModuleFunctionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionList", new object[] {
                        ticket,
                        message}, this.GetFormModuleFunctionListOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListCompleted(this, new GetFormModuleFunctionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionListNotInYnUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionListNotInYnUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionListNotInYnUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnUserAsync(string ticket, string userId, string message) {
            this.GetFormModuleFunctionListNotInYnUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetFormModuleFunctionListNotInYnUserOperationCompleted == null)) {
                this.GetFormModuleFunctionListNotInYnUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListNotInYnUserOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionListNotInYnUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetFormModuleFunctionListNotInYnUserOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListNotInYnUserOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListNotInYnUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListNotInYnUserCompleted(this, new GetFormModuleFunctionListNotInYnUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionListNotInYnRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionListNotInYnRole(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionListNotInYnRole", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnRoleAsync(string ticket, int roleId, string message) {
            this.GetFormModuleFunctionListNotInYnRoleAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnRoleAsync(string ticket, int roleId, string message, object userState) {
            if ((this.GetFormModuleFunctionListNotInYnRoleOperationCompleted == null)) {
                this.GetFormModuleFunctionListNotInYnRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListNotInYnRoleOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionListNotInYnRole", new object[] {
                        ticket,
                        roleId,
                        message}, this.GetFormModuleFunctionListNotInYnRoleOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListNotInYnRoleOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListNotInYnRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListNotInYnRoleCompleted(this, new GetFormModuleFunctionListNotInYnRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLinkListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLinkListByUserId(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkListByUserIdAsync(string ticket, string userId, string message) {
            this.GetFormModuleFunctionUserLinkListByUserIdAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkListByUserIdAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message}, this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkListByUserIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkListByUserIdCompleted(this, new GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionRoleLinkListByRoleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionRoleLinkListByRoleId(string ticket, string _listRoleId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionRoleLinkListByRoleId", new object[] {
                        ticket,
                        _listRoleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkListByRoleIdAsync(string ticket, string _listRoleId, string message) {
            this.GetFormModuleFunctionRoleLinkListByRoleIdAsync(ticket, _listRoleId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkListByRoleIdAsync(string ticket, string _listRoleId, string message, object userState) {
            if ((this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted == null)) {
                this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionRoleLinkListByRoleId", new object[] {
                        ticket,
                        _listRoleId,
                        message}, this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionRoleLinkListByRoleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionRoleLinkListByRoleIdCompleted(this, new GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLink(string ticket, int functionId, string uerId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLink", new object[] {
                        ticket,
                        functionId,
                        uerId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkAsync(string ticket, int functionId, string uerId, string message) {
            this.GetFormModuleFunctionUserLinkAsync(ticket, functionId, uerId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkAsync(string ticket, int functionId, string uerId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLink", new object[] {
                        ticket,
                        functionId,
                        uerId,
                        message}, this.GetFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkCompleted(this, new GetFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionRoleLinkByModuleFunctionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionRoleLinkByModuleFunctionId(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionRoleLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted == null)) {
                this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionRoleLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted(this, new GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLinkByModuleFunctionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLinkByModuleFunctionId(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted(this, new GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionAsync(string ticket, int functionId, string message) {
            this.DeleteFormModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.DeleteFormModuleFunctionOperationCompleted == null)) {
                this.DeleteFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.DeleteFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionCompleted(this, new DeleteFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunction(string ticket, string _ynFormModuleFunction, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message) {
            this.SaveFormModuleFunctionAsync(ticket, _ynFormModuleFunction, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message, object userState) {
            if ((this.SaveFormModuleFunctionOperationCompleted == null)) {
                this.SaveFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message}, this.SaveFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionCompleted(this, new SaveFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunction(string ticket, string _ynFormModuleFunction, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message) {
            this.UpdateFormModuleFunctionAsync(ticket, _ynFormModuleFunction, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message, object userState) {
            if ((this.UpdateFormModuleFunctionOperationCompleted == null)) {
                this.UpdateFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message}, this.UpdateFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionCompleted(this, new UpdateFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.SaveFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.SaveFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.SaveFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.SaveFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionUserLinkCompleted(this, new SaveFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.DeleteFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.DeleteFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.DeleteFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.DeleteFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionUserLinkCompleted(this, new DeleteFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.UpdateFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.UpdateFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.UpdateFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.UpdateFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionUserLinkCompleted(this, new UpdateFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.SaveFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.SaveFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.SaveFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.SaveFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionRoleLinkCompleted(this, new SaveFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.DeleteFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.DeleteFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.DeleteFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.DeleteFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionRoleLinkCompleted(this, new DeleteFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.UpdateFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.UpdateFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.UpdateFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.UpdateFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionRoleLinkCompleted(this, new UpdateFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDoorListCompletedEventHandler(object sender, GetDoorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UserAuthenticationCompletedEventHandler(object sender, UserAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string encryptTicket {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TryGetAscmUserCompletedEventHandler(object sender, TryGetAscmUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TryGetAscmUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TryGetAscmUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCountCompletedEventHandler(object sender, GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMaxIdCompletedEventHandler(object sender, GetMaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetObjectCompletedEventHandler(object sender, GetObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmployeeListCompletedEventHandler(object sender, GetEmployeeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveEmployeeCompletedEventHandler(object sender, SaveEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, UpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteEmployeeCompletedEventHandler(object sender, DeleteEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmployeeCarByRfidCompletedEventHandler(object sender, GetEmployeeCarByRfidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeCarByRfidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeCarByRfidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmployeeCarListCompletedEventHandler(object sender, GetEmployeeCarListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeCarListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeCarListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveEmployeeCarCompletedEventHandler(object sender, SaveEmployeeCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmployeeCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmployeeCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteEmployeeCarCompletedEventHandler(object sender, DeleteEmployeeCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmployeeCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmployeeCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllEmployeeCarListCompletedEventHandler(object sender, GetAllEmployeeCarListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeeCarListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeeCarListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmpCarSwipeLogListCompletedEventHandler(object sender, GetEmpCarSwipeLogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpCarSwipeLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpCarSwipeLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AscmEmpCarSwipeLogAddCompletedEventHandler(object sender, AscmEmpCarSwipeLogAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AscmEmpCarSwipeLogAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AscmEmpCarSwipeLogAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveAscmEmpCarSwipeLogListCompletedEventHandler(object sender, SaveAscmEmpCarSwipeLogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAscmEmpCarSwipeLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAscmEmpCarSwipeLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRfidCompletedEventHandler(object sender, GetRfidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRfidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRfidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllReadingHeadListCompletedEventHandler(object sender, GetAllReadingHeadListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllReadingHeadListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllReadingHeadListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AscmReadingHeadLogAddCompletedEventHandler(object sender, AscmReadingHeadLogAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AscmReadingHeadLogAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AscmReadingHeadLogAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierByUserIdCompletedEventHandler(object sender, GetSupplierByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierCurrentDeliveryOrderBatchListCompletedEventHandler(object sender, GetSupplierCurrentDeliveryOrderBatchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierCurrentDeliveryOrderBatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierCurrentDeliveryOrderBatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeliveryOrderBatchDetailListCompletedEventHandler(object sender, GetDeliveryOrderBatchDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrderBatchDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrderBatchDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeliveryOrderBatchMaterialDetailListCompletedEventHandler(object sender, GetDeliveryOrderBatchMaterialDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrderBatchMaterialDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrderBatchMaterialDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventHandler(object sender, GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrderBatchSumMainMaterialDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SupplierDriverToPlantCompletedEventHandler(object sender, SupplierDriverToPlantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupplierDriverToPlantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupplierDriverToPlantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierCurrentDeliveryBatchSumMainListCompletedEventHandler(object sender, GetSupplierCurrentDeliveryBatchSumMainListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierCurrentDeliveryBatchSumMainListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierCurrentDeliveryBatchSumMainListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventHandler(object sender, GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierCurrentDeliveryBatchSumDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierDriverDeliveryBatchSumMainCompletedEventHandler(object sender, GetSupplierDriverDeliveryBatchSumMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierDriverDeliveryBatchSumMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierDriverDeliveryBatchSumMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventHandler(object sender, GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventHandler(object sender, SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSupplierCurrentDeliveryBatchSumAllDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerCompletedEventHandler(object sender, GetContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerDeliveryListCompletedEventHandler(object sender, GetContainerDeliveryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerDeliveryListByDeliverySumMainIdCompletedEventHandler(object sender, GetContainerDeliveryListByDeliverySumMainIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerDeliveryListByDeliverySumMainIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerDeliveryListByDeliverySumMainIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ContainerDeliveryAddCompletedEventHandler(object sender, ContainerDeliveryAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerDeliveryAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerDeliveryAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ContainerDeliveryUpdateCompletedEventHandler(object sender, ContainerDeliveryUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerDeliveryUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerDeliveryUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ContainerDeliveryDeleteCompletedEventHandler(object sender, ContainerDeliveryDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerDeliveryDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerDeliveryDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ContainerDeliveryClearCompletedEventHandler(object sender, ContainerDeliveryClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerDeliveryClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerDeliveryClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPalletCompletedEventHandler(object sender, GetPalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPalletDeliveryListCompletedEventHandler(object sender, GetPalletDeliveryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalletDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalletDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPalletDeliveryListByDeliverySumMainIdCompletedEventHandler(object sender, GetPalletDeliveryListByDeliverySumMainIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalletDeliveryListByDeliverySumMainIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalletDeliveryListByDeliverySumMainIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PalletDeliveryAddCompletedEventHandler(object sender, PalletDeliveryAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PalletDeliveryAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PalletDeliveryAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PalletDeliveryUpdateCompletedEventHandler(object sender, PalletDeliveryUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PalletDeliveryUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PalletDeliveryUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PalletDeliveryDeleteCompletedEventHandler(object sender, PalletDeliveryDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PalletDeliveryDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PalletDeliveryDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PalletDeliveryClearCompletedEventHandler(object sender, PalletDeliveryClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PalletDeliveryClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PalletDeliveryClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDriverByDriverSnCompletedEventHandler(object sender, GetDriverByDriverSnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriverByDriverSnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriverByDriverSnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDriverDeliveryListCompletedEventHandler(object sender, GetDriverDeliveryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriverDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriverDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDriverDeliveryListByDeliverySumMainIdCompletedEventHandler(object sender, GetDriverDeliveryListByDeliverySumMainIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriverDeliveryListByDeliverySumMainIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriverDeliveryListByDeliverySumMainIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DriverDeliveryAddCompletedEventHandler(object sender, DriverDeliveryAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DriverDeliveryAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DriverDeliveryAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DriverDeliveryUpdateCompletedEventHandler(object sender, DriverDeliveryUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DriverDeliveryUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DriverDeliveryUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DriverDeliveryDeleteCompletedEventHandler(object sender, DriverDeliveryDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DriverDeliveryDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DriverDeliveryDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DriverDeliveryClearCompletedEventHandler(object sender, DriverDeliveryClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DriverDeliveryClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DriverDeliveryClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnloadingPointListCompletedEventHandler(object sender, GetUnloadingPointListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnloadingPointListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnloadingPointListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnloadingPointUpdateStatusCompletedEventHandler(object sender, UnloadingPointUpdateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnloadingPointUpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnloadingPointUpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnloadingPointControllerListCompletedEventHandler(object sender, GetUnloadingPointControllerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnloadingPointControllerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnloadingPointControllerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetKeeperCurrentPreparationMainListCompletedEventHandler(object sender, GetKeeperCurrentPreparationMainListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeeperCurrentPreparationMainListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeeperCurrentPreparationMainListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetKeeperCurrentPreparationSumDetailListCompletedEventHandler(object sender, GetKeeperCurrentPreparationSumDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeeperCurrentPreparationSumDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeeperCurrentPreparationSumDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWmsContainerDeliveryListCompletedEventHandler(object sender, GetWmsContainerDeliveryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWmsContainerDeliveryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWmsContainerDeliveryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWmsContainerDeliveryListByPreparationMainIdCompletedEventHandler(object sender, GetWmsContainerDeliveryListByPreparationMainIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWmsContainerDeliveryListByPreparationMainIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWmsContainerDeliveryListByPreparationMainIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WmsContainerDeliveryAddCompletedEventHandler(object sender, WmsContainerDeliveryAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WmsContainerDeliveryAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WmsContainerDeliveryAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WmsContainerDeliveryUpdateCompletedEventHandler(object sender, WmsContainerDeliveryUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WmsContainerDeliveryUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WmsContainerDeliveryUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WmsContainerDeliveryDeleteCompletedEventHandler(object sender, WmsContainerDeliveryDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WmsContainerDeliveryDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WmsContainerDeliveryDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WmsContainerDeliveryClearCompletedEventHandler(object sender, WmsContainerDeliveryClearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WmsContainerDeliveryClearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WmsContainerDeliveryClearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetKeeperCurrentWmsPreparationAllDetailCompletedEventHandler(object sender, GetKeeperCurrentWmsPreparationAllDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeeperCurrentWmsPreparationAllDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeeperCurrentWmsPreparationAllDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveKeeperCurrentWmsPreparationAllDetailCompletedEventHandler(object sender, SaveKeeperCurrentWmsPreparationAllDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveKeeperCurrentWmsPreparationAllDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveKeeperCurrentWmsPreparationAllDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDoorLedTitleCompletedEventHandler(object sender, GetDoorLedTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoorLedTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoorLedTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDoorLedSupplierCompletedEventHandler(object sender, GetDoorLedSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoorLedSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoorLedSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEnterSupplierDeliBatSumMainCompletedEventHandler(object sender, GetEnterSupplierDeliBatSumMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnterSupplierDeliBatSumMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnterSupplierDeliBatSumMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWarelocationByRfidCompletedEventHandler(object sender, GetWarelocationByRfidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarelocationByRfidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarelocationByRfidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddWmsLocationTransferCompletedEventHandler(object sender, AddWmsLocationTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWmsLocationTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWmsLocationTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateWmsLocationTransferCompletedEventHandler(object sender, UpdateWmsLocationTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWmsLocationTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWmsLocationTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTasksListCompletedEventHandler(object sender, GetTasksListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddTaskSaveCompletedEventHandler(object sender, AddTaskSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTaskSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTaskSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TaskDeleteCompletedEventHandler(object sender, TaskDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TaskDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TaskDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditTaskSaveCompletedEventHandler(object sender, EditTaskSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTaskSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTaskSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMaterialListCompletedEventHandler(object sender, GetMaterialListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaterialListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaterialListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MaterialOfDiscreteJobListCompletedEventHandler(object sender, MaterialOfDiscreteJobListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MaterialOfDiscreteJobListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MaterialOfDiscreteJobListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskListCompletedEventHandler(object sender, GetTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJobListCompletedEventHandler(object sender, GetJobListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMtlListCompletedEventHandler(object sender, GetMtlListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMtlListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMtlListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartExcuteTaskCompletedEventHandler(object sender, StartExcuteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartExcuteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartExcuteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EndExcuteTaskCompletedEventHandler(object sender, EndExcuteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndExcuteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndExcuteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SumMaterialTotalCompletedEventHandler(object sender, SumMaterialTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SumMaterialTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SumMaterialTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _ynPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckTaskInfoCompletedEventHandler(object sender, CheckTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfrimedGetMaterialCompletedEventHandler(object sender, ConfrimedGetMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfrimedGetMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfrimedGetMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerSpaceInfoCompletedEventHandler(object sender, GetContainerSpaceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerSpaceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerSpaceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAscmTagLogCompletedEventHandler(object sender, GetAscmTagLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAscmTagLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAscmTagLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerSupplierInfoCompletedEventHandler(object sender, GetContainerSupplierInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerSupplierInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerSupplierInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ContainerCheckCompletedEventHandler(object sender, ContainerCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AscmStoreInOutSaveCompletedEventHandler(object sender, AscmStoreInOutSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AscmStoreInOutSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AscmStoreInOutSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAscmKeyBillCompletedEventHandler(object sender, GetAscmKeyBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAscmKeyBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAscmKeyBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainerAllInfoCompletedEventHandler(object sender, GetContainerAllInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainerAllInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainerAllInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserBaseInfoCompletedEventHandler(object sender, GetUserBaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUserCompletedEventHandler(object sender, SaveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsAdministratorCompletedEventHandler(object sender, IsAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserListNotInModuleFunctionCompletedEventHandler(object sender, GetUserListNotInModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListNotInModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListNotInModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserRoleLinkListByRoleIdCompletedEventHandler(object sender, GetUserRoleLinkListByRoleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleLinkListByRoleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleLinkListByRoleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserRoleLinkListByUserIdCompletedEventHandler(object sender, GetUserRoleLinkListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleLinkListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleLinkListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRoleListNotInModuleFunctionCompletedEventHandler(object sender, GetRoleListNotInModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListNotInModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListNotInModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRoleListCompletedEventHandler(object sender, GetRoleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveRoleCompletedEventHandler(object sender, SaveRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateRoleCompletedEventHandler(object sender, UpdateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, DeleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRoleListInUserCompletedEventHandler(object sender, GetRoleListInUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPositionListCompletedEventHandler(object sender, GetPositionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPositionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPositionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SavePositionCompletedEventHandler(object sender, SavePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatePositionCompletedEventHandler(object sender, UpdatePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeletePositionCompletedEventHandler(object sender, DeletePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentListCompletedEventHandler(object sender, GetDepartmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDepartmentCompletedEventHandler(object sender, SaveDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDepartmentCompletedEventHandler(object sender, UpdateDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDepartmentCompletedEventHandler(object sender, DeleteDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentPositionLinkCompletedEventHandler(object sender, GetDepartmentPositionLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentPositionLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentPositionLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDepartmentPositionLinkListCompletedEventHandler(object sender, SaveDepartmentPositionLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDepartmentPositionLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDepartmentPositionLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDepartmentPositionLinkListCompletedEventHandler(object sender, DeleteDepartmentPositionLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentPositionLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentPositionLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormMainMenuListCompletedEventHandler(object sender, GetFormMainMenuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormMainMenuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormMainMenuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormSubMenuCompletedEventHandler(object sender, GetFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormSubMenuListCompletedEventHandler(object sender, GetFormSubMenuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormSubMenuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormSubMenuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFormMainMenuCompletedEventHandler(object sender, SaveFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFormMainMenuCompletedEventHandler(object sender, UpdateFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFormMainMenuCompletedEventHandler(object sender, DeleteFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFormSubMenuCompletedEventHandler(object sender, SaveFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFormSubMenuCompletedEventHandler(object sender, UpdateFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFormSubMenuCompletedEventHandler(object sender, DeleteFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionCompletedEventHandler(object sender, GetFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionListCompletedEventHandler(object sender, GetFormModuleFunctionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionListNotInYnUserCompletedEventHandler(object sender, GetFormModuleFunctionListNotInYnUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListNotInYnUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListNotInYnUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionListNotInYnRoleCompletedEventHandler(object sender, GetFormModuleFunctionListNotInYnRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListNotInYnRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListNotInYnRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionUserLinkListByUserIdCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventHandler(object sender, GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionUserLinkCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventHandler(object sender, GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFormModuleFunctionCompletedEventHandler(object sender, DeleteFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFormModuleFunctionCompletedEventHandler(object sender, SaveFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFormModuleFunctionCompletedEventHandler(object sender, UpdateFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFormModuleFunctionUserLinkCompletedEventHandler(object sender, SaveFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFormModuleFunctionUserLinkCompletedEventHandler(object sender, DeleteFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFormModuleFunctionUserLinkCompletedEventHandler(object sender, UpdateFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFormModuleFunctionRoleLinkCompletedEventHandler(object sender, SaveFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFormModuleFunctionRoleLinkCompletedEventHandler(object sender, DeleteFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFormModuleFunctionRoleLinkCompletedEventHandler(object sender, UpdateFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591