//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace MideaAscm.Pad.YnWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="YnWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class YnWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListNotInModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleLinkListByRoleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleLinkListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListNotInModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleListInUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPositionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentPositionLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDepartmentPositionLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentPositionLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormMainMenuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormSubMenuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormSubMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListNotInYnUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionListNotInYnRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionUserLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormModuleFunctionRoleLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormModuleFunctionRoleLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormModuleFunctionRoleLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public YnWebService() {
            this.Url = global::MideaAscm.Pad.Properties.Settings.Default.MideaAscm_Pad_YnWebService_YnWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UserAuthenticationCompletedEventHandler UserAuthenticationCompleted;
        
        /// <remarks/>
        public event GetCountCompletedEventHandler GetCountCompleted;
        
        /// <remarks/>
        public event GetMaxIdCompletedEventHandler GetMaxIdCompleted;
        
        /// <remarks/>
        public event GetObjectCompletedEventHandler GetObjectCompleted;
        
        /// <remarks/>
        public event GetUserBaseInfoCompletedEventHandler GetUserBaseInfoCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event SaveUserCompletedEventHandler SaveUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event IsAdministratorCompletedEventHandler IsAdministratorCompleted;
        
        /// <remarks/>
        public event GetUserListNotInModuleFunctionCompletedEventHandler GetUserListNotInModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetUserRoleLinkListByRoleIdCompletedEventHandler GetUserRoleLinkListByRoleIdCompleted;
        
        /// <remarks/>
        public event GetUserRoleLinkListByUserIdCompletedEventHandler GetUserRoleLinkListByUserIdCompleted;
        
        /// <remarks/>
        public event GetRoleListNotInModuleFunctionCompletedEventHandler GetRoleListNotInModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetRoleListCompletedEventHandler GetRoleListCompleted;
        
        /// <remarks/>
        public event SaveRoleCompletedEventHandler SaveRoleCompleted;
        
        /// <remarks/>
        public event UpdateRoleCompletedEventHandler UpdateRoleCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event GetRoleListInUserCompletedEventHandler GetRoleListInUserCompleted;
        
        /// <remarks/>
        public event GetPositionListCompletedEventHandler GetPositionListCompleted;
        
        /// <remarks/>
        public event SavePositionCompletedEventHandler SavePositionCompleted;
        
        /// <remarks/>
        public event UpdatePositionCompletedEventHandler UpdatePositionCompleted;
        
        /// <remarks/>
        public event DeletePositionCompletedEventHandler DeletePositionCompleted;
        
        /// <remarks/>
        public event GetDepartmentListCompletedEventHandler GetDepartmentListCompleted;
        
        /// <remarks/>
        public event SaveDepartmentCompletedEventHandler SaveDepartmentCompleted;
        
        /// <remarks/>
        public event UpdateDepartmentCompletedEventHandler UpdateDepartmentCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentCompletedEventHandler DeleteDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentPositionLinkCompletedEventHandler GetDepartmentPositionLinkCompleted;
        
        /// <remarks/>
        public event SaveDepartmentPositionLinkListCompletedEventHandler SaveDepartmentPositionLinkListCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentPositionLinkListCompletedEventHandler DeleteDepartmentPositionLinkListCompleted;
        
        /// <remarks/>
        public event GetFormMainMenuListCompletedEventHandler GetFormMainMenuListCompleted;
        
        /// <remarks/>
        public event GetFormSubMenuCompletedEventHandler GetFormSubMenuCompleted;
        
        /// <remarks/>
        public event GetFormSubMenuListCompletedEventHandler GetFormSubMenuListCompleted;
        
        /// <remarks/>
        public event SaveFormMainMenuCompletedEventHandler SaveFormMainMenuCompleted;
        
        /// <remarks/>
        public event UpdateFormMainMenuCompletedEventHandler UpdateFormMainMenuCompleted;
        
        /// <remarks/>
        public event DeleteFormMainMenuCompletedEventHandler DeleteFormMainMenuCompleted;
        
        /// <remarks/>
        public event SaveFormSubMenuCompletedEventHandler SaveFormSubMenuCompleted;
        
        /// <remarks/>
        public event UpdateFormSubMenuCompletedEventHandler UpdateFormSubMenuCompleted;
        
        /// <remarks/>
        public event DeleteFormSubMenuCompletedEventHandler DeleteFormSubMenuCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionCompletedEventHandler GetFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListCompletedEventHandler GetFormModuleFunctionListCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListNotInYnUserCompletedEventHandler GetFormModuleFunctionListNotInYnUserCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionListNotInYnRoleCompletedEventHandler GetFormModuleFunctionListNotInYnRoleCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkListByUserIdCompletedEventHandler GetFormModuleFunctionUserLinkListByUserIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventHandler GetFormModuleFunctionRoleLinkListByRoleIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkCompletedEventHandler GetFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventHandler GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted;
        
        /// <remarks/>
        public event GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventHandler GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionCompletedEventHandler DeleteFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionCompletedEventHandler SaveFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionCompletedEventHandler UpdateFormModuleFunctionCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionUserLinkCompletedEventHandler SaveFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionUserLinkCompletedEventHandler DeleteFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionUserLinkCompletedEventHandler UpdateFormModuleFunctionUserLinkCompleted;
        
        /// <remarks/>
        public event SaveFormModuleFunctionRoleLinkCompletedEventHandler SaveFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        public event DeleteFormModuleFunctionRoleLinkCompletedEventHandler DeleteFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        public event UpdateFormModuleFunctionRoleLinkCompletedEventHandler UpdateFormModuleFunctionRoleLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserAuthentication(string userId, string userPwd, string hostIP, ref string message, ref string encryptTicket) {
            object[] results = this.Invoke("UserAuthentication", new object[] {
                        userId,
                        userPwd,
                        hostIP,
                        message,
                        encryptTicket});
            message = ((string)(results[1]));
            encryptTicket = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserAuthenticationAsync(string userId, string userPwd, string hostIP, string message, string encryptTicket) {
            this.UserAuthenticationAsync(userId, userPwd, hostIP, message, encryptTicket, null);
        }
        
        /// <remarks/>
        public void UserAuthenticationAsync(string userId, string userPwd, string hostIP, string message, string encryptTicket, object userState) {
            if ((this.UserAuthenticationOperationCompleted == null)) {
                this.UserAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAuthenticationOperationCompleted);
            }
            this.InvokeAsync("UserAuthentication", new object[] {
                        userId,
                        userPwd,
                        hostIP,
                        message,
                        encryptTicket}, this.UserAuthenticationOperationCompleted, userState);
        }
        
        private void OnUserAuthenticationOperationCompleted(object arg) {
            if ((this.UserAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAuthenticationCompleted(this, new UserAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCount(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetCount", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAsync(string ticket, string sql, string message) {
            this.GetCountAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetCountAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetCountOperationCompleted == null)) {
                this.GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountOperationCompleted);
            }
            this.InvokeAsync("GetCount", new object[] {
                        ticket,
                        sql,
                        message}, this.GetCountOperationCompleted, userState);
        }
        
        private void OnGetCountOperationCompleted(object arg) {
            if ((this.GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCompleted(this, new GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMaxId(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetMaxId", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIdAsync(string ticket, string sql, string message) {
            this.GetMaxIdAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetMaxIdAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetMaxIdOperationCompleted == null)) {
                this.GetMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIdOperationCompleted);
            }
            this.InvokeAsync("GetMaxId", new object[] {
                        ticket,
                        sql,
                        message}, this.GetMaxIdOperationCompleted, userState);
        }
        
        private void OnGetMaxIdOperationCompleted(object arg) {
            if ((this.GetMaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIdCompleted(this, new GetMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetObject(string ticket, string sql, ref string message) {
            object[] results = this.Invoke("GetObject", new object[] {
                        ticket,
                        sql,
                        message});
            message = ((string)(results[1]));
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectAsync(string ticket, string sql, string message) {
            this.GetObjectAsync(ticket, sql, message, null);
        }
        
        /// <remarks/>
        public void GetObjectAsync(string ticket, string sql, string message, object userState) {
            if ((this.GetObjectOperationCompleted == null)) {
                this.GetObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectOperationCompleted);
            }
            this.InvokeAsync("GetObject", new object[] {
                        ticket,
                        sql,
                        message}, this.GetObjectOperationCompleted, userState);
        }
        
        private void OnGetObjectOperationCompleted(object arg) {
            if ((this.GetObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectCompleted(this, new GetObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserBaseInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserBaseInfo(string userId, ref string message) {
            object[] results = this.Invoke("GetUserBaseInfo", new object[] {
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userId, string message) {
            this.GetUserBaseInfoAsync(userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserBaseInfoAsync(string userId, string message, object userState) {
            if ((this.GetUserBaseInfoOperationCompleted == null)) {
                this.GetUserBaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserBaseInfo", new object[] {
                        userId,
                        message}, this.GetUserBaseInfoOperationCompleted, userState);
        }
        
        private void OnGetUserBaseInfoOperationCompleted(object arg) {
            if ((this.GetUserBaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBaseInfoCompleted(this, new GetUserBaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string ticket, string userId, string message) {
            this.GetUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserList(string ticket, string _ynPage, string whereOther, ref string message) {
            object[] results = this.Invoke("GetUserList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync(string ticket, string _ynPage, string whereOther, string message) {
            this.GetUserListAsync(ticket, _ynPage, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(string ticket, string _ynPage, string whereOther, string message, object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message}, this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveUser(string ticket, string _ynUser, ref string message) {
            object[] results = this.Invoke("SaveUser", new object[] {
                        ticket,
                        _ynUser,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserAsync(string ticket, string _ynUser, string message) {
            this.SaveUserAsync(ticket, _ynUser, message, null);
        }
        
        /// <remarks/>
        public void SaveUserAsync(string ticket, string _ynUser, string message, object userState) {
            if ((this.SaveUserOperationCompleted == null)) {
                this.SaveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserOperationCompleted);
            }
            this.InvokeAsync("SaveUser", new object[] {
                        ticket,
                        _ynUser,
                        message}, this.SaveUserOperationCompleted, userState);
        }
        
        private void OnSaveUserOperationCompleted(object arg) {
            if ((this.SaveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserCompleted(this, new SaveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUser(string ticket, string _ynUser, ref string message) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        ticket,
                        _ynUser,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string ticket, string _ynUser, string message) {
            this.UpdateUserAsync(ticket, _ynUser, message, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string ticket, string _ynUser, string message, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        ticket,
                        _ynUser,
                        message}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string ticket, string userId, string message) {
            this.DeleteUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        ticket,
                        userId,
                        message}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAdministrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAdministrator(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("IsAdministrator", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAdministratorAsync(string ticket, string userId, string message) {
            this.IsAdministratorAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void IsAdministratorAsync(string ticket, string userId, string message, object userState) {
            if ((this.IsAdministratorOperationCompleted == null)) {
                this.IsAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAdministratorOperationCompleted);
            }
            this.InvokeAsync("IsAdministrator", new object[] {
                        ticket,
                        userId,
                        message}, this.IsAdministratorOperationCompleted, userState);
        }
        
        private void OnIsAdministratorOperationCompleted(object arg) {
            if ((this.IsAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAdministratorCompleted(this, new IsAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserListNotInModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserListNotInModuleFunction(string ticket, int functionId, string whereOther, ref string message) {
            object[] results = this.Invoke("GetUserListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListNotInModuleFunctionAsync(string ticket, int functionId, string whereOther, string message) {
            this.GetUserListNotInModuleFunctionAsync(ticket, functionId, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetUserListNotInModuleFunctionAsync(string ticket, int functionId, string whereOther, string message, object userState) {
            if ((this.GetUserListNotInModuleFunctionOperationCompleted == null)) {
                this.GetUserListNotInModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListNotInModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetUserListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        whereOther,
                        message}, this.GetUserListNotInModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetUserListNotInModuleFunctionOperationCompleted(object arg) {
            if ((this.GetUserListNotInModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListNotInModuleFunctionCompleted(this, new GetUserListNotInModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleLinkListByRoleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRoleLinkListByRoleId(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("GetUserRoleLinkListByRoleId", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByRoleIdAsync(string ticket, int roleId, string message) {
            this.GetUserRoleLinkListByRoleIdAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByRoleIdAsync(string ticket, int roleId, string message, object userState) {
            if ((this.GetUserRoleLinkListByRoleIdOperationCompleted == null)) {
                this.GetUserRoleLinkListByRoleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleLinkListByRoleIdOperationCompleted);
            }
            this.InvokeAsync("GetUserRoleLinkListByRoleId", new object[] {
                        ticket,
                        roleId,
                        message}, this.GetUserRoleLinkListByRoleIdOperationCompleted, userState);
        }
        
        private void OnGetUserRoleLinkListByRoleIdOperationCompleted(object arg) {
            if ((this.GetUserRoleLinkListByRoleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleLinkListByRoleIdCompleted(this, new GetUserRoleLinkListByRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleLinkListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserRoleLinkListByUserId(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetUserRoleLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByUserIdAsync(string ticket, string userId, string message) {
            this.GetUserRoleLinkListByUserIdAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetUserRoleLinkListByUserIdAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetUserRoleLinkListByUserIdOperationCompleted == null)) {
                this.GetUserRoleLinkListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleLinkListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserRoleLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message}, this.GetUserRoleLinkListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserRoleLinkListByUserIdOperationCompleted(object arg) {
            if ((this.GetUserRoleLinkListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleLinkListByUserIdCompleted(this, new GetUserRoleLinkListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleListNotInModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleListNotInModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetRoleListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListNotInModuleFunctionAsync(string ticket, int functionId, string message) {
            this.GetRoleListNotInModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListNotInModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetRoleListNotInModuleFunctionOperationCompleted == null)) {
                this.GetRoleListNotInModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListNotInModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetRoleListNotInModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetRoleListNotInModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetRoleListNotInModuleFunctionOperationCompleted(object arg) {
            if ((this.GetRoleListNotInModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListNotInModuleFunctionCompleted(this, new GetRoleListNotInModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleList(string ticket, ref string message) {
            object[] results = this.Invoke("GetRoleList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListAsync(string ticket, string message) {
            this.GetRoleListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListAsync(string ticket, string message, object userState) {
            if ((this.GetRoleListOperationCompleted == null)) {
                this.GetRoleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListOperationCompleted);
            }
            this.InvokeAsync("GetRoleList", new object[] {
                        ticket,
                        message}, this.GetRoleListOperationCompleted, userState);
        }
        
        private void OnGetRoleListOperationCompleted(object arg) {
            if ((this.GetRoleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListCompleted(this, new GetRoleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveRole(string ticket, string _ynRole, ref string message) {
            object[] results = this.Invoke("SaveRole", new object[] {
                        ticket,
                        _ynRole,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRoleAsync(string ticket, string _ynRole, string message) {
            this.SaveRoleAsync(ticket, _ynRole, message, null);
        }
        
        /// <remarks/>
        public void SaveRoleAsync(string ticket, string _ynRole, string message, object userState) {
            if ((this.SaveRoleOperationCompleted == null)) {
                this.SaveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRoleOperationCompleted);
            }
            this.InvokeAsync("SaveRole", new object[] {
                        ticket,
                        _ynRole,
                        message}, this.SaveRoleOperationCompleted, userState);
        }
        
        private void OnSaveRoleOperationCompleted(object arg) {
            if ((this.SaveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRoleCompleted(this, new SaveRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRole(string ticket, string _ynRole, ref string message) {
            object[] results = this.Invoke("UpdateRole", new object[] {
                        ticket,
                        _ynRole,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(string ticket, string _ynRole, string message) {
            this.UpdateRoleAsync(ticket, _ynRole, message, null);
        }
        
        /// <remarks/>
        public void UpdateRoleAsync(string ticket, string _ynRole, string message, object userState) {
            if ((this.UpdateRoleOperationCompleted == null)) {
                this.UpdateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateRole", new object[] {
                        ticket,
                        _ynRole,
                        message}, this.UpdateRoleOperationCompleted, userState);
        }
        
        private void OnUpdateRoleOperationCompleted(object arg) {
            if ((this.UpdateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoleCompleted(this, new UpdateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("DeleteRole", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string ticket, int roleId, string message) {
            this.DeleteRoleAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string ticket, int roleId, string message, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        ticket,
                        roleId,
                        message}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new DeleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleListInUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleListInUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetRoleListInUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleListInUserAsync(string ticket, string userId, string message) {
            this.GetRoleListInUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetRoleListInUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetRoleListInUserOperationCompleted == null)) {
                this.GetRoleListInUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleListInUserOperationCompleted);
            }
            this.InvokeAsync("GetRoleListInUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetRoleListInUserOperationCompleted, userState);
        }
        
        private void OnGetRoleListInUserOperationCompleted(object arg) {
            if ((this.GetRoleListInUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleListInUserCompleted(this, new GetRoleListInUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPositionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPositionList(string ticket, string _ynPage, string whereOther, ref string message) {
            object[] results = this.Invoke("GetPositionList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPositionListAsync(string ticket, string _ynPage, string whereOther, string message) {
            this.GetPositionListAsync(ticket, _ynPage, whereOther, message, null);
        }
        
        /// <remarks/>
        public void GetPositionListAsync(string ticket, string _ynPage, string whereOther, string message, object userState) {
            if ((this.GetPositionListOperationCompleted == null)) {
                this.GetPositionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPositionListOperationCompleted);
            }
            this.InvokeAsync("GetPositionList", new object[] {
                        ticket,
                        _ynPage,
                        whereOther,
                        message}, this.GetPositionListOperationCompleted, userState);
        }
        
        private void OnGetPositionListOperationCompleted(object arg) {
            if ((this.GetPositionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPositionListCompleted(this, new GetPositionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SavePosition(string ticket, string _ynPosition, ref string message) {
            object[] results = this.Invoke("SavePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SavePositionAsync(string ticket, string _ynPosition, string message) {
            this.SavePositionAsync(ticket, _ynPosition, message, null);
        }
        
        /// <remarks/>
        public void SavePositionAsync(string ticket, string _ynPosition, string message, object userState) {
            if ((this.SavePositionOperationCompleted == null)) {
                this.SavePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePositionOperationCompleted);
            }
            this.InvokeAsync("SavePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message}, this.SavePositionOperationCompleted, userState);
        }
        
        private void OnSavePositionOperationCompleted(object arg) {
            if ((this.SavePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePositionCompleted(this, new SavePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePosition(string ticket, string _ynPosition, ref string message) {
            object[] results = this.Invoke("UpdatePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(string ticket, string _ynPosition, string message) {
            this.UpdatePositionAsync(ticket, _ynPosition, message, null);
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(string ticket, string _ynPosition, string message, object userState) {
            if ((this.UpdatePositionOperationCompleted == null)) {
                this.UpdatePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePositionOperationCompleted);
            }
            this.InvokeAsync("UpdatePosition", new object[] {
                        ticket,
                        _ynPosition,
                        message}, this.UpdatePositionOperationCompleted, userState);
        }
        
        private void OnUpdatePositionOperationCompleted(object arg) {
            if ((this.UpdatePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePositionCompleted(this, new UpdatePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePosition(string ticket, int positionId, ref string message) {
            object[] results = this.Invoke("DeletePosition", new object[] {
                        ticket,
                        positionId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePositionAsync(string ticket, int positionId, string message) {
            this.DeletePositionAsync(ticket, positionId, message, null);
        }
        
        /// <remarks/>
        public void DeletePositionAsync(string ticket, int positionId, string message, object userState) {
            if ((this.DeletePositionOperationCompleted == null)) {
                this.DeletePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePositionOperationCompleted);
            }
            this.InvokeAsync("DeletePosition", new object[] {
                        ticket,
                        positionId,
                        message}, this.DeletePositionOperationCompleted, userState);
        }
        
        private void OnDeletePositionOperationCompleted(object arg) {
            if ((this.DeletePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePositionCompleted(this, new DeletePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentList(string ticket, int parentId, ref string message) {
            object[] results = this.Invoke("GetDepartmentList", new object[] {
                        ticket,
                        parentId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ticket, int parentId, string message) {
            this.GetDepartmentListAsync(ticket, parentId, message, null);
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ticket, int parentId, string message, object userState) {
            if ((this.GetDepartmentListOperationCompleted == null)) {
                this.GetDepartmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentList", new object[] {
                        ticket,
                        parentId,
                        message}, this.GetDepartmentListOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListOperationCompleted(object arg) {
            if ((this.GetDepartmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListCompleted(this, new GetDepartmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveDepartment(string ticket, string _ynDepartment, ref string message) {
            object[] results = this.Invoke("SaveDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDepartmentAsync(string ticket, string _ynDepartment, string message) {
            this.SaveDepartmentAsync(ticket, _ynDepartment, message, null);
        }
        
        /// <remarks/>
        public void SaveDepartmentAsync(string ticket, string _ynDepartment, string message, object userState) {
            if ((this.SaveDepartmentOperationCompleted == null)) {
                this.SaveDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDepartmentOperationCompleted);
            }
            this.InvokeAsync("SaveDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message}, this.SaveDepartmentOperationCompleted, userState);
        }
        
        private void OnSaveDepartmentOperationCompleted(object arg) {
            if ((this.SaveDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDepartmentCompleted(this, new SaveDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDepartment(string ticket, string _ynDepartment, ref string message) {
            object[] results = this.Invoke("UpdateDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string ticket, string _ynDepartment, string message) {
            this.UpdateDepartmentAsync(ticket, _ynDepartment, message, null);
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(string ticket, string _ynDepartment, string message, object userState) {
            if ((this.UpdateDepartmentOperationCompleted == null)) {
                this.UpdateDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentOperationCompleted);
            }
            this.InvokeAsync("UpdateDepartment", new object[] {
                        ticket,
                        _ynDepartment,
                        message}, this.UpdateDepartmentOperationCompleted, userState);
        }
        
        private void OnUpdateDepartmentOperationCompleted(object arg) {
            if ((this.UpdateDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepartmentCompleted(this, new UpdateDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartment(string ticket, int departmentId, ref string message) {
            object[] results = this.Invoke("DeleteDepartment", new object[] {
                        ticket,
                        departmentId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string ticket, int departmentId, string message) {
            this.DeleteDepartmentAsync(ticket, departmentId, message, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentAsync(string ticket, int departmentId, string message, object userState) {
            if ((this.DeleteDepartmentOperationCompleted == null)) {
                this.DeleteDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartment", new object[] {
                        ticket,
                        departmentId,
                        message}, this.DeleteDepartmentOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentOperationCompleted(object arg) {
            if ((this.DeleteDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentCompleted(this, new DeleteDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentPositionLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentPositionLink(string ticket, int departmentId, int positionId, ref string message) {
            object[] results = this.Invoke("GetDepartmentPositionLink", new object[] {
                        ticket,
                        departmentId,
                        positionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentPositionLinkAsync(string ticket, int departmentId, int positionId, string message) {
            this.GetDepartmentPositionLinkAsync(ticket, departmentId, positionId, message, null);
        }
        
        /// <remarks/>
        public void GetDepartmentPositionLinkAsync(string ticket, int departmentId, int positionId, string message, object userState) {
            if ((this.GetDepartmentPositionLinkOperationCompleted == null)) {
                this.GetDepartmentPositionLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentPositionLinkOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentPositionLink", new object[] {
                        ticket,
                        departmentId,
                        positionId,
                        message}, this.GetDepartmentPositionLinkOperationCompleted, userState);
        }
        
        private void OnGetDepartmentPositionLinkOperationCompleted(object arg) {
            if ((this.GetDepartmentPositionLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentPositionLinkCompleted(this, new GetDepartmentPositionLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDepartmentPositionLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDepartmentPositionLinkList(string ticket, string _listYnDepartmentPositionLink, ref string message) {
            object[] results = this.Invoke("SaveDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message) {
            this.SaveDepartmentPositionLinkListAsync(ticket, _listYnDepartmentPositionLink, message, null);
        }
        
        /// <remarks/>
        public void SaveDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message, object userState) {
            if ((this.SaveDepartmentPositionLinkListOperationCompleted == null)) {
                this.SaveDepartmentPositionLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDepartmentPositionLinkListOperationCompleted);
            }
            this.InvokeAsync("SaveDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message}, this.SaveDepartmentPositionLinkListOperationCompleted, userState);
        }
        
        private void OnSaveDepartmentPositionLinkListOperationCompleted(object arg) {
            if ((this.SaveDepartmentPositionLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDepartmentPositionLinkListCompleted(this, new SaveDepartmentPositionLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDepartmentPositionLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDepartmentPositionLinkList(string ticket, string _listYnDepartmentPositionLink, ref string message) {
            object[] results = this.Invoke("DeleteDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message) {
            this.DeleteDepartmentPositionLinkListAsync(ticket, _listYnDepartmentPositionLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentPositionLinkListAsync(string ticket, string _listYnDepartmentPositionLink, string message, object userState) {
            if ((this.DeleteDepartmentPositionLinkListOperationCompleted == null)) {
                this.DeleteDepartmentPositionLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentPositionLinkListOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartmentPositionLinkList", new object[] {
                        ticket,
                        _listYnDepartmentPositionLink,
                        message}, this.DeleteDepartmentPositionLinkListOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentPositionLinkListOperationCompleted(object arg) {
            if ((this.DeleteDepartmentPositionLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentPositionLinkListCompleted(this, new DeleteDepartmentPositionLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormMainMenuList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormMainMenuList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormMainMenuList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormMainMenuListAsync(string ticket, string message) {
            this.GetFormMainMenuListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormMainMenuListAsync(string ticket, string message, object userState) {
            if ((this.GetFormMainMenuListOperationCompleted == null)) {
                this.GetFormMainMenuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormMainMenuListOperationCompleted);
            }
            this.InvokeAsync("GetFormMainMenuList", new object[] {
                        ticket,
                        message}, this.GetFormMainMenuListOperationCompleted, userState);
        }
        
        private void OnGetFormMainMenuListOperationCompleted(object arg) {
            if ((this.GetFormMainMenuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormMainMenuListCompleted(this, new GetFormMainMenuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormSubMenu(string ticket, int subMenuId, ref string message) {
            object[] results = this.Invoke("GetFormSubMenu", new object[] {
                        ticket,
                        subMenuId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormSubMenuAsync(string ticket, int subMenuId, string message) {
            this.GetFormSubMenuAsync(ticket, subMenuId, message, null);
        }
        
        /// <remarks/>
        public void GetFormSubMenuAsync(string ticket, int subMenuId, string message, object userState) {
            if ((this.GetFormSubMenuOperationCompleted == null)) {
                this.GetFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("GetFormSubMenu", new object[] {
                        ticket,
                        subMenuId,
                        message}, this.GetFormSubMenuOperationCompleted, userState);
        }
        
        private void OnGetFormSubMenuOperationCompleted(object arg) {
            if ((this.GetFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormSubMenuCompleted(this, new GetFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormSubMenuList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormSubMenuList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormSubMenuList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormSubMenuListAsync(string ticket, string message) {
            this.GetFormSubMenuListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormSubMenuListAsync(string ticket, string message, object userState) {
            if ((this.GetFormSubMenuListOperationCompleted == null)) {
                this.GetFormSubMenuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormSubMenuListOperationCompleted);
            }
            this.InvokeAsync("GetFormSubMenuList", new object[] {
                        ticket,
                        message}, this.GetFormSubMenuListOperationCompleted, userState);
        }
        
        private void OnGetFormSubMenuListOperationCompleted(object arg) {
            if ((this.GetFormSubMenuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormSubMenuListCompleted(this, new GetFormSubMenuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormMainMenu(string ticket, string _ynFormMainMenu, ref string message) {
            object[] results = this.Invoke("SaveFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message) {
            this.SaveFormMainMenuAsync(ticket, _ynFormMainMenu, message, null);
        }
        
        /// <remarks/>
        public void SaveFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message, object userState) {
            if ((this.SaveFormMainMenuOperationCompleted == null)) {
                this.SaveFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("SaveFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message}, this.SaveFormMainMenuOperationCompleted, userState);
        }
        
        private void OnSaveFormMainMenuOperationCompleted(object arg) {
            if ((this.SaveFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormMainMenuCompleted(this, new SaveFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormMainMenu(string ticket, string _ynFormMainMenu, ref string message) {
            object[] results = this.Invoke("UpdateFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message) {
            this.UpdateFormMainMenuAsync(ticket, _ynFormMainMenu, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormMainMenuAsync(string ticket, string _ynFormMainMenu, string message, object userState) {
            if ((this.UpdateFormMainMenuOperationCompleted == null)) {
                this.UpdateFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("UpdateFormMainMenu", new object[] {
                        ticket,
                        _ynFormMainMenu,
                        message}, this.UpdateFormMainMenuOperationCompleted, userState);
        }
        
        private void OnUpdateFormMainMenuOperationCompleted(object arg) {
            if ((this.UpdateFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormMainMenuCompleted(this, new UpdateFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormMainMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormMainMenu(string ticket, int menuId, ref string message) {
            object[] results = this.Invoke("DeleteFormMainMenu", new object[] {
                        ticket,
                        menuId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormMainMenuAsync(string ticket, int menuId, string message) {
            this.DeleteFormMainMenuAsync(ticket, menuId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormMainMenuAsync(string ticket, int menuId, string message, object userState) {
            if ((this.DeleteFormMainMenuOperationCompleted == null)) {
                this.DeleteFormMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormMainMenuOperationCompleted);
            }
            this.InvokeAsync("DeleteFormMainMenu", new object[] {
                        ticket,
                        menuId,
                        message}, this.DeleteFormMainMenuOperationCompleted, userState);
        }
        
        private void OnDeleteFormMainMenuOperationCompleted(object arg) {
            if ((this.DeleteFormMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormMainMenuCompleted(this, new DeleteFormMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormSubMenu(string ticket, string _ynFormSubMenu, ref string message) {
            object[] results = this.Invoke("SaveFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message) {
            this.SaveFormSubMenuAsync(ticket, _ynFormSubMenu, message, null);
        }
        
        /// <remarks/>
        public void SaveFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message, object userState) {
            if ((this.SaveFormSubMenuOperationCompleted == null)) {
                this.SaveFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("SaveFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message}, this.SaveFormSubMenuOperationCompleted, userState);
        }
        
        private void OnSaveFormSubMenuOperationCompleted(object arg) {
            if ((this.SaveFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormSubMenuCompleted(this, new SaveFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormSubMenu(string ticket, string _ynFormSubMenu, ref string message) {
            object[] results = this.Invoke("UpdateFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message) {
            this.UpdateFormSubMenuAsync(ticket, _ynFormSubMenu, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormSubMenuAsync(string ticket, string _ynFormSubMenu, string message, object userState) {
            if ((this.UpdateFormSubMenuOperationCompleted == null)) {
                this.UpdateFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("UpdateFormSubMenu", new object[] {
                        ticket,
                        _ynFormSubMenu,
                        message}, this.UpdateFormSubMenuOperationCompleted, userState);
        }
        
        private void OnUpdateFormSubMenuOperationCompleted(object arg) {
            if ((this.UpdateFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormSubMenuCompleted(this, new UpdateFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormSubMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormSubMenu(string ticket, int menuId, ref string message) {
            object[] results = this.Invoke("DeleteFormSubMenu", new object[] {
                        ticket,
                        menuId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormSubMenuAsync(string ticket, int menuId, string message) {
            this.DeleteFormSubMenuAsync(ticket, menuId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormSubMenuAsync(string ticket, int menuId, string message, object userState) {
            if ((this.DeleteFormSubMenuOperationCompleted == null)) {
                this.DeleteFormSubMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormSubMenuOperationCompleted);
            }
            this.InvokeAsync("DeleteFormSubMenu", new object[] {
                        ticket,
                        menuId,
                        message}, this.DeleteFormSubMenuOperationCompleted, userState);
        }
        
        private void OnDeleteFormSubMenuOperationCompleted(object arg) {
            if ((this.DeleteFormSubMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormSubMenuCompleted(this, new DeleteFormSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionOperationCompleted == null)) {
                this.GetFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionCompleted(this, new GetFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionList(string ticket, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionList", new object[] {
                        ticket,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListAsync(string ticket, string message) {
            this.GetFormModuleFunctionListAsync(ticket, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListAsync(string ticket, string message, object userState) {
            if ((this.GetFormModuleFunctionListOperationCompleted == null)) {
                this.GetFormModuleFunctionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionList", new object[] {
                        ticket,
                        message}, this.GetFormModuleFunctionListOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListCompleted(this, new GetFormModuleFunctionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionListNotInYnUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionListNotInYnUser(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionListNotInYnUser", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnUserAsync(string ticket, string userId, string message) {
            this.GetFormModuleFunctionListNotInYnUserAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnUserAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetFormModuleFunctionListNotInYnUserOperationCompleted == null)) {
                this.GetFormModuleFunctionListNotInYnUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListNotInYnUserOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionListNotInYnUser", new object[] {
                        ticket,
                        userId,
                        message}, this.GetFormModuleFunctionListNotInYnUserOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListNotInYnUserOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListNotInYnUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListNotInYnUserCompleted(this, new GetFormModuleFunctionListNotInYnUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionListNotInYnRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionListNotInYnRole(string ticket, int roleId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionListNotInYnRole", new object[] {
                        ticket,
                        roleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnRoleAsync(string ticket, int roleId, string message) {
            this.GetFormModuleFunctionListNotInYnRoleAsync(ticket, roleId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionListNotInYnRoleAsync(string ticket, int roleId, string message, object userState) {
            if ((this.GetFormModuleFunctionListNotInYnRoleOperationCompleted == null)) {
                this.GetFormModuleFunctionListNotInYnRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionListNotInYnRoleOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionListNotInYnRole", new object[] {
                        ticket,
                        roleId,
                        message}, this.GetFormModuleFunctionListNotInYnRoleOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionListNotInYnRoleOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionListNotInYnRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionListNotInYnRoleCompleted(this, new GetFormModuleFunctionListNotInYnRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLinkListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLinkListByUserId(string ticket, string userId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkListByUserIdAsync(string ticket, string userId, string message) {
            this.GetFormModuleFunctionUserLinkListByUserIdAsync(ticket, userId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkListByUserIdAsync(string ticket, string userId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLinkListByUserId", new object[] {
                        ticket,
                        userId,
                        message}, this.GetFormModuleFunctionUserLinkListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkListByUserIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkListByUserIdCompleted(this, new GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionRoleLinkListByRoleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionRoleLinkListByRoleId(string ticket, string _listRoleId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionRoleLinkListByRoleId", new object[] {
                        ticket,
                        _listRoleId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkListByRoleIdAsync(string ticket, string _listRoleId, string message) {
            this.GetFormModuleFunctionRoleLinkListByRoleIdAsync(ticket, _listRoleId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkListByRoleIdAsync(string ticket, string _listRoleId, string message, object userState) {
            if ((this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted == null)) {
                this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionRoleLinkListByRoleId", new object[] {
                        ticket,
                        _listRoleId,
                        message}, this.GetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionRoleLinkListByRoleIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionRoleLinkListByRoleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionRoleLinkListByRoleIdCompleted(this, new GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLink(string ticket, int functionId, string uerId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLink", new object[] {
                        ticket,
                        functionId,
                        uerId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkAsync(string ticket, int functionId, string uerId, string message) {
            this.GetFormModuleFunctionUserLinkAsync(ticket, functionId, uerId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkAsync(string ticket, int functionId, string uerId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLink", new object[] {
                        ticket,
                        functionId,
                        uerId,
                        message}, this.GetFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkCompleted(this, new GetFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionRoleLinkByModuleFunctionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionRoleLinkByModuleFunctionId(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionRoleLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionRoleLinkByModuleFunctionIdAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted == null)) {
                this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionRoleLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionRoleLinkByModuleFunctionIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionRoleLinkByModuleFunctionIdCompleted(this, new GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormModuleFunctionUserLinkByModuleFunctionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormModuleFunctionUserLinkByModuleFunctionId(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("GetFormModuleFunctionUserLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(string ticket, int functionId, string message) {
            this.GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void GetFormModuleFunctionUserLinkByModuleFunctionIdAsync(string ticket, int functionId, string message, object userState) {
            if ((this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted == null)) {
                this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted);
            }
            this.InvokeAsync("GetFormModuleFunctionUserLinkByModuleFunctionId", new object[] {
                        ticket,
                        functionId,
                        message}, this.GetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted, userState);
        }
        
        private void OnGetFormModuleFunctionUserLinkByModuleFunctionIdOperationCompleted(object arg) {
            if ((this.GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormModuleFunctionUserLinkByModuleFunctionIdCompleted(this, new GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFormModuleFunction(string ticket, int functionId, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message});
            message = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionAsync(string ticket, int functionId, string message) {
            this.DeleteFormModuleFunctionAsync(ticket, functionId, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionAsync(string ticket, int functionId, string message, object userState) {
            if ((this.DeleteFormModuleFunctionOperationCompleted == null)) {
                this.DeleteFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunction", new object[] {
                        ticket,
                        functionId,
                        message}, this.DeleteFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionCompleted(this, new DeleteFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunction(string ticket, string _ynFormModuleFunction, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message) {
            this.SaveFormModuleFunctionAsync(ticket, _ynFormModuleFunction, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message, object userState) {
            if ((this.SaveFormModuleFunctionOperationCompleted == null)) {
                this.SaveFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message}, this.SaveFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionCompleted(this, new SaveFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunction(string ticket, string _ynFormModuleFunction, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message) {
            this.UpdateFormModuleFunctionAsync(ticket, _ynFormModuleFunction, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionAsync(string ticket, string _ynFormModuleFunction, string message, object userState) {
            if ((this.UpdateFormModuleFunctionOperationCompleted == null)) {
                this.UpdateFormModuleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunction", new object[] {
                        ticket,
                        _ynFormModuleFunction,
                        message}, this.UpdateFormModuleFunctionOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionCompleted(this, new UpdateFormModuleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.SaveFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.SaveFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.SaveFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.SaveFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionUserLinkCompleted(this, new SaveFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.DeleteFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.DeleteFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.DeleteFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.DeleteFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionUserLinkCompleted(this, new DeleteFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunctionUserLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunctionUserLink(string ticket, string _listYnFormModuleFunctionUserLink, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message) {
            this.UpdateFormModuleFunctionUserLinkAsync(ticket, _listYnFormModuleFunctionUserLink, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionUserLinkAsync(string ticket, string _listYnFormModuleFunctionUserLink, string message, object userState) {
            if ((this.UpdateFormModuleFunctionUserLinkOperationCompleted == null)) {
                this.UpdateFormModuleFunctionUserLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionUserLinkOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunctionUserLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionUserLink,
                        message}, this.UpdateFormModuleFunctionUserLinkOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionUserLinkOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionUserLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionUserLinkCompleted(this, new UpdateFormModuleFunctionUserLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("SaveFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.SaveFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void SaveFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.SaveFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.SaveFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("SaveFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.SaveFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnSaveFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.SaveFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormModuleFunctionRoleLinkCompleted(this, new SaveFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("DeleteFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.DeleteFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void DeleteFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.DeleteFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.DeleteFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.DeleteFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnDeleteFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.DeleteFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormModuleFunctionRoleLinkCompleted(this, new DeleteFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFormModuleFunctionRoleLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFormModuleFunctionRoleLink(string ticket, string _listYnFormModuleFunctionRoleLink, ref string message) {
            object[] results = this.Invoke("UpdateFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message) {
            this.UpdateFormModuleFunctionRoleLinkAsync(ticket, _listYnFormModuleFunctionRoleLink, message, null);
        }
        
        /// <remarks/>
        public void UpdateFormModuleFunctionRoleLinkAsync(string ticket, string _listYnFormModuleFunctionRoleLink, string message, object userState) {
            if ((this.UpdateFormModuleFunctionRoleLinkOperationCompleted == null)) {
                this.UpdateFormModuleFunctionRoleLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormModuleFunctionRoleLinkOperationCompleted);
            }
            this.InvokeAsync("UpdateFormModuleFunctionRoleLink", new object[] {
                        ticket,
                        _listYnFormModuleFunctionRoleLink,
                        message}, this.UpdateFormModuleFunctionRoleLinkOperationCompleted, userState);
        }
        
        private void OnUpdateFormModuleFunctionRoleLinkOperationCompleted(object arg) {
            if ((this.UpdateFormModuleFunctionRoleLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormModuleFunctionRoleLinkCompleted(this, new UpdateFormModuleFunctionRoleLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UserAuthenticationCompletedEventHandler(object sender, UserAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string encryptTicket {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCountCompletedEventHandler(object sender, GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaxIdCompletedEventHandler(object sender, GetMaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetObjectCompletedEventHandler(object sender, GetObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserBaseInfoCompletedEventHandler(object sender, GetUserBaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveUserCompletedEventHandler(object sender, SaveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsAdministratorCompletedEventHandler(object sender, IsAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserListNotInModuleFunctionCompletedEventHandler(object sender, GetUserListNotInModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListNotInModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListNotInModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserRoleLinkListByRoleIdCompletedEventHandler(object sender, GetUserRoleLinkListByRoleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleLinkListByRoleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleLinkListByRoleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserRoleLinkListByUserIdCompletedEventHandler(object sender, GetUserRoleLinkListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleLinkListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleLinkListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleListNotInModuleFunctionCompletedEventHandler(object sender, GetRoleListNotInModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListNotInModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListNotInModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleListCompletedEventHandler(object sender, GetRoleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveRoleCompletedEventHandler(object sender, SaveRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateRoleCompletedEventHandler(object sender, UpdateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, DeleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleListInUserCompletedEventHandler(object sender, GetRoleListInUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleListInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleListInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPositionListCompletedEventHandler(object sender, GetPositionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPositionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPositionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SavePositionCompletedEventHandler(object sender, SavePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePositionCompletedEventHandler(object sender, UpdatePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeletePositionCompletedEventHandler(object sender, DeletePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDepartmentListCompletedEventHandler(object sender, GetDepartmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveDepartmentCompletedEventHandler(object sender, SaveDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateDepartmentCompletedEventHandler(object sender, UpdateDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteDepartmentCompletedEventHandler(object sender, DeleteDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDepartmentPositionLinkCompletedEventHandler(object sender, GetDepartmentPositionLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentPositionLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentPositionLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveDepartmentPositionLinkListCompletedEventHandler(object sender, SaveDepartmentPositionLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDepartmentPositionLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDepartmentPositionLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteDepartmentPositionLinkListCompletedEventHandler(object sender, DeleteDepartmentPositionLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentPositionLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentPositionLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormMainMenuListCompletedEventHandler(object sender, GetFormMainMenuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormMainMenuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormMainMenuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormSubMenuCompletedEventHandler(object sender, GetFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormSubMenuListCompletedEventHandler(object sender, GetFormSubMenuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormSubMenuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormSubMenuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFormMainMenuCompletedEventHandler(object sender, SaveFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFormMainMenuCompletedEventHandler(object sender, UpdateFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFormMainMenuCompletedEventHandler(object sender, DeleteFormMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFormSubMenuCompletedEventHandler(object sender, SaveFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFormSubMenuCompletedEventHandler(object sender, UpdateFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFormSubMenuCompletedEventHandler(object sender, DeleteFormSubMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormSubMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormSubMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionCompletedEventHandler(object sender, GetFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionListCompletedEventHandler(object sender, GetFormModuleFunctionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionListNotInYnUserCompletedEventHandler(object sender, GetFormModuleFunctionListNotInYnUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListNotInYnUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListNotInYnUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionListNotInYnRoleCompletedEventHandler(object sender, GetFormModuleFunctionListNotInYnRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionListNotInYnRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionListNotInYnRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionUserLinkListByUserIdCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventHandler(object sender, GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionRoleLinkListByRoleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionUserLinkCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventHandler(object sender, GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionRoleLinkByModuleFunctionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventHandler(object sender, GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormModuleFunctionUserLinkByModuleFunctionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFormModuleFunctionCompletedEventHandler(object sender, DeleteFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFormModuleFunctionCompletedEventHandler(object sender, SaveFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFormModuleFunctionCompletedEventHandler(object sender, UpdateFormModuleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFormModuleFunctionUserLinkCompletedEventHandler(object sender, SaveFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFormModuleFunctionUserLinkCompletedEventHandler(object sender, DeleteFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFormModuleFunctionUserLinkCompletedEventHandler(object sender, UpdateFormModuleFunctionUserLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionUserLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionUserLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFormModuleFunctionRoleLinkCompletedEventHandler(object sender, SaveFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFormModuleFunctionRoleLinkCompletedEventHandler(object sender, DeleteFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateFormModuleFunctionRoleLinkCompletedEventHandler(object sender, UpdateFormModuleFunctionRoleLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormModuleFunctionRoleLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormModuleFunctionRoleLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591